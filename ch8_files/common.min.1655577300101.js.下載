(function(){

	let pathname = location.pathname;
	if(pathname.substring(pathname.lastIndexOf('/')+1).indexOf('8')!=-1||
	pathname.substring(pathname.lastIndexOf('/')+1).indexOf('ch0')!=-1||
	pathname.substring(pathname.lastIndexOf('/')+1).indexOf('chs0')!=-1||
	pathname.substring(pathname.lastIndexOf('/')+1).indexOf('en0')!=-1||
	pathname.substring(pathname.lastIndexOf('/')+1).indexOf('pt0')!=-1
	)filterAddress();

	if(!sessionStorage.filterAddress)filterAddress();
	else setTimeout(() => {sessionStorage.removeItem('filterAddress');},120000);

	//添加動態變量
	// if(location.href.indexOf('&t=') ==-1&&location.href.indexOf('?t=') ==-1){
	// 	if(location.href.indexOf('?') ==-1){
	// 		location.href=location.href+"?t="+new Date().getTime();
	// 	}else{
	// 		location.href=location.href+"&t="+new Date().getTime();
	// 	}
	// }
}())

// 公共方法
//获取请求url
function getUrl(){
	return '../../channel/http.do';
}

//过滤地址：9位的00结尾
function filterAddress(){
	sessionStorage.filterAddress = 'N';
	for (let key in localStorage) {
		if (key.indexOf("healthdeclaration") != -1) {
			let d = JSON.parse(localStorage[key]);
			if(d.selectAddrType&&d.selectAddrType=='select0'&&d.residentialAddress!=''){
				let addrMap = JSON.parse(d.residentialAddress)
				let code = addrMap.buildingID;
				//全部过滤
				// if(code&&code.length==9&&code.indexOf('00')==7){

				//分批过滤
				let num = {
					'7112841':'N',

					'500012600':'N',
				}
				if(num[code]){
					d.forceChange = 'pop';
					d.selectAddrType = '';
					d.residentialAddress = '';
					localStorage[key] = JSON.stringify(d);
				}
			}else{
				localStorage[key] = JSON.stringify(d);
			}
		}
	}
}

//get 逗留性质
function getNatureOfStayValue(id){
	let natureOfStay ='.natureOfStay';
	if(id) natureOfStay = '#'+id+' .natureOfStay';
	let natureOfStayList = $(natureOfStay).find('input');
	let nos = '';
	for(let i = 0 ;i<natureOfStayList.length ;i++){
		if($(natureOfStayList[i]).prop('checked')){
			nos = $(natureOfStayList[i]).prop('value');
		}
	}
	return nos;
}
//set 逗留性质
function setNatureOfStayValue(tempData,id){
	let natureOfStay ='.natureOfStay';
	if(id) natureOfStay = '#'+id+' .natureOfStay';
	let natureOfStayList = $(natureOfStay).find('input');
	let value =tempData['natureOfStay'];
	for(let i = 0 ;i<natureOfStayList.length ;i++){
		for(let k = 0 ;k<value.length ;k++){
			if($(natureOfStayList[i]).prop('value') == value[k]) $(natureOfStayList[i]).prop('checked',true);
		}
	}
}

//init 逗留性质
function initNatureOfStay(){
	let natureOfStayList = $('.natureOfStay').find('input');
	for(let i = 0 ;i<natureOfStayList.length ;i++){
		$(natureOfStayList[i]).on('change',function(e){
			let elm = $(e.target).parent().parent().parent().find('input');
			for(let k = 0 ;k<elm.length ;k++){
				$(elm[k]).prop('checked',false);
			}
			$(e.target).prop('checked',true);
		})
	}
}

//check 逗留性质
function checkNatureOfStayValue(id){
	let natureOfStay ='.natureOfStay';
	if(id) natureOfStay = '#'+id+' .natureOfStay';
	let natureOfStayList = $(natureOfStay).find('input');
	let check = false;
	for(let i = 0 ;i<natureOfStayList.length ;i++){
		if($(natureOfStayList[i]).prop('checked'))check = true;
	}
	if(check)hideErr($(natureOfStay));
	else showErr($(natureOfStay));
	return check;
}


//打開新頁
function myAssign(url) {
	window.location.assign(url + '?time=' + new Date().getTime());
}
//替換當前頁
function myReplace(url) {
	window.location.replace(url + '?time=' + new Date().getTime());
}
//替換當前頁
function myReplace2(url) {
	var lang = getAppConfig().lang;	
	let langurl =  {
		'ch':'TradChin/',
		'chs':'SimChin/',
		'pt':'PT/',
		'en':'Eng/',
		'':'TradChin/'
	};	
	
	// window.location.replace('../'+ langurl[lang] + url + '?time=' + new Date().getTime());
	window.location.replace('https://app.ssm.gov.mo/phdapp/page/'+ langurl[lang] + url + '?time=' + new Date().getTime());
	// window.location.replace(url + '?time=' + new Date().getTime());
}

//核酸检测结果
function nucleicAcidResults(elm) {
	if (sessionStorage.img) {
		try {
			var temp = JSON.parse(sessionStorage.img);
			temp = temp.personList[JSON.parse(elm.prop('id'))];
			sessionStorage.setItem('nucleicAcidResults', JSON.stringify(temp));
			location.assign('./nucleicAcidResults_' + getAppConfig().lang + '.html?time=' + new Date().getTime());

			return;
			let _t = new Date().getTime();
			var data = {
				"header": {
					"service": "formService/queryToGDInfo",
					"staticData": false,
					"_t": _t
				},
				"payload": encrypt(JSON.stringify({
					"cardType": temp.personList[elm.prop('id')].cardType,
					"cardId": temp.personList[elm.prop('id')].cardId,
					'passKyc': temp.personList[elm.prop('id')].passKyc
				}), _t+''+'123'),
			};

			$(".hidebg").css("height", document.body.scrollHeight);
			$(".probg").css("top", (document.body.clientHeight) / 2);
			document.body.scrollTop = 0;
			$(".submitWait").removeClass("hide");
			$("body").css("overflow", "hidden");

			$.ajax({
				type: "post",
				async: true,
				url: getUrl(),
				data: JSON.stringify(data),
				contentType: "text/xml",
				dataType: "json",
				success: function(data) {
					isSubmit = false;
					hideLoading();
					$("body").attr("style", "");
					if(data.result)data.result = JSON.parse(decrypt(data.result, data.serialNo.substring(0,16)));
					if (data.success) {
						var d = JSON.parse(sessionStorage.img);
						var p = d.personList[elm.prop('id')];
						var tp = JSON.parse(p.telphone);
						var tel_type = '';
						var tel_macau = '';
						var tel_china = '';
						var tel_hongkong = '';
						var tel_taiwan = '';
						var tel_areacode = '';
						var tel_other = '';
						for (let ii = 0; ii < tp.length; ii++) {
							if (tel_type == '') tel_type = tp[ii].area;
							else tel_type += ',' + tp[ii].area;
							if ('macau' == tp[ii].area) tel_macau = tp[ii].no;
							else if ('china' == tp[ii].area) tel_china = tp[ii].no;
							else if ('hongkong' == tp[ii].area) tel_hongkong = tp[ii].no;
							else if ('taiwan' == tp[ii].area) tel_taiwan = tp[ii].no;
							else if ('other' == tp[ii].area) {
								tel_areacode = tp[ii].no.split(' ')[0];
								tel_other = tp[ii].no.split(' ')[1];
							}
						}

						var nucleicAcidResults = {
							data: p, //未转换数据
							idx: JSON.parse(elm.prop('id')), //数组标识
							idType: p.cardType == 'macauCard' ? 'macauCard' : 'othCard',
							idcardType: p.cardType == 'macauCard' ? '' : p.cardType,
							idNum: p.cardId,
							givenname: p.prename,
							surname: p.name,
							sex: p.sex,
							dob_year: p.birthDate.split('-')[0],
							dob_month: p.birthDate.split('-')[1],
							dob_day: p.birthDate.split('-')[2],
							tel_type: tel_type,
							tel_macau: tel_macau,
							tel_china: tel_china,
							tel_hongkong: tel_hongkong,
							tel_taiwan: tel_taiwan,
							tel_areacode: tel_areacode,
							tel_other: tel_other,
							symptom: p.uncomfortable,
							abefore_place: p.reachArea,
							symptau: p.hadTouch,
							person: {
								identity: p.identity
							},
							secCardType: data.result.secCardType,
							secCardId: data.result.secCardId,
							'ch_idcard': data.result.secCardType == 'ch_idcard' ? data.result.secCardId : '', //中国居民身份证
							"hc": data.result.secCardType == 'hc' ? data.result.secCardId : '' //回乡证
						}
						nucleicAcidResults = $.extend(nucleicAcidResults, data.result);
						sessionStorage.setItem('nucleicAcidResults', JSON.stringify(nucleicAcidResults));
						location.assign('./nucleicAcidResults_' + getAppConfig().lang + '.html?time=' + new Date().getTime());
					} else {
						var message = '系統繁忙，請稍後再試。';
						scrollTo(0, 0);
						if (data.result){
							if (data.result.kycResult == 'N') {
								message = data.result.name + '個人資料核實錯誤，請確認填寫信息。';
								setTimeout(() => {
									isSubmit = false;
								}, 4000);
							} else if (!data.result.Result) {} else if (data.result.Result == 'NO_ENTER') {
								message = data.result.name + '今日無申報記錄，請先作申報。';
								setTimeout(() => {
									isSubmit = false;
								}, 4000);
							} else if (data.result.Result == 'HAD_QUIT') {
								message = data.result.name + '已離場，請勿重複操作';
								setTimeout(() => {
									isSubmit = false;
								}, 4000);
							} else if (data.result.Result == 'EXPIRED_POSITION') {
								message = '二維碼已失效';
								setTimeout(() => {
									isSubmit = false;
								}, 4000);
							}
						}else if(data.message){
							message = data.message;
						}
						smalltips(message, {
							bg: "bg-red text-white padding-lg"
						})
					}
				},
				error: function(data) {
					hideLoading();
					$("body").attr("style", "");
					isSubmit = false;
				},
			});
		} catch (e) {
			console.log(e)
			isSubmit = false;
		}
	}
}

//当前时间
function getDateT(mun) {
	var date = new Date();
	var formatedYear = date.getFullYear();
	var formatedMonth = ("0" + (date.getMonth() + 1)).slice(-2);
	var formatedDay = ("0" + (date.getDate())).slice(-2);
	var formatedHours = date.getHours();
	var formatedMinutes = ("0" + date.getMinutes()).slice(-2);
	var formatedSeconds = ("0" + date.getSeconds()).slice(-2);
	var date1 = formatedYear + "-" + formatedMonth + "-" + formatedDay + " " + formatedHours + ":" + formatedMinutes + ":" +
		formatedSeconds;
	var div1 = document.getElementById(mun);
	div1.innerHTML = date1;
}


/*
 * 外游史题目相关通用方法
 * 20/5/21
 */
//内地选项变更
function domestic(elm) {
	if (elm.prop('checked')) {
		addDomestic();
		$('#add-domestic').removeClass('hide');
		$('#domestic-msg').removeClass('hide');
	} else {
		$('[name=domestic]').remove();
		$('#add-domestic').addClass('hide');
		$('#domestic-msg').addClass('hide');
	}
}

//外国选项变更
function foreign(elm) {
	if (elm.prop('checked')) {
		addforeign();
		$('#add-foreign-btn').removeClass('hide');
	} else {
		$('[name=foreign]').parent().parent().parent().remove();
		$('#add-foreign-btn').addClass('hide');
	}
}

function hkdisplay(elm) {
	if (elm.prop('checked')) {
		$('#hkdate').removeClass('hide');
		$("[name='cat_6dp']").focus();
	} else {
		$('#hkdate').addClass('hide');
		$("[name='cat_6dp']").prop('value', '');
		clearDateTips($("[name='cat_6dp']"));
	}
}

function twdisplay(elm) {
	if (elm.prop('checked')) {
		$('#twdate').removeClass('hide');
		$("[name='cat_7dp']").focus();
	} else {
		$('#twdate').addClass('hide');
		$("[name='cat_7dp']").prop('value', '');
		clearDateTips($("[name='cat_7dp']"));
	}
}

var selectIdx = 0;
//新增内地选卡
function addDomestic() {
	var lang = getAppConfig().lang;
	var title = {
		'ch': '請在列表中選擇一項',
		'chs': '请在列表中选择一项',
		'pt': 'Seleccione um dos itens listados',
		'en': 'Choose one from the list'
	}
	$('#add-domestic').before('<div name="domestic" class="col-xs-12 col-sm-12" style="padding:0px;margin-bottom: 2px;">' +
		'<div class="col-xs-6 col-sm-3" style="padding:1px;margin-bottom: 2px;">' +
		'<select id="' + selectIdx + '" class="form-control sbfs" name="province" required="" title="' + title[lang] +
		'" style="margin-bottom: 0;"></select>' +
		'</div>' +
		'<div class="col-xs-6 col-sm-3" style="padding:1px;margin-bottom: 2px;">' +
		'<select id="' + selectIdx + '" class="form-control sbfs" name="city" required="" title="' + title[lang] +
		'" style="margin-bottom: 0;"></select>' +
		'</div>' +
		'<div class="col-xs-6 col-sm-3" style="padding:1px;margin-bottom: 2px;">' +
		'<input id="' + selectIdx + '" class="form-control ibfs" type="date" style="height:34px;" name="citydate" required="" onblur="validDateRange($(this),14)">' +
		'</div>' +
		'<div class="col-xs-3 col-sm-2" style="padding:1px;margin-bottom: 2px;">' +
		'&nbsp;' +
		'</div>' +
		'<div class="col-xs-3 col-sm-1" style="padding:1px;margin-bottom: 2px;">' +
		'<button class="btn btn-default btn-block" style="max-width: 40px;height:34px;float:right;" onclick="del($(this))"><i class="fa fa-remove"></i></button>' +
		'</div>'+
		'</div>');
	$('select[id=' + selectIdx + '][name=city]').prop('disabled', true);
	$('select[id=' + selectIdx + '][name=province]').on('change', function(e) {
		if ('' == $(e.target).prop('value')) $('select[id=' + $(e.target).prop('id') + '][name=city]').prop('disabled',
			true).prop('value', '');
		else $('select[id=' + $(e.target).prop('id') + '][name=city]').prop('disabled', false).prop('value', ''), setCity($(
			'select[id=' + $(e.target).prop('id') + '][name=city]'), $(e.target).prop('value'));
	});
	$('select[id=' + selectIdx + '][name=city]').on('change', function(e) {
		// 防重复选择城市
		var v = $(e.target).prop('value');
		$('[name="domestic"]').each((i) => {
			if ($($('[name="domestic"]')[i]).find('[name=city]').prop('id') != $(e.target).prop('id') && $($(
					'[name="domestic"]')[i]).find('[name=city]').prop('value') == v) {
				$(e.target).prop('value', '');
			}
		});
	});
	setProvince($('select[id=' + selectIdx + '][name=province]'));
	var cs = {
		'ch': '城市',
		'chs': '城市',
		'pt': 'Cidade',
		'en': 'Cities',
	}
	$('select[id=' + selectIdx + '][name=city]').append('<option value="">' + cs[lang] + '</option>');
	selectIdx++;


	// $('select[name=city]').selectpicker('val',"");
	// $('select[name=city]').selectpicker('setStyle','my-selet-button');
	// $('select[name=city]').selectpicker('refresh');
	// $('select[name=city]').selectpicker('render');
	// $('select[name=province]').selectpicker('val',"");
	// $('select[name=province]').selectpicker('setStyle','my-selet-button');
	// $('select[name=province]').selectpicker('refresh');
	// $('select[name=province]').selectpicker('render');

}

var selectIdx2 = 0;
//新增外国选卡
function addforeign() {
	var lang = getAppConfig().lang;
	var title = {
		'ch': '國家',
		'chs': '国家',
		'pt': 'Países',
		'en': 'Countries',
	}
	var hot = {
		'ch': '熱門國家',
		'chs': '热门国家',
		'pt': 'Países populares',
		'en': 'Popular Countries',
	}
	var other = {
		'ch': '其他國家',
		'chs': '其他国家',
		'pt': 'Outros países',
		'en': 'Other Countries',
	}

	$('#add-foreign').before('<div name="foreigndiv" class="col-xs-12 col-sm-12" style="padding:0px;margin-bottom: 2px;">' +
		'<div class="col-xs-12 col-sm-6" style="padding:1px;margin-bottom: 2px;">' +
		'<select id="' + selectIdx2 + '" class="form-control sbfs" name="foreign" required="" title="' + title[lang] +
		'" style="margin-bottom: 0;">' +
		'<optgroup id="hot" label="' + hot[lang] + '" ></optgroup>' +
		'<optgroup id="other" label="' + other[lang] + '" ></optgroup>' +
		'</select>' +
		'</div>' +
		'<div class="col-xs-6 col-sm-3" style="padding:1px;margin-bottom: 2px;">' +
		'<input id="' + selectIdx2 + '" class="form-control ibfs" type="date" style="height:34px;" name="foreigndate" required="" onblur="validDateRange($(this),21)">' +
		'</div>' +
		'<div class="col-xs-3 col-sm-2" style="padding:1px;margin-bottom: 2px;">' +
		'&nbsp;' +
		'</div>' +
		'<div class="col-xs-3 col-sm-1" style="padding:1px;margin-bottom: 2px;">' +
		'<button class="btn btn-default btn-block" style="max-width: 40px;height:34px;float:right;" onclick="delforeign($(this))"><i class="fa fa-remove"></i></button>' +
		'</div>'+
		'</div>');
		
	setforeign();
	selectIdx2++;
}

//初始化生成省份下拉框
function setProvince(elm) {
	var lang = getAppConfig().lang;
	var sf = {
		'ch': '省份',
		'chs': '省份',
		'pt': 'Província',
		'en': 'Provinces',
	}
	elm.append('<option value="">' + sf[lang] + '</option>');
	if (sessionStorage.queryRiskArea) {
		var r = JSON.parse(sessionStorage.queryRiskArea);
		if (r.result && r.result.province) {
			var province = r.result.province;
			var newProvince = [];
			//重新排序 直轄巿排第一
			for (let i = 0; i < province.length; i++) {
				if ('cat_227' == province[i].AREA_CODE) {
					newProvince.push(province[i]);
					break;
				}
			}
			for (let i = 0; i < province.length; i++) {
				if ('cat_227' != province[i].AREA_CODE) {
					newProvince.push(province[i]);
				}
			}
			for (let i = 0; i < newProvince.length; i++) {
				var key = {
					'ch': newProvince[i].AREA_NAME_T,
					'chs': newProvince[i].AREA_NAME,
					'pt': newProvince[i].AREA_NAME_P,
					'en': newProvince[i].AREA_NAME_E
				}
				elm.append('<option value="' + newProvince[i].AREA_CODE + '">' + key[lang] + '</option>');
			}
		}
	}
}

//初始化生成城市下拉框
function setCity(elm, AREA_CODE) {
	var lang = getAppConfig().lang;
	elm.find('option').remove();
	var cs = {
		'ch': '城市',
		'chs': '城市',
		'pt': 'Cidade',
		'en': 'Cities',
	}
	elm.append('<option value="">' + cs[lang] + '</option>');
	if (sessionStorage.queryRiskArea) {
		var r = JSON.parse(sessionStorage.queryRiskArea);
		if (r.result && r.result.city) {
			var city = r.result.city;
			for (let i = 0; i < city.length; i++) {
				if (AREA_CODE == city[i].PARENT_ID) {
					var key = {
						'ch': city[i].AREA_NAME_T,
						'chs': city[i].AREA_NAME,
						'pt': city[i].AREA_NAME_P,
						'en': city[i].AREA_NAME_E
					}
					elm.append('<option value="' + city[i].AREA_CODE + '">' + key[lang] + '</option>');
				}
			}
		}
	}
}

//初始化生成国家下拉框
function setforeign(parents) {
	var lang = getAppConfig().lang;
	if (sessionStorage.queryRiskArea) {
		var r = JSON.parse(sessionStorage.queryRiskArea);
		if (r.result && r.result.foreign) {
			var foreign = r.result.foreign;
			for (let i = 0; i < foreign.length; i++) {
				var key = {
					'ch': foreign[i].AREA_NAME_T + ' ' + foreign[i].AREA_NAME_E,
					'chs': foreign[i].AREA_NAME + ' ' + foreign[i].AREA_NAME_E,
					'pt': foreign[i].AREA_NAME_P,
					'en': foreign[i].AREA_NAME_E
				}
				if (parents) {
					if ('1' == foreign[i].IS_HOT) parents.find('optgroup[id=hot]').append('<option value="' + foreign[i].AREA_CODE +
						'" style="word-break: break-word;white-space: normal;" data-tokens="' + foreign[i].AREA_CODE + '">' + key[lang] +
						'</option>');
					else parents.find('optgroup[id=other]').append('<option value="' + foreign[i].AREA_CODE +
						'" style="word-break: break-word;white-space: normal;" data-tokens="' + foreign[i].AREA_CODE + '">' + key[lang] +
						'</option>');
				} else {
					if ('1' == foreign[i].IS_HOT) $('optgroup[id=hot]').append('<option value="' + foreign[i].AREA_CODE +
						'" style="word-break: break-word;white-space: normal;" data-tokens="' + foreign[i].AREA_CODE + '">' + key[lang] +
						'</option>');
					else $('optgroup[id=other]').append('<option value="' + foreign[i].AREA_CODE +
						'" style="word-break: break-word;white-space: normal;" data-tokens="' + foreign[i].AREA_CODE + '">' + key[lang] +
						'</option>');
				}
			}
		}
	}
	
	var noneResultsText = {
		'ch': '沒有匹配的結果',
		'chs': '没有匹配的结果',
		'pt': 'Nenhum Resultado correspondente',
		'en': 'No results matched'
	}
	$('select[name=foreign]').selectpicker({
		'noneResultsText': noneResultsText[lang]
	});
	$('select[name=foreign]').selectpicker('setStyle', 'my-selet-button');
	$('select[name=foreign]').selectpicker('setStyle', 'ibfs');
	$('select[name=foreign]').selectpicker('refresh');
	$('select[name=foreign]').selectpicker('render');
	
}

//删除选定的内地选卡
function del(elm) {
	if (elm.parent().parent().parent().find('select[name=province]').length > 1) elm.parent().parent().remove();
	else elm.parent().parent().find('input[name=citydate]').prop('value', ''), elm.parent().parent().find('select[name=province]').prop('value', ''), elm.parent().parent().find('select[name=city]').prop('value',
		'').prop('disabled', true);
}

//删除选定的外地选卡
function delforeign(elm) {
	if (elm.parent().parent().parent().find('select[name=foreign]').length > 1) elm.parent().parent().remove();
	else elm.parent().parent().find('input[name=foreigndate]').prop('value', ''), elm.parent().parent().find('select[name=foreign]').val(''), elm.parent().parent().find('select[name=foreign]').selectpicker("refresh");
}

//查询所有地区信息
function queryRiskArea() {
	var lang = getAppConfig().lang;
	try {
		let _t = new Date().getTime();
		var data = {
			"header": {
				"service": "sysService/queryRiskArea",
				"staticData": false,
				"_t": _t
			},
			"payload": encrypt(JSON.stringify({}), _t+''+'123'),
		};

		$(".hidebg").css("height", document.body.scrollHeight);
		$(".probg").css("top", (document.body.clientHeight) / 2);
		document.body.scrollTop = 0;
		$(".submitWait").removeClass("hide");
		$("body").css("overflow", "hidden");

		$.ajax({
			type: "post",
			async: false,
			url:getUrl(),
			data: JSON.stringify(data),
			contentType: "text/xml",
			dataType: "json",
			success: function(data) {
				isSubmit = false;
				hideLoading();
				$("body").attr("style", "");
				if(data.result)data.result = JSON.parse(decrypt(data.result, data.serialNo.substring(0,16)));
				if (data.success) {
					let t = []
					let m = {
						"cat_2074":"印度",
						"cat_2130":"巴基斯坦",
						"cat_2137":"菲律賓",
						"cat_2023":"尼泊爾",
						"cat_2120":"巴西",
					}
					data.result.foreign.map(i=>{
						if(m[i.AREA_CODE])t.push(i)
					})
					sessionStorage.setItem('queryRiskArea', JSON.stringify(data))
					sessionStorage.setItem('queryRiskArea2', JSON.stringify(t))
				} else {
					tips(data);
				}
			},
			error: function(data) {
				hideLoading();
				$("body").attr("style", "");
				isSubmit = false;
			},
		});
	} catch (e) {
		console.log(e)
	}
}

var underway = false;
//下载个人证件照片【base64】
function queryHasPicture(idx,callback) {
	if(underway){
		return;
	}else{
		underway = true;
	}
	var lang = getAppConfig().lang;
	let personListItem = JSON.parse(sessionStorage.img).personList[idx];
	try {
		if(personListItem.hasPicture){
			let _t = new Date().getTime();
			var data = {
				"header": {
					"service": "requestService/queryHasPicture",
					"staticData": false,
					"_t": _t
				},
				"payload": encrypt(JSON.stringify({
					// "cardId":personListItem.cardId,
					"cardId":"16052391",
					"cardType":personListItem.cardType
				}), _t+''+'123'),
			};

			$(".hidebg").css("height", document.body.scrollHeight);
			$(".probg").css("top", (document.body.clientHeight) / 2);
			document.body.scrollTop = 0;
			$(".submitWait").removeClass("hide");
			$("body").css("overflow", "hidden");

			$.ajax({
				type: "post",
				async: false,
				url: getUrl(),
				data: JSON.stringify(data),
				contentType: "text/xml",
				dataType: "json",
				success: function(data) {
					underway = false;
					hideLoading();
					$("body").attr("style", "");
					if(data.result)if(data.result)data.result = JSON.parse(decrypt(data.result, data.serialNo.substring(0,16)));
					if (data.result&&data.result.PICTURE) {
						let updata = JSON.parse(sessionStorage.img);
						updata.personList[idx].photo = data.result.PICTURE;
						sessionStorage.setItem('img',JSON.stringify(updata));
						callback(data.result.PICTURE);
					} else {
						tips(data);
					}
				},
				error: function(data) {
					hideLoading();
					$("body").attr("style", "");
					underway = false;
				},
			});
		}else{
			underway = false;
		}
	} catch (e) {
		console.log(e)
		underway = false;
	}
}

//请求返回报错提示
function tips(data) {
	var lang = getAppConfig().lang;
	var defaultText = {
		'ch': '系統繁忙，請稍後再試。',
		'chs': '系统繁忙，请稍后再试。',
		'pt': 'Sistema ocupado, por favor tente novamente mais tarde.',
		'en': 'System is busy, please try again later.'
	}
	var kycText = {
		'ch': '個人資料核實錯誤，請確認填寫信息。',
		'chs': '个人资料核实错误，请确认填写信息。',
		'pt': 'Erro verificado nos dados pessoais. Confirme as informações preenchidas.',
		'en': 'Personal information error, please check again.'
	}
	var NO_ENTER = {
		'ch': '今日無申報記錄，請先作申報。',
		'chs': '今日无申报记录，请先作申报。',
		'pt': 'Não há qualquer registo de declaração hoje, por favor proceda à sua declaração.',
		'en': 'There is no record of declaration for today, please make a declaration first.'
	}
	var HAD_QUIT = {
		'ch': '已離場，請勿重複操作',
		'chs': '已离场，请勿重复操作',
		'pt': 'Não repita a operação após o check-out. ',
		'en': 'Do not repeat the operation after checked out.'
	}
	var EXPIRED_POSITION = {
		'ch': '二維碼已失效',
		'chs': '二维码已失效',
		'pt': 'O código QR expirou',
		'en': 'QR code has expired'
	}
	var message = defaultText[lang];
	try {
		scrollTo(0, 0);
		if (data.result){
			if (data.result.kycResult == 'N') {
				message = data.result.name + kycText[lang];
			} else if (!data.result.Result) {} else if (data.result.Result == 'NO_ENTER') {
				message = data.result.name + NO_ENTER[lang];
			} else if (data.result.Result == 'HAD_QUIT') {
				message = data.result.name + HAD_QUIT[lang];
			} else if (data.result.Result == 'EXPIRED_POSITION') {
				message = EXPIRED_POSITION[lang];
			}
		}else if(data.message){
			message = data.message;
		}
	} catch (e) {
		message = data.message;
	}
	setTimeout(() => {
		isSubmit = false;
	}, 4000);
	smalltips(message, {
		bg: "bg-red text-white padding-lg"
	})
}

//顯示入境後地址及聯繫人填寫欄
function showContact() {
	// $('[name=visitPosition]').parent().parent().removeClass('hide');
	$('[name=contacterName]').parent().parent().removeClass('hide');
	$('[name=contacterTelno]').parent().parent().removeClass('hide');
}

//隱藏入境後地址及聯繫人填寫欄
function hideContact() {
	// $('[name=visitPosition]').val('').parent().parent().addClass('hide');
	$('[name=contacterName]').val('').parent().parent().addClass('hide');
	$('[name=contacterTelno]').val('').parent().parent().addClass('hide');
}

//有效期计算
function dateCalculation(startDate, endDate) {
	if (!endDate) endDate = new Date().getTime();
	//有效期7天
	let expireDate = '';
	expireDate = new Date(startDate + 1e3 * 60 * 60 * 24 * 7); 
	//有效期至第7天零时零分
	expireDate = expireDate.getFullYear()+'/'+("0" + (expireDate.getMonth() + 1)).slice(-2)+'/'+("0" + (expireDate.getDate())).slice(-2);
	expireDate =  new Date(expireDate).getTime(); 
	return endDate - expireDate < 0;
}

//预设联系信息
function setSupplement(arr){
	for (let i = 0; i < arr.length; i++) {
		if(!$('#'+arr[i].idNum+'_supplement').hasClass('hide')){
			// $('#'+arr[i].idNum +'_supplement [name=visitPosition]').prop('value',arr[i].visitPosition);
			$('#'+arr[i].idNum +'_supplement [name=contacterName]').prop('value',arr[i].contacterName);
			$('#'+arr[i].idNum +'_supplement [name=contacterTelno]').prop('value',arr[i].contacterTelno);
		}
	}
}

//姓名输入校验
function checkInputName(elm){
	let t = elm.prop('value').replace(/[`~!@#$%^&\*()_\-+=<>\?:"{}|,.\/;'\[\]·~！@#￥%……&*（）\-+={}|《》？：“”【】、；‘'，。、]/g,"");
    t = t.replace(/[0-9]/g,"");
	elm.prop('value',t);
}

//解码
function decode(code){
	try{
		var service = {
			'GD':"formService/executeDecodeGDInfo",
			'HK':"transferService/executeDecodeHKInfo",
		}
		let _t = new Date().getTime();
		var data = {
				"header": {
					"service": service[sessionStorage.source],
					"staticData": false,
					"_t": _t
				},
				"payload":encrypt(JSON.stringify({
					"encryStr":sessionStorage.credential
				}), _t+''+'123'),
			};
		showloading();
		
		$.ajax({
			type: "post",
			async: true,
			url: '../../channel/http.do'!=getUrl()?getUrl():"../channel/http.do",
			data: JSON.stringify(data),
			contentType: "text/xml",
			dataType: "json",
			success: function(data) {
				isSubmit = false;
				hideLoading();
				
				if(data.result)data.result = JSON.parse(decrypt(data.result, data.serialNo.substring(0,16)));
				if (data.success) {
					if (data.success) {
						//判断入口
						if('HK'==sessionStorage.source){
							HKTo(data);
						}else{
							GDTo(data);
						}
					}
				} else {
					var message = '系統繁忙，請稍後再試。';
					scrollTo(0,0);
					if (data.result){
						if(data.result.kycResult == 'N') {
							message = data.result.name+'個人資料核實錯誤，請確認填寫信息。';
						} else if(!data.result.Result){
						} else if(data.result.Result == 'NO_ENTER'){
							message = data.result.name+'今日無申報記錄，請先作申報。';
						} else if(data.result.Result == 'HAD_QUIT'){
							message = data.result.name+'已離場，請勿重複操作';
						} else if(data.result.Result == 'EXPIRED_POSITION'){
							message = '二維碼已失效';
						} else if(data.result.Result == 'NEED_FROM_GD'){
							message = '請通過粵康碼進行轉碼';
						}
					}else if(data.message){
						message = data.message;
					}
					setTimeout(() => {
						isSubmit = false;
					}, 4000);
					smalltips(message, {
						bg: "bg-red text-white padding-lg"
					})
				}
			},
			error: function(data) {
				hideLoading();
				
				isSubmit = false;
			},
		});
	}catch(e){
		console.log(e)
	}
}

//粤转澳
function GDTo(data){
	let idNum = data.result.info.claim.maCardId.replace('(','').replace(')','');
	let has = false;
	let today = new Date();
	let history = {};
	let update = false;
	today = new Date(today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate()).getTime();
	for (var key in localStorage) {
		if (key.indexOf(idNum) != -1) {
			has = true;
			let k = JSON.parse(localStorage[key]);
			history = k;
			// if(k.creationDate-today<=0||('macauCard'!=data.result.info.claim.maCardType && !dateCalculation(k.person.updateContacterMsg))){
			if(k.creationDate-today<=0||k.transferOut=='toGD'){
				update = true;
			}
		}
	}
	
	if(has && (undefined == data.result.info.claim.showType || '2' == data.result.info.claim.showType)){
		var p = data.result.info.claim;
		var tel_type=p.maPhoneNumber?'macau':'';
		tel_type += (p.cnPhoneNumber?tel_type==''?'china':',china':'');
		var pN = p.phoneNumber;
		var tel_macau=p.maPhoneNumber;
		if(!p.maPhoneNumber&&pN&&pN.indexOf('+853')!=-1){
			tel_macau = pN.substring(pN.indexOf('+853')+5);
			if(''==tel_type)tel_type = 'macau';
		}
		var tel_china=p.cnPhoneNumber;
		if(!p.cnPhoneNumber&&pN&&pN.indexOf('+86')!=-1){
			tel_china = pN.substring(pN.indexOf('+86')+4);
			if(''==tel_type)tel_type = 'china';
		}
		var tel_hongkong='';
		if(!p.cnPhoneNumber&&pN&&pN.indexOf('+852')!=-1){
			tel_hongkong = pN.substring(pN.indexOf('+852')+5);
			if(''==tel_type)tel_type = 'hongkong';
		}
		var tel_taiwan='';
		var tel_areacode='';
		var tel_other='';
		if(update){
			history.comeFrom = sessionStorage.params&&JSON.parse(sessionStorage.params)&&JSON.parse(sessionStorage.params).rg?JSON.parse(sessionStorage.params).rg.toUpperCase():'',
			history.transferOut = '',
			history.tel_type = tel_type;
			history.tel_macau = tel_macau;
			history.tel_china = tel_china;
			history.tel_hongkong = tel_hongkong;
			history.tel_taiwan = tel_taiwan;
			history.tel_areacode = tel_areacode;
			history.tel_other = tel_other;
			history.surname = p.name;
			history.idType = p.maCardType =='macauCard'?'macauCard':'othCard';
			history.idcardType = p.maCardType =='macauCard'?'':p.maCardType;
			history.idNum = p.maCardId.replace('(','').replace(')','');
			history.sex = p.sex;
			history.dob_year = p.birthDate.substring(0,4);
			history.dob_month = p.birthDate.substring(4,6).charAt(0)=='0'?p.birthDate.substring(5,6):p.birthDate.substring(4,6);
			history.dob_day = p.birthDate.substring(6).charAt(0)=='0'?p.birthDate.substring(7):p.birthDate.substring(6);
			history.natArea = p.natArea;
			history.natAgency = p.natLocation;
			history.natExpireDate = p.natExpireDate;
			history.nat = p.nat;//核酸结果
			history.natDate = p.natDate;//核酸日期
			history.secCardType = p.cnCardType;
			history.secCardId = p.cnCardId;
			history.kycLevel = p.level;	//用于入境的ID的KYC强度
							// 0 - 表明没有通过任何方式认证过与核酸检查的身份ID的关联性 
							// 5 - 表明有海关工作人员手工检查过natCardId与entryCardId之间的关联性 
							// 9 - 表明通过可信接口（例如公安局的接口）检查过natCardId与entryCardId之间的关联性	
			history.otp = p.otp;//Y - 表明通过OTP确认过 N - 表明没有通过OTP确认过
			history.whitelistStatus = p.whitelistStatus;	//表明这个居民是否在凭证 issuer 政府的白名单（赦免名单）中。例如如果HK将一个居民标记为白名单，则isWhitelisted这个字段填1，然后这个居民是否能去GD，由HK跟GD线下协商是否承认HK的白名单标记。
												// 0 - 表明不在白名单中，这种情况下whitelistDate直接留空即可。
												// 1 - 表明在白名单中，然后白名单的生效时间由whitelistDate指定。
			history.whitelistDate = p.whitelistDate;	//免检名单发出日期((yyyyMMdd)
			history.whitelistIssuer = p.whitelistIssuer;	//这个用户所在白名单的发行地，例如是hk，表明是香港将这个用户放入白名单的。
			history.visitPosition = p.visitPosition;
			history.contacterName = p.contacterName;
			history.contacterTelno = p.contacterTelno;
			sessionStorage.setItem('dataNotUpdated', JSON.stringify({'key': [history]}));
			if(localStorage.lang){
				if('ch' == localStorage.lang)myReplace('./TradChin/ch9_fromGD.html');
				else if('chs' == localStorage.lang)myReplace('./SimChin/chs9_fromGD.html');
				else if('pt' == localStorage.lang)myReplace('./PT/pt9_fromGD.html');
				else if('en' == localStorage.lang)myReplace('./Eng/en9_fromGD.html');
			}else myReplace('./TradChin/ch9_fromGD.html');
		}else{
			let cacheFormData = {};
			cacheFormData = {
				comeFrom:sessionStorage.params&&JSON.parse(sessionStorage.params)&&JSON.parse(sessionStorage.params).rg?JSON.parse(sessionStorage.params).rg.toUpperCase():'',
				transferOut:'',
				accessPort:sessionStorage.params&&JSON.parse(sessionStorage.params)&&'gd'==JSON.parse(sessionStorage.params).rg?'GD':'MA',
				idType:p.maCardType =='macauCard'?'macauCard':'othCard',
				idcardType:p.maCardType =='macauCard'?'':p.maCardType,
				idNum:p.maCardId?p.maCardId.replace('(','').replace(')',''):p.maCardId,
				givenname:p.prename?p.prename:'',
				surname:p.name,
				sex:p.sex,
				dob_year:p.birthDate.substring(0,4),
				dob_month:p.birthDate.substring(4,6).charAt(0)=='0'?p.birthDate.substring(5,6):p.birthDate.substring(4,6),
				dob_day:p.birthDate.substring(6).charAt(0)=='0'?p.birthDate.substring(7):p.birthDate.substring(6),
				tel_type:tel_type,
				tel_macau:tel_macau,
				tel_china:tel_china,
				tel_hongkong:tel_hongkong,
				tel_taiwan:tel_taiwan,
				tel_areacode:tel_areacode,
				tel_other:tel_other,
				
				symptom:history.symptom,
				abefore_place:history.abefore_place,
				symptau:history.symptau,
				person:history.person,
				SMSVerificationResults:history.SMSVerificationResults,
				city: history.city,
				citydate: history.citydate,
				foreign:history.foreign,
				foreigndate: history.foreigndate,
				cat_6dp: history.cat_6dp,
				cat_7dp: history.cat_7dp,
				clause: history.clause,
				creationDate: new Date().getTime(),
				identity:history.identity,
				province: history.province,
				verifytoken: history.verifytoken,
				
				natArea: p.natArea,
				natAgency: p.natLocation,
				natExpireDate:p.natExpireDate,
				nat:p.nat,//核酸结果
				natDate:p.natDate,//核酸日期
				secCardType:p.cnCardType,
				secCardId:p.cnCardId,
				
				kycLevel:p.level,	//用于入境的ID的KYC强度
								// 0 - 表明没有通过任何方式认证过与核酸检查的身份ID的关联性 
								// 5 - 表明有海关工作人员手工检查过natCardId与entryCardId之间的关联性 
								// 9 - 表明通过可信接口（例如公安局的接口）检查过natCardId与entryCardId之间的关联性	
				otp:p.otp,//Y - 表明通过OTP确认过 N - 表明没有通过OTP确认过
				whitelistStatus:p.whitelistStatus,	//表明这个居民是否在凭证 issuer 政府的白名单（赦免名单）中。例如如果HK将一个居民标记为白名单，则isWhitelisted这个字段填1，然后这个居民是否能去GD，由HK跟GD线下协商是否承认HK的白名单标记。
													// 0 - 表明不在白名单中，这种情况下whitelistDate直接留空即可。
													// 1 - 表明在白名单中，然后白名单的生效时间由whitelistDate指定。
				whitelistDate:p.whitelistDate,	//免检名单发出日期((yyyyMMdd)
				whitelistIssuer:p.whitelistIssuer,	//这个用户所在白名单的发行地，例如是hk，表明是香港将这个用户放入白名单的。
				'visitPosition': p.visitPosition?p.visitPosition:history.visitPosition,
				'contacterName': p.contacterName?p.contacterName:history.contacterName,
				'contacterTelno':p.contacterTelno?p.contacterTelno: history.contacterTelno,
				'updateContacterMsg':history.updateContacterMsg,
				//活动地址信息
				activityAddress:history.activityAddress,
				//居住地址信息
				residentialAddress:history.residentialAddress,
				existingAddress:history.existingAddress,
				selectAddrType:history.selectAddrType,//地址选中
				//逗留性质
				natureOfStay:history.natureOfStay,
			};
			if((undefined == cacheFormData.tel_type || ''== cacheFormData.tel_type) && ''!=history.tel_type && undefined!=history.tel_type){
				cacheFormData.tel_type = history.tel_type;
				cacheFormData.tel_macau = history.tel_macau;
				cacheFormData.tel_china = history.tel_china;
				cacheFormData.tel_hongkong = history.tel_hongkong;
				cacheFormData.tel_taiwan = history.tel_taiwan;
				cacheFormData.tel_areacode = history.tel_areacode;
				cacheFormData.tel_other = history.tel_other;
			}
			sessionStorage.setItem('cacheFormData',JSON.stringify(cacheFormData));
			if(hideAddress&&(((sessionStorage.notChange && sessionStorage.changeKey == 'cacheFormData')) && undefined == save.next)||!cacheFormData.selectAddrType){
				//缓存临时数据
				cacheFormData.idx = 3;
				cacheFormData.next = 'submit';
				sessionStorage.setItem('tempData', JSON.stringify(cacheFormData));
				let lang = localStorage.lang;
				if('chs'==lang)myReplace("./SimChin/chs10.html");
				else if('pt'==lang)myReplace("./PT/pt10.html");
				else if('en'==lang)myReplace("./Eng/en10.html");
				else myReplace("./TradChin/ch10.html");
			}else {
				//直接提交
				directSubmission();
			}
		}
	}else{
		myReplace("./TradChin/ch3.html");
	}
}

//港转澳
function HKTo(data){
	let idNum = data.result.info.claim.entryCardId.replace('(','').replace(')','');
	let has = false;
	let today = new Date();
	let history = {};
	let update = false;
	today = new Date(today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate()).getTime();
	for (let key in localStorage) {
		if (key.indexOf(idNum) != -1) {
			has = true;
			let k = JSON.parse(localStorage[key]);
			history = k;
			if(k.creationDate-today<=0||k.transferOut=='toGD'){
				update = true;
			}
		}
	}


	if(has && (undefined == data.result.info.claim.showType || '2' == data.result.info.claim.showType)){
		var p = data.result.info.claim;
		// +86是中国大陆的 +852是香港的 +853是澳门的 +886是台湾的
		var phone = eval(p.phoneNumber);
		var tel_type = ''
		let telTypeVal = '';
		let telMap = new Map();
		for(let i=0;i<phone.length;i++){
			if(''==tel_type)tel_type = phone[i].area;
			else tel_type += ','+phone[i].area;
			telTypeVal += phone[i].area 
			telMap.set(phone[i].area,phone[i].no)
		}
		
		var tel_macau='';
		var tel_china= '';
		var tel_hongkong= '';
		var tel_taiwan= '';
		var tel_areacode= '';
		var tel_other= '';
		if(telTypeVal.indexOf('macau')!=-1){
			tel_macau = telMap.get('macau')
		}
		if(telTypeVal.indexOf('china')!=-1){
			tel_china = telMap.get('china')
		}
		if(telTypeVal.indexOf('hongkong')!=-1){
			tel_hongkong = telMap.get('hongkong')
		}
		if(telTypeVal.indexOf('taiwan')!=-1){
			tel_taiwan = telMap.get('taiwan')
		}
		if(telTypeVal.indexOf('other')!=-1){
			let t =  telMap.get('other').split('-');
			tel_areacode = t[0]
			tel_other = t[1]
		}
		
		if(update){
			history.comeFrom = sessionStorage.params&&JSON.parse(sessionStorage.params)&&JSON.parse(sessionStorage.params).rg?JSON.parse(sessionStorage.params).rg.toUpperCase():'';
			history.transferOut = '';
			
			history.tel_type = tel_type;
			history.tel_macau = tel_macau;
			history.tel_china = tel_china;
			history.tel_hongkong = tel_hongkong;
			history.tel_taiwan = tel_taiwan;
			history.tel_areacode = tel_areacode;
			history.tel_other = tel_other;
			
			history.surname = p.name;
			history.idType ='mo_idcard'== p.entryCardType ?'macauCard':'othCard';
			history.idcardType = 'mo_idcard'== p.entryCardType ?'':p.entryCardType;
			history.idNum = idNum;
			history.sex = p.sex;
			
			history.dob_year = p.birthDate.substring(0,4);
			history.dob_month = p.birthDate.substring(4,6).charAt(0)=='0'?p.birthDate.substring(5,6):p.birthDate.substring(4,6);
			history.dob_day = p.birthDate.substring(6).charAt(0)=='0'?p.birthDate.substring(7):p.birthDate.substring(6);
			
			history.natArea = p.natArea;
			history.natAgency = p.natLab;
			history.natExpireDate = p.natExpireDate;
			history.nat = p.nat;//核酸结果
			history.natDate = p.natDate;//核酸日期
			history.hkCardType = p.natCardType;
			history.hkCardId = p.natCardId?p.natCardId.replace('(','').replace(')',''):'';
			history.kycLevel = p.level;	//用于入境的ID的KYC强度
							// 0 - 表明没有通过任何方式认证过与核酸检查的身份ID的关联性 
							// 5 - 表明有海关工作人员手工检查过natCardId与entryCardId之间的关联性 
							// 9 - 表明通过可信接口（例如公安局的接口）检查过natCardId与entryCardId之间的关联性	
			history.otp = p.otp;//Y - 表明通过OTP确认过 N - 表明没有通过OTP确认过
			history.whitelistStatus = p.whitelistStatus;	//表明这个居民是否在凭证 issuer 政府的白名单（赦免名单）中。例如如果HK将一个居民标记为白名单，则isWhitelisted这个字段填1，然后这个居民是否能去GD，由HK跟GD线下协商是否承认HK的白名单标记。
												// 0 - 表明不在白名单中，这种情况下whitelistDate直接留空即可。
												// 1 - 表明在白名单中，然后白名单的生效时间由whitelistDate指定。
			history.whitelistDate = p.whitelistDate;	//免检名单发出日期((yyyyMMdd)
			history.whitelistIssuer = p.whitelistIssuer;	//这个用户所在白名单的发行地，例如是hk，表明是香港将这个用户放入白名单的。
			history.visitPosition = p.visitPosition;
			history.contacterName = p.contacterName;
			history.contacterTelno = p.contacterTelno;
			
			sessionStorage.setItem('dataNotUpdated', JSON.stringify({'key': [history]}));
			if(localStorage.lang){
				if('ch' == localStorage.lang)myReplace('./TradChin/ch9_fromGD.html');
				else if('chs' == localStorage.lang)myReplace('./SimChin/chs9_fromGD.html');
				else if('pt' == localStorage.lang)myReplace('./PT/pt9_fromGD.html');
				else if('en' == localStorage.lang)myReplace('./Eng/en9_fromGD.html');
			}else myReplace('./TradChin/ch9_fromGD.html');
		}else{
			let cacheFormData = {};
			cacheFormData = {
				comeFrom:sessionStorage.params&&JSON.parse(sessionStorage.params)&&JSON.parse(sessionStorage.params).rg?JSON.parse(sessionStorage.params).rg.toUpperCase():'',
				transferOut:'',
				accessPort:sessionStorage.params&&JSON.parse(sessionStorage.params)&&'gd'==JSON.parse(sessionStorage.params).rg?'GD':'MA',
				
				// idType:'mo_idcard'== p.entryCardType ?'macauCard':'othCard',
				// idcardType:'mo_idcard'== p.entryCardType ?'': p.entryCardType,
				idNum:idNum,
				idType:'mo_idcard'== p.natCardType ?'macauCard':'othCard',
				idcardType:p.natCardType,
				// idNum: p.natCardId?p.natCardId.replace('(','').replace(')',''):'',
				
				givenname:'',
				surname:p.name,
				sex:p.sex,
				
				dob_year:p.birthDate.substring(0,4),
				dob_month:p.birthDate.substring(4,6).charAt(0)=='0'?p.birthDate.substring(5,6):p.birthDate.substring(4,6),
				dob_day:p.birthDate.substring(6).charAt(0)=='0'?p.birthDate.substring(7):p.birthDate.substring(6),
				
				tel_type:tel_type,
				tel_macau:tel_macau,
				tel_china:tel_china,
				tel_hongkong:tel_hongkong,
				tel_taiwan:tel_taiwan,
				tel_areacode:tel_areacode,
				tel_other:tel_other,
				
				symptom:history.symptom,
				abefore_place:history.abefore_place,
				symptau:history.symptau,
				person:history.person,
				SMSVerificationResults:history.SMSVerificationResults,
				city: history.city,
				citydate: history.citydate,
				foreign:history.foreign,
				foreigndate: history.foreigndate,
				cat_6dp: history.cat_6dp,
				cat_7dp: history.cat_7dp,
				clause: history.clause,
				creationDate: new Date().getTime(),
				identity:history.identity,
				province: history.province,
				verifytoken: history.verifytoken,
				
				natArea: p.natArea,
				natAgency: p.natLab,
				natExpireDate:p.natExpireDate,
				nat:p.nat,//核酸结果
				natDate:p.natDate,//核酸日期
				// hkCardType:p.natCardType,
				// hkCardId: p.natCardId?p.natCardId.replace('(','').replace(')',''):'',
				hkCardType:'mo_idcard'== p.entryCardType ?'': p.entryCardType,
				hkCardId:p.entryCardId.replace('(','').replace(')',''),
				
				
				kycLevel:p.level,	//用于入境的ID的KYC强度
								// 0 - 表明没有通过任何方式认证过与核酸检查的身份ID的关联性 
								// 5 - 表明有海关工作人员手工检查过natCardId与entryCardId之间的关联性 
								// 9 - 表明通过可信接口（例如公安局的接口）检查过natCardId与entryCardId之间的关联性	
				otp:p.otp,//Y - 表明通过OTP确认过 N - 表明没有通过OTP确认过
				whitelistStatus:p.whitelistStatus,	//表明这个居民是否在凭证 issuer 政府的白名单（赦免名单）中。例如如果HK将一个居民标记为白名单，则isWhitelisted这个字段填1，然后这个居民是否能去GD，由HK跟GD线下协商是否承认HK的白名单标记。
													// 0 - 表明不在白名单中，这种情况下whitelistDate直接留空即可。
													// 1 - 表明在白名单中，然后白名单的生效时间由whitelistDate指定。
				whitelistDate:p.whitelistDate,	//免检名单发出日期((yyyyMMdd)
				whitelistIssuer:p.whitelistIssuer,	//这个用户所在白名单的发行地，例如是hk，表明是香港将这个用户放入白名单的。
				'visitPosition': p.visitPosition?p.visitPosition:history.visitPosition,
				'contacterName': p.contacterName?p.contacterName:history.contacterName,
				'contacterTelno':p.contacterTelno?p.contacterTelno: history.contacterTelno,
				'updateContacterMsg':history.updateContacterMsg,
				//活动地址信息
				activityAddress:history.activityAddress,
				//居住地址信息
				residentialAddress:history.residentialAddress,
				existingAddress:history.existingAddress,
				//逗留性质
				natureOfStay:history.natureOfStay,
			};
			if((undefined == cacheFormData.tel_type || ''== cacheFormData.tel_type) && ''!=history.tel_type && undefined!=history.tel_type){
				cacheFormData.tel_type = history.tel_type;
				cacheFormData.tel_macau = history.tel_macau;
				cacheFormData.tel_china = history.tel_china;
				cacheFormData.tel_hongkong = history.tel_hongkong;
				cacheFormData.tel_taiwan = history.tel_taiwan;
				cacheFormData.tel_areacode = history.tel_areacode;
				cacheFormData.tel_other = history.tel_other;
			}
			sessionStorage.setItem('cacheFormData',JSON.stringify(cacheFormData));
			if(hideAddress&&(((sessionStorage.notChange && sessionStorage.changeKey == 'cacheFormData')) && undefined == save.next)||!cacheFormData.selectAddrType){
				//缓存临时数据
				cacheFormData.idx = 3;
				cacheFormData.next = 'submit';
				sessionStorage.setItem('tempData', JSON.stringify(cacheFormData));
				let lang = localStorage.lang;
				if('chs'==lang)myReplace("./SimChin/chs10.html");
				else if('pt'==lang)myReplace("./PT/pt10.html");
				else if('en'==lang)myReplace("./Eng/en10.html");
				else myReplace("./TradChin/ch10.html");
			}else {
				//直接提交
				directSubmission();
			}
		}
	}else{
		myReplace("./TradChin/ch3.html");
	}
}



//直接提交
function directSubmission(idx) {
	var infos = [];
	var saveSubmitUser = [];//保存每次提交的人名
	var temp = JSON.parse(sessionStorage.getItem('cacheFormData'));
	//使用历史数据，判斷本人数据是否修改過
	var peers = '0'
	if (sessionStorage.getItem('cacheFormData') == sessionStorage.getItem('islocalData')) peers = '1';
	if (sessionStorage.getItem('isKyc')) peers = '0';
	saveSubmitUser.push(temp.idNum);
	
	var smsCheck = '2';
	if('pass'== $('[name=SMSVerificationResults]').val()){
		smsCheck = '1';
	}else if($('[name=agreement]').prop('checked')){//暫時不進行手機短訊驗證
		smsCheck = '2';
	}else{
		if(!$("#fmSmsVerification").hasClass("verified")){ //不通过
			smsCheck = '0';
		}else if($("#fmSmsVerification").hasClass("verified")){//通过
			smsCheck = '1';
		}
	}
	//检查外游史
	let ap = setinfosItemAP(temp);
	if(checkAbeforePlaceErr(ap,temp,'directSubmission',idx))return;
	
	var transFromGD = {//1-粤转澳提交、0-澳康码提交、2-港转澳提交
		'GD':'1',
		'HK':'2',
		'MO':'0'
	}
	//处理接口参数
	infos.push(setInfosItem(temp,ap,null,smsCheck,transFromGD,'1',peers));
	
	var action ="R";
	//判斷是否保存數據
	// if (!elm.hasClass("save")&&sessionStorage.params&&JSON.parse(sessionStorage.params).action)action = JSON.parse(sessionStorage.params).action;
	var payload = {
		'addressId': sessionStorage.getItem("addressId"),
		'lang':getAppConfig().lang,
		"infos": infos,
		"inPort":sessionStorage.params&&JSON.parse(sessionStorage.params).inPort?'Y':'N',//是否入境
		"action": action, //action  E-進場  R-申報  Q-退場
		// "position":"萬高"//只有進場需要position字段
	};
	payload.position = JSON.parse(sessionStorage.params).position?JSON.parse(sessionStorage.params).position:'';
	let _t = new Date().getTime();
	let lang = localStorage.lang;
	var data = {
		"header": {
			"service": "formService/insertFormInfo",//
			"staticData": false,
			"_t": _t
		},
		"payload": encrypt(JSON.stringify(payload), _t+''+'123')
	};
	
	scrollTo(0,0);
	
	showloading();
	
	$.ajax({
		type: "post",
		async: true,
		url: idx&&'3'==idx?getUrl():"../../channel/http.do"!=getUrl()?getUrl():"../channel/http.do",
		data: JSON.stringify(data),
		contentType: "text/xml",
		dataType: "json",
		success: function(data) {
			isSubmit = false;
			hideLoading();
			
				if(data.result)data.result = JSON.parse(decrypt(data.result, data.serialNo.substring(0,16)));
			if (data.success) {
				sessionStorage.setItem('img', JSON.stringify(data.result));
				//判斷是否保存數據
				saveDirectSubmissionData();
				localStorage.setItem('saveSubmitUser',JSON.stringify(saveSubmitUser));
				if(idx&&'3'==idx){
					scrollTo(0, 0);
					if(lang == 'chs')myReplace("./chs8.html");
					else if(lang == 'pt')myReplace("./pt8.html");
					else if(lang == 'en')myReplace("./en8.html");
					else myReplace("./ch8.html");
				}else{
					if(lang == 'chs')myReplace("./SimChin/chs8.html");
					else if(lang == 'pt')myReplace("./PT/pt8.html");
					else if(lang == 'en')myReplace("./Eng/en8.html");
					else myReplace("./TradChin/ch8.html");
				}
				sessionStorage.removeItem('toMacao');
				sessionStorage.removeItem('credential');
				sessionStorage.removeItem('source');
			} else {
				// 第一种：如果都是返回"kyc"就是服务连接报错的问题。
				// 第二种：返回"N"就是验证不通过。第一种是不需要跳回去改信息的页面的。
				sessionStorage.removeItem('toMacao');
				sessionStorage.removeItem('credential');
				sessionStorage.removeItem('source');
				let defaultText = {
					'ch': '系統繁忙，請稍後再試。',
					'chs': '系统繁忙，请稍后再试。',
					'pt': 'Sistema ocupado, por favor tente novamente mais tarde.',
					'en': 'System is busy, please try again later.'
				}
				let kycText = {
					'ch': '個人資料核實錯誤，請確認填寫信息。',
					'chs': '个人资料核实错误，请确认填写信息。',
					'pt': 'Erro verificado nos dados pessoais. Confirme as informações preenchidas.',
					'en': 'Personal information error, please check again.'
				}
				let NO_ENTER = {
					'ch': '今日無申報記錄，請先作申報。',
					'chs': '今日无申报记录，请先作申报。',
					'pt': 'Não há qualquer registo de declaração hoje, por favor proceda à sua declaração.',
					'en': 'There is no record of declaration for today, please make a declaration first.'
				}
				let HAD_QUIT = {
					'ch': '已離場，請勿重複操作',
					'chs': '已离场，请勿重复操作',
					'pt': 'Não repita a operação após o check-out. ',
					'en': 'Do not repeat the operation after checked out.'
				}
				let EXPIRED_POSITION = {
					'ch': '二維碼已失效',
					'chs': '二维码已失效',
					'pt': 'O código QR expirou',
					'en': 'QR code has expired'
				}
				let NEED_FROM_GD = {
					'ch': '請通過粵康碼進行轉碼',
					'chs': '请通过粤康码进行转码',
					'pt': 'Para obter o Código de Saúde de Macau, converta o Código de Saúde da Província de Guangdong.',
					'en': 'Please activate your “Guangdong Health Code” and convert it into a “Macao Health Code”'
				}
				let message = defaultText[lang];
				try {
					scrollTo(0, 0);
					if (data.result){
						if (data.result.kycResult == 'N') {
							message = data.result.name + kycText[lang];
						} else if (!data.result.Result) {} else if (data.result.Result == 'NO_ENTER') {
							message = data.result.name + NO_ENTER[lang];
						} else if (data.result.Result == 'HAD_QUIT') {
							message = data.result.name + HAD_QUIT[lang];
						} else if (data.result.Result == 'EXPIRED_POSITION') {
							message = EXPIRED_POSITION[lang];
						} else if(data.result.Result == 'FIND_NO_STATUS'){
							return;
						} else if(data.result.Result == 'NEED_FROM_GD'){
							message = NEED_FROM_GD[lang];
						}
					}else if(data.message){
						message = data.message;
					}
				} catch (e) {
					message = data.message;
				}
				smalltips(message, {
					bg: "bg-red text-white padding-lg"
				})
			}
		},
		error: function(data) {
			hideLoading();
			
			isSubmit = false;
			
		}
	});
}

//保存直接提交数据
function saveDirectSubmissionData(){
	//判斷是否保存數據
	var t = new Date().getTime();
	var cacheForm = JSON.parse(sessionStorage.getItem('cacheFormData'));
	cacheForm.creationDate = t;//申报提交日期
	cacheForm.transFromGD = '0';
	if(cacheForm.activityAddress)cacheForm.existingAddress = 'true';
		cacheForm.forceChange = '';
	localStorage.setItem('healthdeclaration' + cacheForm.idNum , JSON.stringify(cacheForm));
	if (sessionStorage.getItem('WalkWith')) {
		var num = 0;
		num += parseInt(sessionStorage.getItem('WalkWith'));
		for (let i = 1; i <= num; i++) {
			var WalkWith = JSON.parse(sessionStorage.getItem('WalkWithCacheFormData' + i));
			WalkWith.creationDate = t;
			if(WalkWith.activityAddress)WalkWith.existingAddress = 'true';
			WalkWith.forceChange = '';
			localStorage.setItem('healthdeclaration' + WalkWith.idNum, JSON.stringify(WalkWith));
		}
	}
	//增加接口數據
	var personList = JSON.parse(sessionStorage.img).personList;
	for (var key in localStorage) {
		if (key.indexOf("healthdeclaration") != -1) {
			for(var i=0;i<personList.length;i++){
				if(key == "healthdeclaration"+personList[i].cardId){
					var n = JSON.parse(localStorage[key]);
					n.person = personList[i];
					n.transmitVac = personList[i].transmitVac;
					n.vac1Area = personList[i].vac1Area;
					n.vac1Batch = personList[i].vac1Batch;
					n.vac1Brand = personList[i].vac1Brand;
					n.vac1Date = personList[i].vac1Date;
					n.vac1Location = personList[i].vac1Location;
					n.vac1Name = personList[i].vac1Name;
					n.vac2Area = personList[i].vac2Area;
					n.vac2Batch = personList[i].vac2Batch;
					n.vac2Brand = personList[i].vac2Brand;
					n.vac2Date = personList[i].vac2Date;
					n.vac2Location = personList[i].vac2Location;
					n.vac2Name = personList[i].vac2Name;
					if(n.tel_macau!='')n.SMSVerificationResults = $('[name=SMSVerificationResults]').val();
					if(sessionStorage.clause){
						if(!n.clause||n.clause=='')n.clause = sessionStorage.clause;
						else if(n.clause.indexOf(sessionStorage.clause)==-1)n.clause+=','+sessionStorage.clause;
					}
					if('macauCard'!=n.idType){
						//每次新增或修改都默认为已确认联系信息，重置填写日期
						n.updateContacterMsg = n.person.updateContacterMsg;
					}
					localStorage[key] = JSON.stringify(n);
				}
			}
		}
	}
	sessionStorage.removeItem('clause');
	sessionStorage.removeItem('notChange');
}
/**
 * 獲取年齡
 * @param {Object} data
 */
function getAGE(data) {
	var curTime = new Date();
	let CurYear = curTime.getFullYear();
	let CurMonth = curTime.getMonth() + 1;
	let CurDay = curTime.getDate();
	let birthDate = data.birthDate.split('-')
	var age = CurYear-birthDate[0];
	var M = CurMonth-birthDate[1];
	var D = CurDay-birthDate[2];
	if(M == 0){//同月判断日
		if(D<0){//未过生日，减一岁
			age = age-1;
		}
	}else if(M<0){//不足月，减一岁
		age = age-1;
	}
	if(age<0)age=0;
	return age
}
/**
 * @param {Object} dstr 核酸有效期
 * @param {Object} tstr 服務端系統時間（返回時間是當前時間加了6小時）
 */
function compareToday(dstr,tstr) {
	//console.log('調用compareToday')
	//計算核酸有效期時間
	//console.log('核酸有效期',new Date(dstr))
	let year1 = parseInt(dstr.substring(0,4));
	let month1 = parseInt(dstr.substring(5,7));
	let day1 = parseInt(dstr.substring(8,10));
	//計算服務端系統當前日期
	var today = new Date(tstr);
	today = new Date(today.getTime()-1e3*60*60*6)
	//console.log('服務端系統當前時間',today)
	// console.log('服務端系統當前時間',today.getTime())
	var dd = today.getDate();
	var mm = today.getMonth()+1;
	var yyyy = today.getFullYear();
	//console.log('核酸有效期',year1+'-'+month1+'-'+day1)
	//console.log('服務端系統當前日期',yyyy+'-'+mm+'-'+dd)
	/**
	 * 核酸有效期 大於等於 服務端系統當前日期
	 */
	if ((year1 >= yyyy && month1 >= mm && day1 >= dd) 
	|| (year1 >= yyyy && month1 > mm) 
	|| (year1 > yyyy))
		return 1;
	else
		return -1;
}
/**
 * @param {Object} time1 需比較的日期
 * @param {Object} time2 服務端系統時間（返回時間是當前時間加了6小時）
 */
function compareToday2(time1,time2) {
	console.log('調用compareToday2')
	//計算需比較的時間
	var temp = new Date(time1);
	console.log('需比較的時間',temp)
	var day1 = temp.getDate();
	var month1 = temp.getMonth()+1;
	var year1 = temp.getFullYear();
	// 計算服務端系統當前日期
	var today = new Date(time2);
	console.log('服務端系統當前時間',today)
	console.log('服務端系統當前時間',today.getTime())
	var dd = today.getDate();
	var mm = today.getMonth()+1;
	var yyyy = today.getFullYear();
	console.log('需比較的日期',year1+'-'+month1+'-'+day1)
	console.log('服務端系統當前日期',yyyy+'-'+mm+'-'+dd)
	/**
	 * 服務端系統當前日期 少于等于 需比較的日期
	 */
	if ((year1 >= yyyy && month1 >= mm && day1 >= dd) 
	|| (year1 >= yyyy && month1 > mm) 
	|| (year1 > yyyy)){
		console.log('服務端系統當前日期'+yyyy+'-'+mm+'-'+dd+' 少于等于 需比較的日期'+year1+'-'+month1+'-'+day1)
		return true;
	} else {
		console.log('服務端系統當前日期'+yyyy+'-'+mm+'-'+dd+' 大于 需比較的日期'+year1+'-'+month1+'-'+day1)
		return false;
	}
}
/**
 * @param {Object} time1 需比較的日期
 * @param {Object} time2 服務端系統時間（返回時間是當前時間加了6小時）
 */
function compareToday3(time1,time2) {
	//計算需比較的時間
	var temp = new Date(time1);
	// console.log('需比較的時間',temp)
	var day1 = temp.getDate();
	var month1 = temp.getMonth()+1;
	var year1 = temp.getFullYear();
	// 計算服務端系統當前日期
	var today = new Date(time2);
	// console.log('服務端系統當前時間',today)
	// console.log('服務端系統當前時間',today.getTime())
	var dd = today.getDate();
	var mm = today.getMonth()+1;
	var yyyy = today.getFullYear();
	// console.log('需比較的日期',year1+'-'+month1+'-'+day1)
	// console.log('服務端系統當前日期',yyyy+'-'+mm+'-'+dd)
	/**
	 * 服務端系統當前日期 大於等於  需比較的日期 
	 */
	if ((year1 <= yyyy && month1 <= mm && day1 <= dd) 
	|| (year1 <= yyyy && month1 < mm) 
	|| (year1 < yyyy))
		return true;
	else
		return false;
}
/**
 * 計算年齡
 * @param {Object} vadate 服務端系統當前時間加6小時
 * @param {Object} birthDate 出生日期
 */
function checkAge(vadate, birthDate){
	var curTime = new Date(new Date(vadate).getTime()-1e3*60*60*6);
	// console.log('curTime',curTime)
	let CurYear = curTime.getFullYear();
	let CurMonth = curTime.getMonth() + 1;
	let CurDay = curTime.getDate();
	let birth = birthDate.split('-');
	var age = CurYear-birth[0];
	var M = CurMonth-birth[1];
	var D = CurDay-birth[2];
	if(M == 0){//同月判断日
		if(D<0){//未过生日，减一岁
			age = age-1;
		}
	}else if(M<0){//不足月，减一岁
		age = age-1;
	}
	if(age<0)age=0;
	return age
}

function validDateRange(elm, limit){
	clearDateTips(elm);
	inputdate = elm.prop('value');
	let year1 = parseInt(inputdate.substring(0,4));
	let month1 = parseInt(inputdate.substring(5,7));
	let day1 = parseInt(inputdate.substring(8,10));
	var today = new Date();
	var b4day = new Date(today.getTime()-1e3*60*60*24*(limit-1))
	var dd = b4day.getDate();
	var mm = b4day.getMonth()+1;
	var yyyy = b4day.getFullYear();
	if ((year1 <= yyyy && month1 <= mm && day1 < dd) 
	|| (year1 <= yyyy && month1 < mm) 
	|| (year1 < yyyy))
	{
		elm.dateTips(lng("離開日期必須為"+limit+"天內",	"A data de partida não deve ser superior a "+limit+" dias", "The departure date must be within "+limit+" days"));
		return false;
	}
	
	var today = new Date();
	today = new Date(today.getTime()+1e3*60*60*1)
	dd = today.getDate();
	mm = today.getMonth()+1;
	yyyy = today.getFullYear();
	if ((year1 <= yyyy && month1 <= mm && day1 <= dd) 
	|| (year1 <= yyyy && month1 < mm) 
	|| (year1 < yyyy))
	{	
		clearDateTips(elm);
		return true;	
	}
	else
	{
		elm.dateTips(lng("離開日期必須為"+limit+"天內", "A data de partida não deve ser superior a "+limit+" dias", "The departure date must be within "+limit+" days"));
		return false;
	}
}

function checkDateRange(inputdate, limit){
	let year1 = parseInt(inputdate.substring(0,4));
	let month1 = parseInt(inputdate.substring(5,7));
	let day1 = parseInt(inputdate.substring(8,10));
	var today = new Date();
	var b4day = new Date(today.getTime()-1e3*60*60*24*limit)
	var dd = b4day.getDate();
	var mm = b4day.getMonth()+1;
	var yyyy = b4day.getFullYear();
	if ((year1 <= yyyy && month1 <= mm && day1 < dd) 
	|| (year1 <= yyyy && month1 < mm) 
	|| (year1 < yyyy))
		return -1;

	var today = new Date();
	today = new Date(today.getTime()-1e3*60*60*6)
	dd = today.getDate();
	mm = today.getMonth()+1;
	yyyy = today.getFullYear();
	if ((year1 <= yyyy && month1 <= mm && day1 <= dd) 
	|| (year1 <= yyyy && month1 <= mm) 
	|| (year1 <= yyyy))
		return 1;
	else
		return -1;	
}
/**
 * 设置入境通道提示
 */
function setEntryChannel(data,vadate,pageTop){
	/**
	 * 出入境可走自助通道顯示條件:
	 * 1.綠碼
	 * 2.kyc驗證通過 
	 * 3.年齡大於等於7歲 
	 * 4.證件類型為澳門或內地居民港澳通行證 
	 * 5.核酸
	 * 陰性
	 * 有效期 >= 今天
	 * 6.不用发送白名单为false
	 * 7.同意將疫苗資訊傳去自助閘機(2021.5.18暂时不判断该问题)
	 * 
	 * 1 AND 2 AND 3 AND 4 AND 5 AND 6 AND 7
	 */
	// console.log(data)
	// console.log(vadate)
	// console.log(pageTop)
	// 計算年齡
	let age = checkAge(vadate, data.birthDate)
	// 獲取核酸有效期 與 服務端系統當前時間 比較結果
	let natDate = new Date(data.natDate);
	var d = new Date();
	let currentTime = new Date(new Date(vadate).getTime()-1e3*60*60*6);
	let date5 =  new Date(natDate.getTime()+1e3*60*60*24*1);//有效期1天
	if (data.measureWord.includes("P"))
		date5 =  new Date(natDate.getTime()+1e3*60*60*24*1);//有效期1天
	date5 =  date5.getFullYear()+'-'+("0" + (date5.getMonth() + 1)).slice(-2)+'-'+("0" + (date5.getDate())).slice(-2);
	let tempvadate='';
	tempvadate = currentTime.getFullYear()+'-'+("0" + (currentTime.getMonth() + 1)).slice(-2)+'-'+("0" + (currentTime.getDate())).slice(-2);
	let expireDate = compareToday(date5,tempvadate)
	// 第二次接種日期+14天
	let day14 = ''
	if(data.vac2Date){
		// data.vac2Date = data.vac2Date.substring(0,4)+'-'+data.vac2Date.substring(4,6)+'-'+data.vac2Date.substring(6)
		day14 = new Date(data.vac2Date).getTime()+1e3*60*60*(24*14-8)
	}
	// 是否调用白名单
	let noNeedSL = sessionStorage.params&&JSON.parse(sessionStorage.params)?JSON.parse(sessionStorage.params).noNeedSL:undefined
	// console.log('"G" == data.mainColor',"G" == data.mainColor)
	// console.log('data.kycSuccess',data.kycSuccess)
	// console.log('age > 7',age > 7)
	// console.log('"macauCard" == data.cardType || "ch" == data.cardType','macauCard' == data.cardType || 'ch' == data.cardType)
	// console.log("'NEGATIVE' == data.nat && '1' == expireDate",'NEGATIVE' == data.nat && '1' == expireDate)
	// console.log('data.vac1Batch && data.vac2Batch && compareToday2(day14, new Date(vadate).getTime()-1e3*60*60*6)',data.vac1Batch && data.vac2Batch && compareToday3(day14, new Date(vadate).getTime()-1e3*60*60*6))
	// console.log("'true' !== noNeedSL",'true' !== noNeedSL)
	// console.log("'Y' == transmitVac",'Y' == data.transmitVac)
	
	if("G" == data.mainColor
	&& data.kycSuccess
	&& age >= 7
	&& ('macauCard' == data.cardType || 'ch' == data.cardType)
	&& ('NEGATIVE' == data.nat && expireDate > 0) 
	// && (('NEGATIVE' == data.nat && '1' == expireDate) 
		// || (data.vac1Batch && data.vac2Batch && compareToday3(day14, new Date(vadate).getTime()-1e3*60*60*6)))
	&& 'true' !== noNeedSL
	// && 'Y' == data.transmitVac
	){
		stateIDColorIdx = 'G'
	}else{
		stateIDColorIdx = 'R'
	}
	let lang = getAppConfig().lang;
	let zz = {
		'ch': '出入境可走自助通道',
		'chs': '出入境可走自助通道',
		'pt': 'Podem utilizar as Passagens Automáticas',
		'en': 'E-Channel can be used'
	}
	let fontsize = {
		'ch': '190%',
		'chs': '190%',
		'pt': '130%',
		'en': '160%'
	}
	return '<div class="" style="line-height: 1;color:#fff;font-weight: 700;font-size: '+ fontsize[lang] +';background-color:'+pageTop+';'+('G'==stateIDColorIdx?'padding:15px 10px;':'height:15px;')+'">'+('G'==stateIDColorIdx?zz[lang]:'')+'</div>';
}

//獲取app预设用户信息
function getAppUserInfo() {
	try{
		var json = {};
		json['serviceName'] = "requestData";
		json['callback'] = "AppJS.processingCallBackData"
		App.Device.getUserInfo(json);
	}catch(e){
		// console.log(e)
	}
}

function checkApp() {
	try{
		var json = {};
		json['serviceName'] = "requestData";
		json['callback'] = "AppJS.checkApp";
		App.Device.checkApp(json);
	}catch(e){
		// console.log(e)
	}
}

function scanEntrance() {
	try{
		var json = {};
		json['serviceName'] = "requestData";
		json['callback'] = "AppJS.scanEntranceCallBackData";
		App.Device.scanEntrance(json);
	}catch(e){
		// console.log(e)
	}
}

var AppJS = {
	processingCallBackData:function(userInfo){
		let birthday = userInfo.birthday.split('-');
		let telType = {
			'mo':'macau',
			'hk':'hongkong',
			'ch':'china',
			'tw':'taiwan',
			'other':'other',
			'':''
		}
		let tel_type = telType[userInfo.phoneType];
		let tel_macau = 'mo'==userInfo.phoneType?userInfo.phoneNumber:'';
		let tel_china ='ch'==userInfo.phoneType?userInfo.phoneNumber:'';
		let tel_hongkong ='hk'==userInfo.phoneType?userInfo.phoneNumber:'';
		let tel_taiwan = 'tw'==userInfo.phoneType?userInfo.phoneNumber:'';
		let tel_areacode = '';
		let tel_other = '';
			
		if('other'==userInfo.phoneType&&userInfo.phoneNumber){
			if(userInfo.phoneNumber.indexOf('+853')!=-1||userInfo.phoneNumber.indexOf('+852')!=-1){
				tel_areacode = userInfo.phoneNumber.substring(0,5).trim();
				tel_other = userInfo.phoneNumber.substring(5).trim();
			}else if(userInfo.phoneNumber.indexOf('+86')!=-1){
				tel_areacode = '+86';
				tel_other = userInfo.phoneNumber.substring(userInfo.phoneNumber.indexOf('+86')+4).trim();
			}
		}
		if(userInfo.phoneNumber&&''==tel_type){
			if(userInfo.phoneNumber.indexOf('+853')!=-1){
				tel_type = 'macau';
				tel_macau = userInfo.phoneNumber.substring(5).trim();
			}else if(userInfo.phoneNumber.indexOf('+86')!=-1){
				tel_type = 'china';
				tel_china = userInfo.phoneNumber.substring(4).trim();
			}else if(userInfo.phoneNumber.indexOf('+852')!=-1){
				tel_hongkong = userInfo.phoneNumber.substring(5).trim();
				tel_type = 'hongkong';
			}
		}
		
		let cacheFormData = {
			comeFrom:'',
			transferOut:'',
			accessPort:sessionStorage.params&&JSON.parse(sessionStorage.params)&&'gd'==JSON.parse(sessionStorage.params).rg?'GD':'MA',
			idType:userInfo.cardType =='macauCard'?'macauCard':'othCard',
			idcardType:userInfo.cardType =='macauCard'?'':userInfo.cardType,
			idNum:userInfo.cardId.replace('(','').replace(')',''),
			givenname:'',
			surname:userInfo.name,
			sex:userInfo.gender,
			dob_year:birthday[0],
			dob_month:birthday[1].charAt(0)=='0'?birthday[1].substring(1):birthday[1],
			dob_day:birthday[2].charAt(0)=='0'?birthday[2].substring(1):birthday[2],
			tel_type:tel_type,
			tel_macau:tel_macau,
			tel_china:tel_china,
			tel_hongkong:tel_hongkong,
			tel_taiwan:tel_taiwan,
			tel_areacode:tel_areacode,
			tel_other:tel_other,
			
			symptom:'',
			abefore_place:'',
			symptau:'',
			person:'',
			SMSVerificationResults:'',
			city: '',
			foreign:'',
			clause: '',
			creationDate: '',
			identity:'',
			province: '',
			verifytoken: '',
			
			natArea: '',
			natAgency: '',
			natExpireDate: '',
			nat: '',//核酸结果
			natDate: '',//核酸日期
			secCardType: '',
			secCardId: '',
			hkCardType: '',
			hkCardId: '',
			
			
			kycLevel: '',//用于入境的ID的KYC强度
							// 0 - 表明没有通过任何方式认证过与核酸检查的身份ID的关联性 
							// 5 - 表明有海关工作人员手工检查过natCardId与entryCardId之间的关联性 
							// 9 - 表明通过可信接口（例如公安局的接口）检查过natCardId与entryCardId之间的关联性	
			otp: '',//Y - 表明通过OTP确认过 N - 表明没有通过OTP确认过
			whitelistStatus: '',	//表明这个居民是否在凭证 issuer 政府的白名单（赦免名单）中。例如如果HK将一个居民标记为白名单，则isWhitelisted这个字段填1，然后这个居民是否能去GD，由HK跟GD线下协商是否承认HK的白名单标记。
												// 0 - 表明不在白名单中，这种情况下whitelistDate直接留空即可。
												// 1 - 表明在白名单中，然后白名单的生效时间由whitelistDate指定。
			whitelistDate: '',	//免检名单发出日期((yyyyMMdd)
			whitelistIssuer: '',	//这个用户所在白名单的发行地，例如是hk，表明是香港将这个用户放入白名单的。
			'visitPosition':  '',
			'contacterName':  '',
			'contacterTelno': '',
			'updateContacterMsg': '',
		};
		sessionStorage.setItem('getAppUserInfo',JSON.stringify(cacheFormData));
	},
	scanEntranceCallBackData: function (info){
		sessionStorage.setItem('addressId', info.addressId);
		sessionStorage.setItem('locationName', info.locationName);
		localStorage.setItem('ownercardId', info.cardID);
		localStorage.setItem('ownercardType', info.cardType);
	},
	checkApp: function (info){
		// 返回的数据为true或者false
		sessionStorage.setItem('isApp', "true");
		// 返回多语言识别
		sessionStorage.setItem('applang', info.lang)
	}
}

//继续添加同行人或是执行下一步
function addOrContinue(idx,type,save){
	// 判断继续添加新同行人还是进行下一步
	if(type=='add'){//继续添加同行人
		//是否需要地址信息
		// if(hideAddress&&(('true'!=save.existingAddress) || (sessionStorage.notChange && sessionStorage.changeKey == 'cacheFormData')) && undefined == save.next){
		if(hideAddress&&((sessionStorage.changeKey == 'cacheFormData'&& undefined == save.next)||!save.selectAddrType)){
			//缓存临时数据
			save.idx = idx;
			save.next = type;
			sessionStorage.setItem('tempData', JSON.stringify(save));
			toPage('10');
		}else {
			//更新同行人数量
			let num = 1;
			if (sessionStorage.WalkWith) num = parseInt(sessionStorage.WalkWith) + 1;
			if (num > 3) return; //同行人最多添加3人
			sessionStorage.setItem('WalkWith', num);
			sessionStorage.setItem('addType', 'WalkWith'); //添加同行人
			if('changeBackZero'==idx)sessionStorage.setItem('changeBackZero', 'Y');
			//添加同行人数据
			if('WalkWith'==idx)sessionStorage.setItem('WalkWithCacheFormData' + (parseInt(sessionStorage.WalkWith) - 1), JSON.stringify(save));

			if('change'==idx||'changeBackZero'==idx){
				// 更新修改数据
				sessionStorage.removeItem(sessionStorage.getItem('changeKey'));
				sessionStorage.setItem(sessionStorage.getItem('changeKey'), JSON.stringify(save));
				//清除无效缓存
				sessionStorage.removeItem('changeKey');
			}
			//新增用户数据
			if(!sessionStorage.cacheFormData)sessionStorage.setItem('cacheFormData', JSON.stringify(save));
			
			if(undefined == save.next){
				scrollTo(0,0);
				location.reload();
			}else{
				//清除无效缓存
				sessionStorage.removeItem('tempData');
				toPage('3');
			}
		}
	}else{//继续下一步
		if('default'==idx&&sessionStorage.toMacao){
			//转码流程
			 localStorage.lang = getAppConfig().lang;
			//是否需要地址信息
			// if(hideAddress&&(('true'!=save.existingAddress) || (sessionStorage.notChange && sessionStorage.changeKey == 'cacheFormData')) && undefined == save.next){
			if(hideAddress&&((sessionStorage.changeKey == 'cacheFormData'&& undefined == save.next)||!save.selectAddrType)){
				//缓存临时数据
				save.idx = idx;
				save.next = type;
				sessionStorage.setItem('tempData', JSON.stringify(save));
				toPage('10');
			}else {
				//直接提交
				sessionStorage.setItem('cacheFormData', JSON.stringify(save));
				directSubmission('3');
			}
		}else{
			//是否需要地址信息
			// if(hideAddress&&(('true'!=save.existingAddress) || (sessionStorage.notChange && sessionStorage.changeKey == 'cacheFormData')) && undefined == save.next){
			if(hideAddress&&((sessionStorage.changeKey == 'cacheFormData'&& undefined == save.next)||!save.selectAddrType)){
				//缓存临时数据
				save.idx = idx;
				save.next = type;
				sessionStorage.setItem('tempData', JSON.stringify(save));
				toPage('10');
			}else {
				//添加同行人数据
				if('WalkWith'==idx)sessionStorage.setItem('WalkWithCacheFormData' + sessionStorage.WalkWith, JSON.stringify(save));

				if('change'==idx||'changeBackZero'==idx){
					// 更新修改数据
					sessionStorage.removeItem(sessionStorage.getItem('changeKey'));
					sessionStorage.setItem(sessionStorage.getItem('changeKey'), JSON.stringify(save));
					//清除无效缓存
					sessionStorage.removeItem('changeKey');
				}
				//清除无效缓存
				if('default'!=idx)sessionStorage.removeItem('addType');
				sessionStorage.removeItem('tempData');

				//新增用户数据
				if('default'==idx)sessionStorage.setItem('cacheFormData', JSON.stringify(save));

				toPage('5');
			}
		}
	}
}
//跳轉
function toPage(pageName){
	var lang = getAppConfig().lang;
	if('chs'==lang)myReplace("./chs"+pageName+".html");
	else if('pt'==lang)myReplace("./pt"+pageName+".html");
	else if('en'==lang)myReplace("./en"+pageName+".html");
	else myReplace("./ch"+pageName+".html");
}

//地址提交的最后期限
function setLastDateOfAddressSubmission(){
	let time = new Date().getTime();
	// let startDay = new Date('2021-1-7').getTime();//上线日期
	// let endDay = 1e3 * 60 * 60 * 24 * 10;//上线后30天
	// if(time-startDay>=0)$('#chkagreement').addClass('hide');
}


//处理外游史
function setinfosItemAP(temp){
	let ap = temp.abefore_place;
	if(temp.abefore_place.indexOf('cat_6')!=-1){
		ap = ap.replace('cat_6','cat_6|'+temp.cat_6dp);
	}
	if(temp.abefore_place.indexOf('cat_7')!=-1){
		ap = ap.replace('cat_7','cat_7|'+temp.cat_7dp);
	}		
	if(temp.abefore_place.indexOf('neidi')!=-1){
		let cityList = temp.city.split(',');
		let provinceList = temp.province.split(',');
		let citydateList = new Array(cityList.length);
		if (temp.citydate) {
			citydateList = temp.citydate.split(',');
		}
		let neidi = '';
		for(let c=0;c<cityList.length;c++){
			let provinceItem = provinceList[c];
			let cityItem = cityList[c];
			let citydateItem = citydateList[c];

			if(''==provinceItem||undefined == provinceItem) {
				provinceItem ='null';
				cityItem ='null';
				citydateItem ='null';
			}
			if(''==neidi)neidi = provinceItem+'|'+cityItem+'|'+citydateItem;
			else neidi += ',' + provinceItem+'|'+cityItem+'|'+citydateItem;
		}
		if(''==neidi)neidi = 'null';
		ap = ap.replace('neidi',neidi);
	}
	if(temp.abefore_place.indexOf('waiguo')!=-1){
		// let foreignArr = temp.foreign.split(',');
		let foreignList = temp.foreign.split(',');
		let foreigndateList = new Array(foreignList.length);
		if (temp.foreigndate) {
			foreigndateList = temp.foreigndate.split(',');
		}
		let foreign = '';
		for(let f = 0 ;f<foreignList.length;f++){
			let foreignItem = foreignList[f];
			let foreigndateItem = foreigndateList[f];

			if(''==foreignItem||undefined == foreignItem) {
				foreignItem ='null';
				foreigndateItem ='null';
			}
			if(''==foreign)foreign = 'cat_99|'+foreignItem+'|'+foreigndateItem;
			else foreign += ',' + 'cat_99|'+foreignItem+'|'+foreigndateItem;
		}
		ap = ap.replace('waiguo',foreign);
	}
/*
	if(temp.abefore_place.indexOf('WAIGUO')!=-1){
		let foreignArr2 = temp.foreign2.split(',');
		let foreign2 = '';
		for(let f = 0 ;f<foreignArr2.length;f++){
			if(f==foreignArr2.length-1)foreign2 += 'cat_99|'+foreignArr2[f];
			else foreign2 += 'cat_99|'+foreignArr2[f]+',';
		}
		ap = ap.replace('WAIGUO',foreign2);
	}
*/
	return ap;
}

//检查外游史
function checkAbeforePlaceErr(ap,temp,type,idx){
	var lang = getAppConfig().lang;
	if(ap.indexOf('null')!=-1){
		scrollTo(0,0);
		let messageMap = {
			'ch':'外遊訊息錯誤，請重新修改核實。',
			'chs':'外游信息错误，请重新修改核实。',
			'en':'Travel history error, please check and revise.',
			'pt':'Erro no histórico de viagens. Por favor verifique e revise.'
		}
		let message =messageMap[lang];

		if('0' == type){
			message = temp.surname +' '+ message;
			if($('#err').length == 0)$('.qform-part').before('<div id="err" class="qform-item-title" style="font-size: 100%;background-color: #ff7c7c;color:#fff;">'+ message +'</div>');
			else $('#err').text(message);
		}else if('2_default' == type){
			smalltips(message, {bg: "bg-red text-white padding-lg"});
			if('chs'==lang)setTimeout(() => {myReplace("./chs0.html");}, 4000);
			else if('pt'==lang)setTimeout(() => {myReplace("./pt0.html");}, 4000);
			else if('en'==lang)setTimeout(() => {myReplace("./en0.html");}, 4000);
			else setTimeout(() => { myReplace("./ch0.html");}, 4000);
		}else if('6' == type){
			smalltips(message, {bg: "bg-red text-white padding-lg"});
			if('chs'==lang)setTimeout(() => {myReplace("./chs5.html");}, 4000);
			else if('pt'==lang)setTimeout(() => {myReplace("./pt5.html");}, 4000);
			else if('en'==lang)setTimeout(() => {myReplace("./en5.html");}, 4000);
			else setTimeout(() => { myReplace("./ch5.html");}, 4000);
		}else if('9' == type||'9_fromGD' == type){
			smalltips(message, {bg: "bg-red text-white padding-lg"});
		}else if('directSubmission' == type){
			smalltips(message, {bg: "bg-red text-white padding-lg"});
			if(!(idx&&'3'==idx)){
				if(localStorage.lang){
					if('chs' == localStorage.lang)myReplace('./SimChin/chs9_fromGD.html');
					else if('pt' == localStorage.lang)myReplace('./PT/pt9_fromGD.html');
					else if('en' == localStorage.lang)myReplace('./Eng/en9_fromGD.html');
					else myReplace('./TradChin/ch9_fromGD.html');
				}else myReplace('./TradChin/ch9_fromGD.html');
			}
		}
		isSubmit = false;
		return true;
	}
	return false;
}


//处理电话号码
function handlePhoneNumber(temp){
	let telphone = [];
	let telList = temp.tel_type.split(',');
	for (let ii = 0; ii < telList.length; ii++) {
		let list = {};
		list.area = telList[ii];
		list.no = telList[ii] == 'macau' ? temp.tel_macau : telList[ii] == 'china' ? temp.tel_china : telList[ii] ==
			'hongkong' ? temp.tel_hongkong : telList[ii] == 'taiwan' ? temp.tel_taiwan : temp.tel_areacode + ' ' + temp.tel_other;
		telphone.push(list);
	}
	return telphone;
}

//处理secCard信息
function handleSecCardData(temp){
	let secCardType = temp.secCardType;
	let secCardId = temp.secCardId;
	if(''==secCardType){
		if('ch'==temp.idcardType||'ch_pass'==temp.idcardType){
			secCardType = 'ch_idcard';
		}else if('oth_pass'==temp.idcardType){
			secCardType = temp.idcardType;
			secCardId = temp.idNum;
		}else{
			secCardType = 'hc';
		}
	}
	return {"secCardType":secCardType,"secCardId":secCardId};
}
//处理hkCard信息
function handlehkCardData(temp){
	let hkCardType = temp.hkCardType;
	let hkCardId = temp.hkCardId;
	if(''==hkCardType){
		if('ch'==temp.idcardType||'ch_pass'==temp.idcardType){
			hkCardType = 'ch_idcard';
		}else if('oth_pass'==temp.idcardType){
			hkCardType = temp.idcardType;
			hkCardId = temp.idNum;
		}else{
			hkCardType = 'hc';
		}
	}
	return {"hkCardType":hkCardType,"hkCardId":hkCardId};
}

function setInfosItem(temp,ap,smsC,smsCheck,transFromGD,writer,peers,updateContacterMsg){
	//处理电话号码
	let telphone = handlePhoneNumber(temp);

	//处理secCard信息
	let secCard = handleSecCardData(temp);

	//处理hkCard信息
	let hkCard = handlehkCardData(temp);

	let transFrom = undefined==transFromGD
										?temp.transFromGD
											?temp.transFromGD
											:'0'
										:sessionStorage.source&&sessionStorage.source!=''
											?transFromGD[sessionStorage.source]
											:'0'
	
	//设置接口传参
	let infosItem = {
		'submitType': transFrom=='0'?sessionStorage.submitType:'customs',//提交方式 2021-6-10 轉入的默認為出入境提交方式
		"telphone": JSON.stringify(telphone),
		"reachArea": ap,
		'smsCheck':undefined==smsCheck?'1'==smsC?'1':temp.SMSVerificationResults=='pass'?'1':temp.SMSVerificationResults=='false'?'0':'2':smsCheck,
		'transFromGD':transFrom,// 1-粤转澳提交、0-澳康码提交、2-港转澳提交
		"peers": undefined==peers?undefined != temp.age?'0':'1':peers,//1-不验证kyc，0-验证kyc
		'updateContacterMsg': undefined==updateContacterMsg?temp.updateContacterMsg:updateContacterMsg,

		"cardType": temp.idType == 'macauCard'?temp.idType:temp.idcardType,
		"cardId": temp.idNum.toUpperCase(),
		"prename": temp.givenname,
		"name": temp.surname,
		"sex": temp.sex,
		"birthDate": temp.dob_year + "-" + ('0'==temp.dob_month?'01':temp.dob_month) + "-" + ('0'==temp.dob_day?'01':temp.dob_day),
		'aiBirthDate':'0'==temp.dob_day?'0'==temp.dob_month?'1':'2':'0',//0-完整 1-缺月日  2-缺日
		"uncomfortable": temp.symptom,
		"hadTouch":temp.symptau?temp.symptau:"",//14天内接触史
		"identity":temp.person?temp.person.identity:'',//身份標識
		"perType":temp.perType?temp.perType:'',//用户自选身份
		'natArea': temp.natArea,
		'natDate': temp.natDate,
		'natAgency':temp.natAgency,
		'natExpireDate':temp.natExpireDate,
		'nat': temp.nat,
		'kycLevel':temp.kycLevel?temp.kycLevel:temp.level?temp.level:'0',
		'otp':temp.otp,
		'whitelistStatus':temp.whitelistStatus,
		'whitelistDate':temp.whitelistDate,
		'whitelistIssuer':temp.whitelistIssuer,
		'visitPosition': temp.visitPosition,
		'contacterName': temp.contacterName,
		'contacterTelno': temp.contacterTelno,
		'comeFrom':temp.comeFrom,
		'transferOut':temp.transferOut,
		'noNeedSL':sessionStorage.params&&JSON.parse(sessionStorage.params)?JSON.parse(sessionStorage.params).noNeedSL:undefined,
		'accessPort':sessionStorage.params&&JSON.parse(sessionStorage.params)&&'gd'==JSON.parse(sessionStorage.params).rg?'GD':'MA',
		'transmitVac':temp.transmitVac||'', // 是否同意將疫苗資訊傳去自助閘機 Y-是 N-否
		// 1.6.1分支取消粤澳互认
		// vac1Area: '0'!=transFrom?temp.vac1Area:'',
		// vac1Batch: '0'!=transFrom?temp.vac1Batch:'',
		// vac1Brand: '0'!=transFrom?temp.vac1Brand:'',
		// vac1Date: '0'!=transFrom?temp.vac1Date:'',
		// vac1Location: '0'!=transFrom?temp.vac1Location:'',
		// vac1Name: '0'!=transFrom?temp.vac1Name:'',
		// vac2Area: '0'!=transFrom?temp.vac2Area:'',
		// vac2Batch: '0'!=transFrom?temp.vac2Batch:'',
		// vac2Brand: '0'!=transFrom?temp.vac2Brand:'',
		// vac2Date: '0'!=transFrom?temp.vac2Date:'',
		// vac2Location: '0'!=transFrom?temp.vac2Location:'',
		// vac2Name: '0'!=transFrom?temp.vac2Name:'',
	}

	if('GD'==temp.comeFrom)infosItem.secCardType = secCard.secCardType,infosItem.secCardId = secCard.secCardId;
	if('HK'==temp.comeFrom)infosItem.hkCardType = hkCard.hkCardType,infosItem.hkCardId = hkCard.hkCardId;

	if(writer)infosItem.writer = writer;//1-填写人 0-同行人
	//补充地址信息并返回
	return setInfosItemAddress(temp,infosItem);
}

//提交接口補充地址參數
function setInfosItemAddress(temp,infosItem){
	let activityAddress = temp.activityAddress?JSON.parse(temp.activityAddress):undefined;
	let residentialAddress = temp.residentialAddress?JSON.parse(temp.residentialAddress):undefined;
	return $.extend(infosItem,{
		//活动地址信息
		predioId:activityAddress?activityAddress.buildingID:'',
		streetId:activityAddress?activityAddress.streetID:'',
		predioBlock:activityAddress?activityAddress.seat:'',//  期/座
		predioFloor:activityAddress?activityAddress.layers:'',//  层数
		predioRoom:activityAddress?activityAddress.unit:'',//  单位
		//居住地址信息
		livePredioId:residentialAddress?residentialAddress.buildingID:'',
		liveStreetId:residentialAddress?residentialAddress.streetID:'',
		livePredioBlock:residentialAddress?residentialAddress.seat:'',//  期/座
		livePredioFloor:residentialAddress?residentialAddress.layers:'',//  层数
		livePredioRoom:residentialAddress?residentialAddress.unit:'',//  单位
		//逗留性质
		stayFor : temp.natureOfStay
	});
}

//显示等待层
function showloading(){
	$(".hidebg").css("height",document.body.scrollHeight);
	$(".probg").css("top",(document.body.clientHeight)/2);
	document.body.scrollTop = 0;
	$(".submitWait").removeClass("hide");
	$("body").css("overflow","hidden");
}
//隐藏等待层
function hideLoading(){
	$(".submitWait").addClass("hide");
	$("body").attr("style","");
}


// 初始化
function setHealthDateTel() {
	var d = JSON.parse(sessionStorage.getItem('cacheFormData'));
	var tel = d.tel_type.split(',');
	var telType = { //多选逗号分隔
		"macau": 'tel_macau', //
		"china": 'tel_china', //
		"hongkong": 'tel_hongkong', //
		"taiwan": 'tel_taiwan', //
		"other": 'other', //tel_areacode + tel_other
	}

	//预设电话
	$("input[type='checkbox'][name='tel_type']").parent().parent().parent().parent().parent().find("input[type='text']").addClass(
		'hide');
	for (let i = 0; i < tel.length; i++) {
		if (tel[i] == 'other') {
			$("input[type='checkbox'][name='tel_type'][value='" + tel[i] + "']").prop('checked', true);
			$("input[type='text'][name='tel_areacode']").removeClass('hide').prop('value', d['tel_areacode']);
			$("input[type='text'][name='tel_other']").removeClass('hide').prop('value', d['tel_other']);
		} else {
			$("input[type='checkbox'][name='tel_type'][value='" + tel[i] + "']").prop('checked', true);
			$("input[type='text'][name='" + telType[tel[i]] + "']").removeClass('hide').prop('value', d[telType[tel[i]]]);
		}
	}

	//预设选择值：健康史、接触史、旅游史
	// $("input[type='checkbox'][name='symptom']").prop('checked', false);
	// $("input[type='checkbox'][name='symptau']").prop('checked', false);
	// $("input[type='checkbox'][name='abefore_place']").prop('checked', false);
	// $("input[type='checkbox'][name='symptom'][value='99']").prop('checked', true);
	// $("input[type='checkbox'][name='symptau'][value='N']").prop('checked', true);
	// $("input[type='checkbox'][name='abefore_place'][value='no']").prop('checked', true);
}

// 獲取歷史數據
function setHealthDate(data, disabled) {
	var lang = getAppConfig().lang;
	var d = $.extend({}, data);
	console.log(d)
	/**
	 * 是否同意將疫苗資訊傳去自助閘機 ?
	 * - 要有兩針疫苗資訊才顯示, 預設不顯示這問題
	 * - 答案可選是/否
	 * - 選了是的話, 整條題目以後就不再顯示
	 * - 之前一天選了否, 仍繼續顯示, 預設為否
	 * - 第一次不要預設
	 * - 但第一次填了否後, 之後要預設否
	 * - 需要強制必填才可以提交
	 */
	// if(data.vac1Batch&&data.vac2Batch&&data.transmitVac!=='Y'){
	// 	$('.transmitVac').removeClass('hide');
	// 	if(d.transmitVac) $("[name='transmitVac'][value='" + d.transmitVac + "']").prop('checked', true);
	// }


	if('select1'==d.selectAddrType || 'select0'==d.selectAddrType)$('#ps-box').addClass('hide');
	if (d.person && d.person.identity) $('input[name=identity]').attr('value', d.person.identity);
	if (d.clause) $('input[name=clause]').attr('value', d.clause);
	if (d.selectAddrType) $('input[name=selectAddrType]').attr('value', d.selectAddrType);
	if ('GD' == d.comeFrom||'HK' == d.comeFrom){
		$('[name="surname"]').prop('disabled', 'disabled');
		$('[name="tel_type"]').prop('disabled', 'disabled');
		$('[name="tel_macau"]').prop('disabled', 'disabled');
		$('[name="tel_china"]').prop('disabled', 'disabled');
		$('[name="tel_hongkong"]').prop('disabled', 'disabled');
		$('[name="tel_taiwan"]').prop('disabled', 'disabled');
		$('[name="tel_areacode"]').prop('disabled', 'disabled');
		$('[name="tel_other"]').prop('disabled', 'disabled');
	}


	var tel = d.tel_type.split(',');
	var telType = { //多选逗号分隔
		"macau": 'tel_macau', //
		"china": 'tel_china', //
		"hongkong": 'tel_hongkong', //
		"taiwan": 'tel_taiwan', //
		"other": 'other', //tel_areacode + tel_other
	}

	//初始化电话
	let telTypeList = $("input[type='checkbox'][name='tel_type']").parent().parent().parent().parent().parent().find("input[type='text']")//.addClass('hide');
	for(let i=0;i<telTypeList.length;i++){
		if(telTypeList[i].name != 'tel_other'){
			$(telTypeList[i]).addClass('hide');
		}
	}
	$("input[type='checkbox'][name='tel_type']").prop('checked', false);

	//初始化证件类型及号码
	$("input[type='checkbox'][name='idType']").prop('checked', false);
	$("input[type='checkbox'][name='idType'][value='" + d.idType + "']").prop('checked', true);
	if ("macauCard" == d.idType) {
		$(".idtypeForm_part").removeClass("hide");
		$("input[type='text'][name='idNum']").removeClass("hide");
		$(".idcardTypeSelect").addClass("hide");
	} else if ("othCard" == d.idType) {
		$(".idtypeForm_part").removeClass("hide");
		$(".idcardTypeSelect").removeClass("hide");
		$("input[type='text'][name='idNum']").removeClass("hide");
		if ("" != d.perType) {
			$(".perTypeSelect").removeClass("hide");
		}
		// $('[name=visitPosition]').prop('value', d.visitPosition).parent().parent().removeClass('hide');
		$('[name=contacterName]').prop('value', d.contacterName).parent().parent().removeClass('hide');
		$('[name=contacterTelno]').prop('value', d.contacterTelno).parent().parent().removeClass('hide');
	} else {
		// $('[name=visitPosition]').prop('value', d.visitPosition).parent().parent().removeClass('hide');
		$('[name=contacterName]').prop('value', d.contacterName).parent().parent().removeClass('hide');
		$('[name=contacterTelno]').prop('value', d.contacterTelno).parent().parent().removeClass('hide');
	}
	if (sessionStorage.notChange && sessionStorage.changeKey == 'cacheFormData') {
		$('[name="sex"]').prop('disabled', 'disabled');
		$('[name="dob_year"]').prop('disabled', 'disabled');
		$('[name="dob_month"]').prop('disabled', 'disabled');
		$('[name="dob_day"]').prop('disabled', 'disabled');
		$('[name="idType"]').prop('disabled', 'disabled');
		$('[name="idcardType"]').prop('disabled', 'disabled');
		$('[name="idNum"]').prop('disabled', 'disabled');
	}

	if (sessionStorage.addType == 'change' || sessionStorage.addType == 'changeBackZero') {
		$("input[type='checkbox'][name='entryMode'][value='" + d.entryMode + "']").prop('checked', true);
		if ("load" == d.entryMode) {
			$("[name=entryMode_load]").removeClass("hide").focus();
		} else if ("waterway" == d.entryMode) {
			$(".waterwayDetail").removeClass("hide").focus();
		} else if ("air" == d.entryMode) {
			$(".airDetail").removeClass("hide").focus();
		}
	}

	for (let i = 0; i < tel.length; i++) {
		if (tel[i] == 'other') {
			$('.tel-other').removeClass('hide');
			$("input[type='checkbox'][name='tel_type'][value='" + tel[i] + "']").prop('checked', true);
			$("input[type='text'][name='tel_areacode']").removeClass('hide').prop('value', d['tel_areacode']);
			$("input[type='text'][name='tel_other']").removeClass('hide').prop('value', d['tel_other']);
		} else {
			$("input[type='checkbox'][name='tel_type'][value='" + tel[i] + "']").prop('checked', true);
			$("input[type='text'][name='" + telType[tel[i]] + "']").removeClass('hide').prop('value', d[telType[tel[i]]]);
		}
	}

	$("input[type='checkbox'][name='id_type'][value='" + d.id_type + "']").prop('checked', true);
	$("input[type='checkbox'][name='id_type']").parent().parent().parent().parent().parent().find("input[type='text']").addClass(
		'hide');
	$("input[type='checkbox'][name='id_type'][value='" + d.id_type + "']").parent().parent().parent().parent().parent().find(
		"input[type='text']").removeClass('hide');

	var idcardType_temp = '';
	var message = {
		'ch': '證件類型不符',
		'chs': '证件类型不符',
		'pt': 'O Tipo de certificado é inconsistente',
		'en': 'Certificate type is inconsistent'
	}
	for (var key in d) {
		var value = d[key];
		if (key != "") {
			$("input[type='text'][name='" + key + "']").prop('value', value);
			$("select[name='" + key + "']").prop('value', value);
			if (sessionStorage.toMacao) {
				if (('idcardType' == key && ('ch_idcard' == value || 'hc' == value)) || ('idNum' == key && ('ch_idcard' ==
						idcardType_temp || 'hc' == idcardType_temp))) {
					$("select[name='" + key + "']").prop('value', '');
					$("input[type='text'][name='" + key + "']").prop('value', '');
					if ('idcardType' == key) idcardType_temp = value;
					scrollTo(0, 0);
					smalltips(message[lang], {
						bg: "bg-red text-white padding-lg"
					})
				} else {
					if (!disabled) {
						if ('visitPosition' != key && 'contacterName' != key && 'contacterTelno' != key) {
							$("input[type='text'][name='" + key + "']").prop('disabled', 'disabled');
							$("select[name='" + key + "']").prop('disabled', 'disabled');
						}
					}
				}
			}
		}
	}
	if (sessionStorage.toMacao) {
		if (!disabled) $('[name="idType"]').prop('disabled', 'disabled');
		// 证件号码错误的代码
		if ('ch_idcard' == idcardType_temp || 'hc' == idcardType_temp) {
			// 	$('[name="idType"]').prop('disabled',false);
			$("[name='idType']").prop('checked', false);
			$(".idcardTypeSelect").prop('value', '').addClass('hide');
			$("[name='idNum']").prop('value', '').addClass('hide');
		}
		if ('' != d.tel_type) $('[name="tel_type"]').prop('disabled', 'disabled');
		else $('[name="tel_type"]').parent().parent().parent().parent().parent().find("input[type='text']").removeAttr(
			"disabled");
	}
	if (sessionStorage.addType == 'change' || sessionStorage.addType == 'changeBackZero'|| sessionStorage.tempData) {
		var places = d.abefore_place.split(',');
		var sym = d.symptom.split(',');
		//预设选择值：健康史、接触史、旅游史
		$("input[type='checkbox'][name='symptom']").prop('checked', false);
		$("input[type='checkbox'][name='symptau']").prop('checked', false);
		$("input[type='checkbox'][name='abefore_place']").prop('checked', false);
		$("input[type='checkbox'][name='symptau'][value='" + d.symptau + "']").prop('checked', true);
		var chuxing = { //多选逗号分隔
			"no": '澳門特別行政區',
			"cat_6": '香港特別行政區',
			"cat_7": '台灣地區',
			"neidi": '中國內地',
			'waiguo': '外國',
		}
		var abefore_place_idx = true;
		clearDateTips($("[name='cat_6dp']"));
		clearDateTips($("[name='cat_7dp']"));
		for (let i = 0; i < places.length; i++) {
			if (chuxing[places[i]] != undefined && chuxing[places[i]] != '') {
				abefore_place_idx = false;
				$("input[type='checkbox'][name='abefore_place'][value='" + places[i] + "']").prop('checked', true);
				if ('cat_6' == places[i]) {
					$('input[name=cat_6dp]').prop('value', d.cat_6dp);
					validDateRange($('input[name=cat_6dp]'),14);
					$('#hkdate').removeClass('hide');
				}
				if ('cat_7' == places[i]) {
					$('input[name=cat_7dp]').prop('value', d.cat_7dp);
					validDateRange($('input[name=cat_7dp]'),21);
					$('#twdate').removeClass('hide');
				}				
				//设置内地
				if ('neidi' == places[i]) {
					var cityList = d.city.split(',');
					var provinceList = d.province.split(',');
					var citydateList = new Array(cityList.length);
					if (d.citydate) {
						citydateList = d.citydate.split(',');
					}
					for (let ii = 0; ii < cityList.length; ii++) {
						addDomestic(),
						setCity($('select[id=' + ii + '][name=city]'), provinceList[ii]),
						$('select[id=' + ii + '][name=province]').prop('value', provinceList[ii]),
						$('select[id=' + ii + '][name=city]').prop('value', cityList[ii]).prop('disabled', false);
						$('input[id=' + ii + '][name=citydate]').prop('value', citydateList[ii]);
						validDateRange($('input[id=' + ii + '][name=citydate]'),14);
					}
					$('#add-domestic').removeClass('hide');
					$('#domestic-msg').removeClass('hide');
				}
				//设置国家
				if ('waiguo' == places[i]) {
					var foreignList = d.foreign.split(',');
					var foreigndateList = new Array(foreignList.length);
					if (d.foreigndate) {
						foreigndateList = d.foreigndate.split(',');
					}
					for (let ii = 0; ii < foreignList.length; ii++) {
						addforeign(),
						$('select[id=' + ii + '][name=foreign]').prop('value', foreignList[ii]);
						$('select[id=' + ii + '][name=foreign]').selectpicker('refresh');
						$('input[id=' + ii + '][name=foreigndate]').prop('value', foreigndateList[ii]);
						validDateRange($('input[id=' + ii + '][name=foreigndate]'),21);
					}
					$('#add-foreign-btn').removeClass('hide');		
					/*addforeign();
					if (foreignList.length == 1) $('select[name=foreign]').selectpicker('val', d.foreign);
					else $('select[name=foreign]').selectpicker('val', foreignList);
					$('select[name=foreign]').selectpicker('refresh');
					*/
				}
			}
		}

		var zhengzhuang = { //多选逗号分隔
			"fever": 'Ter febre',
			"cough": 'Tosse aguda',
			"99": 'Não manifesta nenhum sintoma'
		}
		var symptom_idx = true;
		for (let i = 0; i < sym.length; i++) {
			if (zhengzhuang[sym[i]] != undefined && zhengzhuang[sym[i]] != '') {
				symptom_idx = false;
				$("input[type='checkbox'][name='symptom'][value='" + sym[i] + "']").prop('checked', true);
			}
		}
	}
}

function setDownloadHealthDate(data) {
	var d = $.extend({}, data);
	if (d.person && d.person.identity) $('input[name=identity]').attr('value', d.person.identity);
	if (d.clause) $('input[name=clause]').attr('value', d.clause);
	var tel = d.tel_type.split(',');
	var telType = { //多选逗号分隔
		"macau": 'tel_macau', //
		"china": 'tel_china', //
		"hongkong": 'tel_hongkong', //
		"taiwan": 'tel_taiwan', //
		"other": 'other', //tel_areacode + tel_other
	}

	$("input[type='checkbox'][name='tel_type']").parent().parent().parent().parent().parent().find("input[type='text']").addClass(
		'hide');
	$("input[type='checkbox'][name='tel_type']").prop('checked', false);

	$("input[type='checkbox'][name='idType']").prop('checked', false);
	$("input[type='checkbox'][name='idType'][value='" + d.idType + "']").prop('checked', true);
	if ("macauCard" == d.idType) {
		$(".idtypeForm_part").removeClass("hide");
		$("input[type='text'][name='idNum']").removeClass("hide");
		$("[name='idType-aomen']").removeClass("hide");
		$(".idcardTypeSelect").addClass("hide");
	} else if ("othCard" == d.idType) {
		$(".idtypeForm_part").removeClass("hide");
		$(".idcardTypeSelect").removeClass("hide");
		$("input[type='text'][name='idNum']").removeClass("hide");
		$("[name='idType-other']").removeClass("hide");
		if ("" != d.perType) {
			$(".perTypeSelect").removeClass("hide");
		}
	}
	if ("ch" == d.idcardType || "ch_pass" == d.idcardType) {
		$('[name="ch_idcard"]').parent().parent().removeClass("hide");
	} else {
		$('[name="hc"]').parent().parent().removeClass("hide");
	}

	for (let i = 0; i < tel.length; i++) {
		if (tel[i] == 'other') {
			$("input[type='checkbox'][name='tel_type'][value='" + tel[i] + "']").prop('checked', true).parent().parent().parent()
				.parent().parent().removeClass("hide");
			$("input[type='text'][name='tel_areacode']").removeClass('hide').prop('value', d['tel_areacode']);
			$("input[type='text'][name='tel_other']").removeClass('hide').prop('value', d['tel_other']);
		} else {
			$("input[type='checkbox'][name='tel_type'][value='" + tel[i] + "']").prop('checked', true).parent().parent().parent()
				.parent().parent().removeClass("hide");
			$("input[type='text'][name='" + telType[tel[i]] + "']").removeClass('hide').prop('value', d[telType[tel[i]]]);
		}
	}
	$("input[type='checkbox'][name='id_type'][value='" + d.id_type + "']").prop('checked', true);
	$("input[type='checkbox'][name='id_type']").parent().parent().parent().parent().parent().find("input[type='text']").addClass(
		'hide');
	$("input[type='checkbox'][name='id_type'][value='" + d.id_type + "']").parent().parent().parent().parent().parent().find(
		"input[type='text']").removeClass('hide');
	var lang = getAppConfig().lang;
	for (var key in d) {
		var value = d[key];
		var t = lang == 'ch' ? '陽性' : lang == 'chs' ? '阳性' : lang == 'pt' ? 'negativo' : 'negative';
		var f = lang == 'ch' ? '陰性' : lang == 'chs' ? '阴性' : lang == 'pt' ? 'positivo' : 'positive';
		var nullValue = lang == 'ch' ? '等待中' : lang == 'chs' ? '等待中' : lang == 'pt' ? 'em processamento' : 'Processing';

		if (key != "") {
			if ('nat' == key) $("input[type='text'][name='" + key + "']").val(value == '' ? nullValue : value == 'POSITIVE' ? t :
				f);
			else $("input[type='text'][name='" + key + "']").val(value);
			$("select[name='" + key + "']").val(value);
		}
	}
}

function shengmingshu(e) {
	// 点击按钮打开弹窗
	var lang = getAppConfig().lang;
	if ('ch' == lang) {
		$('#myModalText').html('<h4>使用條款及個人資料收集聲明 : </h4>' +
			'<br>' +
			'<h5>使用條款</h5>' +
			'<br>' +
			'<div>1.1．版權和附隨權利</div>' +
			'<div>《澳門健康碼》網上服務系統（以下簡稱 “健康碼系統”）屬澳門特別行政區衛生局所有，並由「萬高信息科技」負責開發、「科學技術發展基金」及「微眾銀行」負責技術支援。健康碼系統的內容受版權及附隨權利和《打擊電腦犯罪法》保護。</div>' +
			'<br>' +
			'<div>如沒有衛生局的事先明示書面同意，不得顯示、複製、散佈、更改、傳送或使用健康碼系統的內容作任何公開或商業用途。</div>' +
			'<br>' +
			'<div>1.2．免責聲明</div>' +
			'<div>載於健康碼系統的資料僅供參考之用。衛生局不會就任何錯誤、遺漏、不正確或不準確的陳述，承擔任何明示或隱含責任。對任何傷害、損失或損害，包括因使用或不當使用本平臺的資料而引致的損害，不得追究衛生局的責任。</div>' +
			'<br>' +
			'<div>健康碼系統支援透過網絡供應商發出短訊訊息，因此衛生局不能保證成功或準時接收發出的訊息。流動設備應使用Android 4.0, IOS 10.0或以上系統版本。</div>' +
			'<br>' +
			'<div>1.3．健康碼系統安全保護措施</div>' +
			'<div>任何更改或企圖更改健康碼系統提供的資訊，衛生局保留追究責任的權利。</div>' +
			'<br>' +
			'<div>1.4．使用條款的改變</div>' +
			'<div>若本使用條款有任何修改，會不作預先通告以新版本取代舊版本。然而，會在新版本中列明更新修訂日期。</div>' +
			'<br>' +
			'<div>1.5．接受使用條款及私隱聲明 </div>' +
			'<div>使用健康碼系統服務等於使用者無保留地接受上述使用條款和下列私隱聲明，以及對其等定期作出的修改或改正。</div>' +
			'<br>' +
			'<div>2. 如實申報</div>' +
			'<div>根據第81/99/M號法令第四條，衛生當局得採取必要措施以預防或消除可能危及或損害個人或集體健康之因素或情況，為此所有人士需按要求如實作出聲明。</div>' +
			'<br>' +
			'<div>當資料用於入境健康申報時，根據第2/2004號法律（傳染病防治法）第十條第一款及第二款的規定，進入澳門特別行政區的人應如實作出健康申報，並在有需要時接受衛生局工作人員的醫學檢查；根據上述法律第三十條（一）項的規定，違者可處最高六個月徒刑或科最高六十日罰金。</div>' +
			'<br>' +
			'<div>3. 個人資料收集聲明</div>' +
			'<br>' +
			'<div>3.1．一般性聲明聲明</div>' +
			'<div>當使用健康碼系統服務時向衛生局提供的個人資料是用於預防傳染病在本澳發生及傳播，因此在有需要的情況下，可能會向其他政府部門或相關機構披露。除此以外，資料只會於你同意作出該種披露或作出該種披露是第8/2005號法律 (個人資料保護法)所允許的情況下，才向有關方面披露。</div>' +
			'<br>' +
			'<div>使用健康碼系統服務時填寫的資料只有在需要追蹤病人或接觸者時才會被處理。這種情況下，你可能會被要求核實資料，其時你有權查閱及更正你的個人資料。如不出現此情況，申報表將在疫情結束後不作任何處理而銷毀。</div>' +
			'<br>' +
			'<div>當使用健康碼系統服務時，衛生局電腦系統可自動記錄以下資料：所在的互聯網域名、IP地址及相關路由資料；使用服務的日期及時間；過往使用健康碼系統服務時輸入的任何資料。除非發生惡意攻擊健康碼系統的情況，資料將不會用作調查使用者用途。在使用健康碼系統的某些功能時，可能會要求提供手機使用者所在地的資料。健康碼系統只會利用這些資料來提供更進一步的資訊給使用者。</div>' +
			'<br>' +
			'<div>3.2．其他</div>' +
			'<div>使用健康碼系統時，部分服務需要使用者提供個人資料，並可能於衛生局電腦系統中記錄。健康碼系統所收集個人資料只會在衛生局相關的服務中應用，衛生局工作人員在處理有關資料時均遵守澳門特別行政區關於個人資料保護的法律規定。</div>' +
			'<br>' +
			'<div>衛生局將使用安全可靠的方式傳輸電子服務所需的個人資料或相關數據，但使用者需要注意在網絡上傳送資料時仍可能存在一定的風險，資料有可能被未經許可的第三者讀取或使用，使用者使用健康碼系統須自負有關風險。</div>' +
			'<br>' +
			'<div>3.3．對外連結</div>' +
			'<div>本健康碼系統提供連結外連至澳門特別行政區及外地的其他公共和私人實體的網站。當按下連結時，表示使用者離開健康碼系統系統。外部網站的個人資料政策可能有別於本健康碼系統，衛生局不對這些網站的個人資料內容及政策負責。衛生局建議使用者，如外連至手機系統以外的網站，應先瞭解其個人資料政策的相關內容。</div>' +
			'<br>' +
			'<div>2020/4/20</div>'
		)
	} else if ('chs' == lang) {
		$('#myModalText').html('<h4>使用条款及个人资料收集声明 : </h4>' +
			'<br>' +
			'<h5>使用条款</h5>' +
			'<br>' +
			'<div>1.1．版权和附随权利</div>' +
			'<div>《澳门健康码》网上服务系统（以下简称 “健康码系统”）属澳门特别行政区卫生局所有，并由「万高信息科技」负责开发、「科学技术发展基金」及「微众银行」负责技术支援。健康码系统的内容受版权及附随权利和《打击计算机犯罪法》保护。</div>' +
			'<br>' +
			'<div>如没有卫生局的事先明示书面同意，不得显示、复制、散布、更改、传送或使用健康码系统的内容作任何公开或商业用途。</div>' +
			'<br>' +
			'<div>1.2．免责声明</div>' +
			'<div>载于健康码系统的资料仅供参考之用。卫生局不会就任何错误、遗漏、不正确或不准确的陈述，承担任何明示或隐含责任。对任何伤害、损失或损害，包括因使用或不当使用本平台的资料而引致的损害，不得追究卫生局的责任。</div>' +
			'<br>' +
			'<div>健康码系统支援透过网络供应商发出短讯讯息，因此卫生局不能保证成功或准时接收发出的讯息。流动设备应使用Android 4.0, IOS 10.0或以上系统版本。</div>' +
			'<br>' +
			'<div>1.3．健康码系统安全保护措施</div>' +
			'<div>任何更改或企图更改健康码系统提供的信息，卫生局保留追究责任的权利。</div>' +
			'<br>' +
			'<div>1.4．使用条款的改变</div>' +
			'<div>若本使用条款有任何修改，会不作预先通告以新版本取代旧版本。然而，会在新版本中列明更新修订日期。</div>' +
			'<br>' +
			'<div>1.5．接受使用条款及私隐声明 </div>' +
			'<div>使用健康码系统服务等于使用者无保留地接受上述使用条款和下列私隐声明，以及对其等定期作出的修改或改正。</div>' +
			'<br>' +
			'<div>2. 如实申报</div>' +
			'<div>根据第81/99/M号法令第四条，卫生当局得采取必要措施以预防或消除可能危及或损害个人或集体健康之因素或情况，为此所有人士需按要求如实作出声明。</div>' +
			'<br>' +
			'<div>当资料用于入境健康申报时，根据第2/2004号法律（传染病防治法）第十条第一款及第二款的规定，进入澳门特别行政区的人应如实作出健康申报，并在有需要时接受卫生局工作人员的医学检查；根据上述法律第三十条（一）项的规定，违者可处最高六个月徒刑或科最高六十日罚金。</div>' +
			'<br>' +
			'<div>3. 个人资料收集声明</div>' +
			'<br>' +
			'<div>3.1．一般性声明声明</div>' +
			'<div>当使用健康码系统服务时向卫生局提供的个人资料是用于预防传染病在本澳发生及传播，因此在有需要的情况下，可能会向其他政府部门或相关机构披露。除此以外，资料只会于你同意作出该种披露或作出该种披露是第8/2005号法律 (个人资料保护法)所允许的情况下，才向有关方面披露。</div>' +
			'<br>' +
			'<div>使用健康码系统服务时填写的资料只有在需要追踪病人或接触者时才会被处理。这种情况下，你可能会被要求核实资料，其时你有权查阅及更正你的个人资料。如不出现此情况，申报表将在疫情结束后不作任何处理而销毁。</div>' +
			'<br>' +
			'<div>当使用健康码系统服务时，卫生局计算机系统可自动记录以下资料：所在的互联网域名、IP地址及相关路由资料；使用服务的日期及时间；过往使用健康码系统服务时输入的任何资料。除非发生恶意攻击健康码系统的情况，资料将不会用作调查使用者用途。在使用健康码系统的某些功能时，可能会要求提供手机使用者所在地的资料。健康码系统只会利用这些资料来提供更进一步的信息给使用者。</div>' +
			'<br>' +
			'<div>3.2．其他</div>' +
			'<div>使用健康码系统时，部分服务需要使用者提供个人资料，并可能于卫生局计算机系统中记录。健康码系统所收集个人资料只会在卫生局相关的服务中应用，卫生局工作人员在处理有关资料时均遵守澳门特别行政区关于个人资料保护的法律规定。</div>' +
			'<br>' +
			'<div>卫生局将使用安全可靠的方式传输电子服务所需的个人资料或相关数据，但使用者需要注意在网络上传送资料时仍可能存在一定的风险，资料有可能被未经许可的第三者读取或使用，使用者使用健康码系统须自负有关风险。</div>' +
			'<br>' +
			'<div>3.3．对外连结</div>' +
			'<div>本健康码系统提供连结外连至澳门特别行政区及外地的其他公共和私人实体的网站。当按下连结时，表示使用者离开健康码系统系统。外部网站的个人资料政策可能有别于本健康码系统，卫生局不对这些网站的个人资料内容及政策负责。卫生局建议使用者，如外连至手机系统以外的网站，应先了解其个人资料政策的相关内容。</div>' +
			'<br>' +
			'<div>2020/4/20</div>'
		)
	} else if ('en' == lang) {
		$('#myModalText').html('<h4>Terms of Use and Personal Data Collection Statement : </h4>' +
			'<br>' +
			'<div>Terms of Use</div>' +
			'<br>' +
			'<div>1.1．Copyright and Accompanying Rights</div>' +
			'<div>The “Macao Health Code” online service system (hereinafter referred to as “Health Code System”) is owned by the Health Bureau of the Macao Special Administrative Region, and is developed by "InfoMacro Information Technology", technically supported by "WeBank Co., Ltd." and the "Science and Technology Development Fund". The contents of the Health Code System are protected by copyright and accompanying rights as well as the Law on Combating Computer Crimes.</div>' +
			'<br>' +
			'<div>Without the prior express written consent of the Health Bureau, the contents of the Health Code System may not be displayed, reproduced, distributed, modified, transmitted or used for any public or commercial purposes.</div>' +
			'<br>' +
			'<div>1.2．Disclaimer</div>' +
			'<div>The information contained in the Health Code System is for reference only. The Health Bureau shall not bear any express or implied responsibilities for any error, omission, incorrect or inaccurate statement. The Health Bureau shall not be held responsible for any injury, loss or damage, including damage caused by the use or improper use of materials on this platform.</div>' +
			'<br>' +
			'<div>The Health Code System supports sending SMS messages through network providers, so the Health Bureau cannot guarantee successful or timely receipt of the messages sent. Mobile devices running Android 4.0, IOS 10.0 or above are recommended for best experience.</div>' +
			'<br>' +
			'<div>1.3．Security protection measures of Health Code System</div>' +
			'<div>The Health Bureau reserves the right to pursue responsibilities with regard to any change or attempt to alter the information provided by the Health Code System.</div>' +
			'<br>' +
			'<div>1.4．Change to the terms of use</div>' +
			'<div>In the event of any updates to the terms of use, the Health Bureau will issue a new version to replace the old one without further notice. The last updated date will be listed accordingly.</div>' +
			'<br>' +
			'<div>1.5．Agree to the terms of use and privacy statement</div>' +
			'<div>By using the health code system, you agree to be bound without reservation by the terms of use and privacy statement, as well as the changes and amendments made to the terms of use and privacy statement from time to time.</div>' +
			'<br>' +
			'<div>2. Truthful declaration</div>' +
			'<div>In accordance with article 4 of Decree-Law no. 81/99/M, the health authority may take the measures necessary to prevent or eliminate factors or situations that may jeopardize or undermine individual or collective health; for this reason, all individuals are required to make the declaration truthfully.</div>' +
			'<br>' +
			'<div>For information required in health declaration on arrival - In accordance with regulations of subparagraphs 1 and 2 of article 10 of Law No. 2/2004 – “Law on the Prevention and Control of Infectious Diseases”, people entering the Macao SAR should declare their health condition truthfully while they are subject to, whenever necessary, medical examination performed by officers of the Health Bureau; the penalty for violation is a prison term of up to 6 months or a day-fine of up to 60 days, under item 1 of article 30 of the same law.</div>' +
			'<br>' +
			'<div>3. Personal Data Collection Statement</div>' +
			'<br>' +
			'<div>3.1．General declaration</div>' +
			'<div>The personal information provided to the Health Bureau in using services of the Health Code System is intended to beused to prevent the occurrence and spread of infectious diseases in Macao; hence, such information may be disclosed to other government departments or relevant entities if necessary. Apart from this, the information may only be disclosed to parties where you have given consent to such disclosure or where such disclosure is allowed under Law no. 8/2005 (Personal Data Protection Act).</div>' +
			'<br>' +
			'<div>The information you provide in using services of the Health Code System will only be handled when tracing of patients and contacts is necessary. In such occasion, you may be required to verify the personal data, during which you have a right to access or correct your personal data. Otherwise, the declaration form will be destroyed without being handled after the end of the outbreak.</div>' +
			'<br>' +
			'<div>When you use the services of the Health Code System, the Health Bureau computer system may automatically record such information as your Internet domain name, IP address and related routing information; the date and time of using the services; any data entered in the previous use(s) of the Health Code System. Unless there is a malicious attack on the Health Code System, such data will not be used for investigation of users. When performing certain functions of the Health Code System, you may be asked to provide information about the location of the mobile phone user; such data will only be used to provide further information to the user.</div>' +
			'<br>' +
			'<div>3.2．Others</div>' +
			'<div>When using the Health Code System, some services require users to provide personal data which may be recorded in the information system of the Health Bureau. The personal data collected by the Health Code System will only be used in relevant services of the Health Bureau. When handling the data, staff of the Health Bureau shall abide by the regulations of the Macao Special Administrative Region on the protection of personal data.</div>' +
			'<br>' +
			'<div>The Health Bureau will use safe and reliable means to transfer personal data or relevant data required for the electronic service via safe and reliable means. However, it is worth noting that there are certain risks in transmitting information over the public network, for it may be accessed and used by unauthorized third parties, which will be the sole responsibility of the users.</div>' +
			'<br>' +
			'<div>3.3．External links</div>' +
			'<div>This Health Code System provides links to websites of other public and private entities in the Macao Special Administrative Region and other regions. When the link is clicked, it means that the user leaves the Health Code System. The personal information policy of external websites may be different from that of this Health Code System, and the Health Bureau is not responsible for the personal information content and policies of these external websites. When connected to a website outside the mobile app system, the Health Bureau recommends users to firstly understand relevant content of their personal information policy.</div>' +
			'<br>' +
			'<div>2020/4/20</div>'
		)
	} else if ('pt' == lang) {
		$('#myModalText').html('<h4>Termos de utilização e declaração de recolha de dados pessoais : </h4>' +
			'<br>' +
			'<h5>Termos de utilização</h5>' +
			'<br>' +
			'<div>1.1．Direitos de autor e direitos conexos</div>' +
			'<div>O sistema on-line de serviços “Código de Saúde de Macau” (adiante designado por “sistema do Código de Saúde”) é propriedade dos Serviços de Saúde da Região Administrativa Especial de Macau (RAEM). O desenvolvimento do sistema é da responsabilidade da “Infomacro Tecnologia de Informação Limitada”, o suporte técnico é da “WeBank Co., Ltd.” e “Fundo para o Desenvolvimento das Ciências e da Tecnologia”. Os conteúdos do sistema do Código de Saúde estão protegidos por direitos de autor e direitos conexos e pela Lei de Combate à Criminalidade Informática.</div>' +
			'<br>' +
			'<div>Não é permitido exibir, reproduzir, distribuir, modificar, transmitir ou usar os conteúdos do sistema do Código de Saúde, de forma alguma, para nenhum propósito público ou comercial sem prévio e expresso consentimento escrito dos Serviços de Saúde.</div>' +
			'<br>' +
			'<div>1.2．Declaração de exclusão de responsabilidade</div>' +
			'<div>As informações constantes no sistema do Código de Saúde servem apenas como referência. Os Serviços de Saúde não assumem qualquer responsabilidade por qualquer erro, omissão ou afirmação incorrecta ou imprecisa, quer seja expressa ou implícita. Os Serviços de Saúde não podem ser responsabilizados por qualquer prejuízo, perda ou dano, incluindo o dano emergente, resultante da utilização ou utilização imprópria das informações contidas nesta plataforma.</div>' +
			'<br>' +
			'<div>O sistema do Código de Saúde suporta o envio de mensagens de texto através dos fornecedores da rede de telecomunicações, pelo que os Serviços de Saúde não podem garantir o sucesso ou a pontualidade da recepção das mensagens enviadas. Os dispositivos móveis devem usar as versões Android 4.0, iOS 10.0 ou superiores, consoante os casos.</div>' +
			'<br>' +
			'<div>1.3．Protecção e segurança do Sistema de código de saúde</div>' +
			'<div>Os Serviços de Saúde reservam-se o direito de accionar os meios que considerem adequados para a efectivação de responsabilidade por quem altere ou tenha a intenção de alterar as informações constantes no sistema do Código de Saúde.</div>' +
			'<br>' +
			'<div>1.4．Alteração dos termos de utilização</div>' +
			'<div>Em caso de alteração aos presentes termos de utilização, a nova versão substitui a versão antiga sem qualquer aviso prévio. No entanto, a data da actualização da versão será indicada na nova versão.</div>' +
			'<br>' +
			'<div>1.5．Aceitação dos termos de utilização e declaração de privacidade</div>' +
			'<div>A utilização dos serviços do sistema do Código de Saúde significa que o utilizadoraceita sem reservas os termos de utilização, acima referidos, e a declaração de privacidade, a seguir definida, bem como as alterações ou emendas que às mesmas sejam periodicamente efectuadas.</div>' +
			'<br>' +
			'<div>2. Declaração verdadeira</div>' +
			'<div>Nos termos do artigo 4.º do Decreto-Lei n.º 81/99/M, a Autoridade Sanitária pode tomar as medidas indispensáveis à prevenção ou à eliminação de factores ou situações susceptíveis de pôr em risco ou causar prejuízos à saúde individual ou colectiva, motivo pelo qual todos os indivíduos devem fazer uma declaração verdadeira conforme as exigências.</div>' +
			'<br>' +
			'<div>Aquando do fornecimento de informações na declaração de saúde para entrada, nos termos dos n.os 1 e 2 do artigo 10.º da Lei n.º 2/2004 (Lei de prevenção, controlo e tratamento de doenças transmissíveis), as pessoas que entram na RAEM devem declarar o seu estado de saúde de forma sincera, e aceitar serem sujeitas, em caso de necessidade, a exames médicos pelo pessoal dos Serviços de Saúde, sob pena de serem punidas com pena de prisão até 6 meses ou de multa até 60 dias, nos termos da alínea 1) do artigo 30.º do mesmo diploma.</div>' +
			'<br>' +
			'<div>3. Declaração de recolha de dados pessoais</div>' +
			'<br>' +
			'<div>3.1．Declaração geral</div>' +
			'<div>Aquando da utilização dos serviços do sistema do Código de Saúde, os dados pessoais fornecidos aos Serviços de Saúde são utilizados para prevenir a ocorrência e a propagação de doenças transmissíveis em Macau, pelo que, quando necessário, os dados podem ser revelados a outros serviços públicos ou entidades relacionadas. Além disso, os dados serão revelados somente com o consentimento do seu titular ou tal divulgação será efectuada apenas quando permitido pela Lei n.º 8/2005 (Lei da protecção de dados pessoais).</div>' +
			'<br>' +
			'<div>Aquando da utilização dos serviços do sistema do Código de Saúde, os dados pessoais preenchidos só serão processados quando for necessário rastear um doente ou pessoa de contacto. Nesse caso, poderá ser necessário solicitar ao titular a verificação dos seus dados pessoais, altura em que o titular terá direito a aceder ou rectificar os seus dados pessoais. Caso não ocorram tais situações, adeclaração será destruída sem qualquer processamento após o termo da epidemia.</div>' +
			'<br>' +
			'<div>Aquando da utilização do sistema do Código de Saúde de Macau, o sistema informático dos Serviços de Saúde regista automaticamente as seguintes informações: o domínio da página electrónica visitada, o endereço IP, os dados de encaminhamento relevantes, a data e a hora de utilização dos serviços, bem como quaisquer informações anteriormente inseridas aquando do uso do sistema do Código de Saúde de Macau. Estas informações não serão utilizadas para efeitos de investigação dos utilizadores, excepto em situações de ataque malicioso ao sistema do Código de Saúde. Aquando da utilização de algumas funções do sistema do Código de Saúde de Macau, é possível que seja exigido o fornecimento de informações relativas à localização do utilizador do telemóvel. O sistema do Código de Saúde de Macau processa estes dados apenas para prestar mais informações ao utilizador. </div>' +
			'<br>' +
			'<div>3.2．Outros</div>' +
			'<div>Na utilização do sistema do Código de Saúde de Macau, alguns serviços exigem o preenchimento de alguns dados pessoais, que possivelmente ficam registados no sistema informático dos Serviços de Saúde. Os dados pessoais recolhidos pelo sistema do Código de Saúde de Macau só são para utilização pelos respectivos Serviços de Saúde, e os trabalhadores envolvidos no seu tratamento devem obrigatoriamente de ter em observância as normas consagradas na Lei de Protecção de Dados Pessoais vigente na RAEM. </div>' +
			'<br>' +
			'<div>Os Serviços de Saúde utilizam meios seguros e confiáveis para transmissão de dados pessoais e de outros dados necessários aos serviços electrónicos. Contudo, os utilizadores devem estar cientes de haver um certo nível de risco na transmissão de dados através da internet, podendo os dados serem acedidos ou utilizados por terceiros sem autorização. Os utilizadores devem assumir por conta própria os riscos inerentes ao utilizarem o sistema do Código de Saúde de Macau. </div>' +
			'<br>' +
			'<div>3.3．Ligações externas</div>' +
			'<div>No conteúdo do presente sistema do Código de Saúde de Macau são fornecidas ligações a páginas electrónicas externas de outras entidades públicas e privadas da Região Administrativa Especial de Macau e do exterior. Ao aceder a estas ligações, o utilizador está a sair do sistema do Código de Saúde de Macau. A política de dados pessoais dessas páginas electrónicas externas podem divergir das do presente sistema do Código de Saúde, pelo que os Serviços de Saúde não se responsabilizam pelos conteúdos e política de dados pessoais definidos em tais páginas. Os Serviços de Saúde aconselham os utilizadores que acedam a páginas electrónicas exteriores, que não o sistema do Código de Saúde de Macau, para a verificação prévia das respectivas políticas de dados pessoais.</div>' +
			'<br>' +
			'<div>2020/4/20</div>'
		)
	}
	$('#myModal').css('display', 'block');
}


/**
 *
 *
 *
 *
 *
 *
 *
 * 原js
 *
 *
 *
 *
 *
 *
 *
 */
function getLocationUrl() {
	return location.href
}

function decodeURIParams(query) {
	null == query && (query = window.location.search), "?" == query[0] && (query = query.substring(1));
	for (var params = query.split("&"), result = {}, i = 0; i < params.length; i++) {
		var param = params[i],
			pos = param.indexOf("=");
		if (pos >= 0) {
			var key = decodeURIComponent(param.substring(0, pos)),
				val = decodeURIComponent(param.substring(pos + 1));
			result[key] = val
		} else {
			var key;
			result[key = decodeURIComponent(param)] = !0
		}
	}
	return result
}

function encodeURIParams(params, addQuestionMark) {
	var pairs = [];
	for (var key in params)
		if (params.hasOwnProperty(key)) {
			var value = params[key];
			null != value && pairs.push(encodeURIComponent(key) + "=" + encodeURIComponent(value))
		} return 0 == pairs.length ? "" : (addQuestionMark ? "?" : "") + pairs.join("&")
}

null == Number.prototype.round && (Number.prototype.round = function() {
	return Math.round(this)
}), null == Number.prototype.ceil && (Number.prototype.ceil = function() {
	return Math.ceil(this)
}), null == Number.prototype.floor && (Number.prototype.floor = function() {
	return Math.floor(this)
}), null == Number.prototype.between && (Number.prototype.between = function(a, b, inclusive) {
	var min = Math.min.apply(Math, [a, b]),
		max = Math.max.apply(Math, [a, b]);
	return inclusive ? this >= min && this <= max : this > min && this < max
}), null == Number.prototype.isBetween && (Number.prototype.isBetween = function(low, high, inclusive) {
	return inclusive ? this >= low && this <= high : this > low && this < high
}), null == Number.prototype.format && (Number.prototype.format = function(n, x, s, c) {
	var re = "\\d(?=(\\d{" + (x || 3) + "})+" + (n > 0 ? "\\D" : "$") + ")",
		num = this.toFixed(Math.max(0, ~~n));
	return (c ? num.replace(".", c) : num).replace(new RegExp(re, "g"), "$&" + (s || ","))
}), void 0 === Number.prototype.toRad && (Number.prototype.toRad = function() {
	return this * Math.PI / 180
}), String.prototype.isURL = function() {
	var rx, matches = new RegExp("http(s)?://([//w-]+//.)+[//w-]+(/[//w-//+ ./?%:&=#//[//]]*)?").exec(this);
	return null !== matches && this === matches[0]
}, String.prototype.unescHtml = function() {
	var i, e = {
			"&lt;": "<",
			"&gt;": ">",
			"&amp;": "&",
			"&quot;": '"'
		},
		t = this;
	for (i in e) t = t.replace(new RegExp(i, "g"), e[i]);
	return t
}, String.prototype.escHtml = function() {
	var i, e = {
			"&": "&amp;",
			"<": "&lt;",
			">": "&gt;",
			'"': "&quot;"
		},
		t = this;
	for (i in e) t = t.replace(new RegExp(i, "g"), e[i]);
	return t
}, String.prototype.encodeURI = function() {
	var t;
	return encodeURIComponent(this)
}, String.prototype.decodeURI = function() {
	for (var t = this, t1 = decodeURIComponent(t); t !== t1;) t = t1, t1 = decodeURIComponent(t);
	return t
}, String.prototype.trim = function() {
	return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
}, String.prototype.trimL = function() {
	return this.replace(/(^\s*)/g, "")
}, String.prototype.trimR = function() {
	return this.replace(/(\s*$)/g, "")
}, String.prototype.isEmpty = function() {
	return "" === this.toString()
}, String.prototype.contains = function(t) {
	return this.indexOf(t) >= 0
}, String.prototype.beginsWith = function(t, i) {
	return !1 === i ? t == this.substring(0, t.length) : t.toLowerCase() == this.substring(0, t.length).toLowerCase()
}, String.prototype.endsWith = function(t, i) {
	return !1 === i ? t == this.substring(this.length - t.length) : t.toLowerCase() == this.substring(this.length - t.length)
		.toLowerCase()
}, String.prototype.toFloat = function(precision) {
	return precision = precision || 2, parseFloat(this, 10).toFixed(precision)
}, String.prototype.toInt = function() {
	return parseInt(this, 10).toString()
}, String.prototype.add = function(addend) {
	var sum;
	return parseFloat(this, 10) + parseFloat(addend, 10) + ""
}, String.prototype.isMoneyType = function() {
	return this._match(/^(-?\d+)(\.\d{0,2})?$/)
}, String.prototype.isIp = function() {
	return this._match(
		/^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/
	)
}, String.prototype.Occurs = function(ch) {
	return this.split(ch).length - 1
}, String.prototype.isDigit = function() {
	var s;
	return 0 === this.trim().replace(/\d/g, "").length
}, String.prototype.isNumber = function() {
	var s;
	return this.trim().search(/^[+-]?[0-9.]*$/) >= 0
}, String.prototype.replaceAll = function(target, replacement) {
	return this.split(target).join(replacement)
}, String.prototype.clength = function() {
	var arr = this.match(/[^\x00-\xff]/gi);
	return this.length + (null === arr ? 0 : arr.length)
}, String.prototype.isInChinese = function() {
	return null !== this.match(/[^\x00-\xff]/gi)
}, String.prototype.isChinese = function() {
	var myReg;
	return /^[\u0391-\uFFE5]+$/.test(this)
}, String.prototype.regexIndexOf = function(pattern, startIndex) {
	startIndex = startIndex || 0;
	var searchResult = this.substr(startIndex).search(pattern);
	return -1 === searchResult ? -1 : searchResult + startIndex
}, String.prototype.regexLastIndexOf = function(pattern, startIndex) {
	startIndex = void 0 === startIndex ? this.length : startIndex;
	var searchResult = this.substr(0, startIndex).reverse().regexIndexOf(pattern, 0);
	return -1 === searchResult ? -1 : this.length - ++searchResult
}, String.prototype.reverse = function() {
	return this.split("").reverse().join("")
}, String.prototype.reverseDateString = function() {
	return this.split("/").reverse().join("/")
}, String.prototype.leftLength = function(len) {
	return isNaN(len) || null === len ? len = this.length : (parseInt(len) < 0 || parseInt(len) > this.length) && (len =
		this.length), this.substr(0, len)
}, String.prototype.ellipsis = function(cutlen) {
	return this.clength >= cutlen && (newStr = str.substring(0, cutlen) + "..."), newStr
}, String.prototype.chunk = function(n) {
	return void 0 === n && (n = 2), this.match(RegExp(".{1," + n + "}", "g"))
}, String.prototype.padRight = function(s, n) {
	for (var str = this; str.length < n;) str += s;
	return str
}, String.prototype.padLeft = function(s, n) {
	return Array(n - String(this).length + 1).join(s || "0") + this
}, String.prototype.hashCode = function() {
	var hash = 0;
	if (0 == this.length) return hash;
	for (i = 0; i < this.length; i++) char = this.charCodeAt(i), hash = (hash << 5) - hash + char, hash &= hash;
	return hash
}, String.prototype.format = function() {
	var result = this;
	if (0 == arguments.length) return null;
	for (var i = 0; i < arguments.length; i++) {
		var re = new RegExp("\\{" + i + "\\}", "gm");
		result = result.replace(re, arguments[i])
	}
	return result
}, String.prototype.replaceArray = function(find, replace) {
	for (var replaceString = this, regex, i = 0; i < find.length; i++) regex = new RegExp(find[i], "g"), "string" ==
		typeof replace ? replaceString = replaceString.replace(regex, replace) : "array" == typeof replace && (replaceString =
			replaceString.replace(regex, replace[i]));
	return replaceString
}, Array.prototype.toUpperCase = function() {
	for (i = 0; i < this.length; i++) this[i] = this[i].toUpperCase()
}, Array.prototype.toLowerCase = function() {
	for (i = 0; i < this.length; i++) this[i] = this[i].toLowerCase()
}, Array.prototype.first || (Array.prototype.first = function() {
	return this[0]
}), Array.prototype.first || (Array.prototype.last = function() {
	return this[this.length - 1]
}), Array.prototype.max = function() {
	return Math.max.apply(Math, this)
}, Array.prototype.min = function() {
	return Math.min.apply(null, this)
}, Array.prototype.remove = function() {
	for (var what, a = arguments, L = a.length, ax; L && this.length;)
		for (what = a[--L]; - 1 !== (ax = this.indexOf(what));) this.splice(ax, 1);
	return this
}, Array.prototype.indexOf || (Array.prototype.indexOf = function(searchElement, fromIndex) {
	var k;
	if (null == this) throw new TypeError('"this" is null or not defined');
	var o = Object(this),
		len = o.length >>> 0;
	if (0 === len) return -1;
	var n = 0 | fromIndex;
	if (n >= len) return -1;
	for (k = Math.max(n >= 0 ? n : len - Math.abs(n), 0); k < len;) {
		if (k in o && o[k] === searchElement) return k;
		k++
	}
	return -1
}), Array.prototype.filter || (Array.prototype.filter = function(fun) {
	var len = this.length;
	if ("function" != typeof fun) throw new TypeError;
	for (var res = new Array, thisp = arguments[1], i = 0; i < len; i++)
		if (i in this) {
			var val = this[i];
			fun.call(thisp, val, i, this) && res.push(val)
		} return res
}), Date.prototype.isDate = function() {
	return "Invalid Date" !== this && !isNaN(this)
}, Date.prototype.isLeapYear = function(year) {
	return year % 4 == 0 && year % 100 != 0 || year % 400 == 0
}, Date.prototype.getDaysInMonth = function(year, month) {
	return [31, this.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]
}, Date.prototype.thisLeapYear = function() {
	return this.isLeapYear(this.getFullYear())
}, Date.prototype.thisDaysInMonth = function() {
	return this.getDaysInMonth(this.getFullYear(), this.getMonth())
}, Date.prototype.addMonths = function(m) {
	var d = new Date(this),
		years = Math.floor(m / 12),
		months = m - 12 * years;
	return years && d.setFullYear(d.getFullYear() + years), months && d.setMonth(d.getMonth() + months), d
}, Date.prototype.addDays = function(num) {
	var value = this.valueOf();
	return new Date(value += 864e5 * num)
}, Date.prototype.addSeconds = function(num) {
	var value = this.valueOf();
	return new Date(value += 1e3 * num)
}, Date.prototype.addMinutes = function(num) {
	var value = this.valueOf();
	return new Date(value += 6e4 * num)
}, Date.prototype.addHours = function(num) {
	var value = this.valueOf();
	return new Date(value += 36e5 * num)
}, Date.prototype.Format = function(fmt) {
	if ("" !== (fmt || "")) {
		var o = {
			"M+": this.getMonth() + 1,
			"d+": this.getDate(),
			"h+": this.getHours(),
			"m+": this.getMinutes(),
			"s+": this.getSeconds(),
			"q+": Math.floor((this.getMonth() + 3) / 3),
			S: this.getMilliseconds()
		};
		for (var k in /(y+)/.test(fmt) && (fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))),
				o) new RegExp("(" + k + ")").test(fmt) && (fmt = fmt.replace(RegExp.$1, 1 == RegExp.$1.length ? o[k] : ("00" + o[k])
			.substr(("" + o[k]).length)));
		return fmt
	}
	return fmt
}, null == location.params && (location.params = function(params) {
	var obj = {},
		i, parts, len, key, value;
	if ("string" == typeof params) return (value = location.search.match(new RegExp("[?&]" + params + "=?([^&]*)[&#$]?"))) ?
		value[1] : void 0;
	var _params = location.search.substr(1).split("&");
	for (i = 0, len = _params.length; i < len; i++)(parts = _params[i].split("="))[0] && (obj[parts[0]] = parts[1] || !0);
	if ("object" != typeof params) return obj;
	for (key in params) void 0 === (value = params[key]) ? delete obj[key] : obj[key] = value;
	for (key in parts = [], obj) parts.push(key + (!0 === obj[key] ? "" : "=" + obj[key]));
	location.search = parts.join("&")
});
var has3d = "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix,
	screenWidth = screen.availWidth,
	screenHeight = screen.availHeight,
	windowWidth = window.innerWidth || document.documentElement.clientWidth,
	windowHeight = window.innerHeight || document.documentElement.clientHeight,
	keyboardHeight = 0,
	ua = ua || navigator.userAgent.toLowerCase(),
	IEVersion = !!window.ActiveXObject && +/msie\s(\d+)/i.exec(navigator.userAgent)[1] || NaN,
	isIE = null != ua.match(/trident/i) || null != ua.match(/msie/i),
	isIE6 = 6 === IEVersion,
	isIE7 = 7 === IEVersion,
	isIE8 = 8 === IEVersion,
	isIE9 = 9 === IEVersion,
	isIE10 = null != ua.match(/trident\/[6]/i),
	isIE11 = null != ua.match(/trident\/[7]/i),
	isSafari = null != ua.match(/safari/i),
	isFirefox = ua.match(/firefox\/([\d.]+)/),
	isWebkit = ua.match(/webkit\/([\d.]+)/),
	isWebOS = ua.match(/(webos|hpwos)[\s\/]([\d.]+)/),
	isIpod = null != ua.match(/ipod/i),
	isIpad = null != ua.match(/ipad/i),
	isIphone = null != ua.match(/iphone/i),
	isIphone4 = isIphone && 480 == window.screen.height,
	isIOS5 = null != ua.match(/(ipad|iphone|ipod touch);.*CPU.*OS 5_\d/i),
	isIOS6 = null != ua.match(/(ipad|iphone|ipod touch);.*CPU.*OS 6_\d/i),
	isIOS7 = null != ua.match(/(ipad|iphone|ipod touch);.*CPU.*OS 7_\d/i),
	isIOS8 = null != ua.match(/(ipad|iphone|ipod touch);.*CPU.*OS 8_\d/i),
	isAndroid = null != ua.match(/android/i),
	isNote10 = null != ua.match(/n8000/i),
	isWebOS = null != ua.match(/webos/i),
	isBlackBerry = null != ua.match(/blackberry/i),
	isAndroidPhoneGap = null != ua.match(/androidphoneGap/i),
	isIOSDevice = isIphone || isIpod || isIpad,
	isStandAlone = 1 == window.navigator.standalone,
	isStandaloneAndIOS7 = isIOS7 && isStandAlone,
	isStandaloneAndIOS8 = isIOS8 && isStandAlone,
	isAppleBrowser = !isStandAlone && isSafari,
	isAppleWebview = !isStandAlone && !isSafari,
	isMobile = isIphone || isIpod || isAndroid && !isNote10 || isWebOS || isBlackBerry,
	// add by Joseph 20210815
	isMHCiPhone = null != ua.match(/MHC_iPhone_/i),
	isMHCAndroid = null != ua.match(/MHC_Android_/i),
	isMHCApp = isMHCiPhone || isMHCAndroid,
	isTablet = isIpad || isNote10,
	isPC = !isMobile && (null != ua.match(/windows/i) || null != ua.match(/macintosh/i)),
	isHtml5Compatible = null != document.createElement("canvas").getContext,
	isSupportTouch = "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch,
	isShowLog = !isIE,
	isIncludeMinJs = !1,
	isDebugLog = !1,
	isTestWebPage = !1,
	isCache = !1;

function fixIE8PreventDefault() {
	isIE8 && (Event = Event || window.Event, Event.prototype.stopPropagation = Event.prototype.stopPropagation || function() {
		this.cancelBubble = !0
	}, Event.prototype.preventDefault = Event.prototype.preventDefault || function() {
		this.returnValue = !1
	})
}
var getIOSVersion = function() {
		return parseFloat(("" + (/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ""])[
			1]).replace("undefined", "3_2").replace("_", ".").replace("_", "")) || NaN
	},
	getAndroidVersion = function() {
		var match = ua.match(/android\s([0-9\.]*)/);
		return match ? match[1] : NaN
	},
	getUAString = function() {
		var ua = navigator.userAgent;
		return ua.indexOf("iPhone") >= 0 ? "iPhone" : ua.indexOf("iPad") >= 0 ? "iPad" : ua.indexOf("iPod") >= 0 ? "iPod" :
			ua.indexOf("Android") >= 0 ? "Android" : ua.indexOf("Android") >= 0 ? "Android" : ua.indexOf("Edge") >= 0 ?
			"IE Edge" : ua.indexOf("MSIE 7") >= 0 ? "IE 7.0" : ua.indexOf("Trident/4") >= 0 ? "IE 8.0" : ua.indexOf("Trident/5") >=
			0 ? "IE 9.0" : ua.indexOf("Trident/6") >= 0 ? "IE 10.0" : ua.indexOf("Trident/7") >= 0 ? "IE 11.0" : ua.indexOf(
				"Chrome") >= 0 ? "Chrome" : ua.indexOf("safari") >= 0 ? "Safari" : "Other"
	},
	getBrowserInfo = function() {
		var ua = ua || navigator.userAgent.toLowerCase(),
			isPC = null != ua.match(/windows/i) || null != ua.match(/macintosh/i);
		return {
			isMobile: !isPC,
			isPC: isPC,
			isChrome: ua.indexOf("chrome") >= 0,
			isHtml5: isHtml5Compatible,
			isStandAlone: isStandAlone,
			isHtml5Compatible: null != document.createElement("canvas").getContext,
			isSupportTouch: "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch,
			isAndroidPhoneGap: null != ua.match(/androidphoneGap/i),
			isStandAlone: 1 == window.navigator.standalone,
			windowWidth: getWindowWidth(),
			windowHeight: getWindowHeight(),
			screenWidth: $(window).width(),
			screenHeight: $(window).height(),
			iexplore: ua.match(/Edge\/([^\s]+)/i) || ua.match(/MSIE\/([^\s]+)/i) || ua.match(/Trident\/([^\s]+)/i),
			ieversion: !!window.ActiveXObject && +/msie\s(\d+)/i.exec(ua)[1] || NaN,
			weixin: ua.match(/micromessenger\/([^\s]+)/i),
			webkit: ua.match(/webkit\/([\d.]+)/i),
			android: ua.match(/(android)\s+([\d.]+)/i),
			ipad: ua.match(/(ipad).*OS\s([\d_]+)/i),
			ipod: ua.match(/(ipod).*OS\s([\d_]+)/i),
			iphone: !this.ipod && !this.ipad && ua.match(/(iphone\sos)\s([\d_]+)/i),
			webos: ua.match(/(webos|hpwos)[\s\/]([\d.]+)/i),
			touchpad: this.webos && ua.match(/touchpad/i),
			kindle: ua.match(/kindle\/([\d.]+)/i),
			silk: ua.match(/silk\/([\d._]+)/i),
			blackberry: ua.match(/(blackberry).*version\/([\d.]+)/i),
			mqqbrowser: ua.match(/mqqbrowser\/([\d.]+)/i),
			chrome: ua.match(/crios\/([\d.]+)/i) || ua.match(/chrome\/([\d.]+)/i),
			opera: ua.match(/opera\/([\d.]+)/i),
			safari: ua.match(/safari\/([\d.]+)/i)
		}
	},
	browser = getBrowserInfo(),
	appconfig = {
		appsid: "",
		apploginid: "",
		apptype: "",
		appsaverdelay: 15,
		isParentIframe: isParentIframe(),
		device: {
			isPC: isPC,
			isMobile: isMobile,
			browser: browser,
			UserAgentString: getUAString(),
			isIE: isIE,
			IEVersion: IEVersion,
			isIOS: isIOSDevice,
			IOSVersion: getIOSVersion(),
			isAndroid: isAndroid,
			AndroidVersion: getAndroidVersion(),
			isHtml5: isHtml5Compatible,
			isStandAlone: isStandAlone,
			screenWidth: $(window).width(),
			screenHeight: $(window).height()
		}
	};

function n2nr(txt) {
	return (txt || "").replace(/\n|\\n/g, "&#13;&#10;")
}

function Cr2HtmlBr(txt) {
	return (txt || "").replace(/\n|\\n/g, "<br>")
}

function HtmlBr2Cr(txt) {
	return (txt || "").replace(/<br\>/g, "\n")
}

function RemoveCr(txt) {
	return (txt || "").replace(/\n|\\n/g, "")
}

function RemoveHtmlTags(txt) {
	return (txt || "").replace(/<\/?[^>]+(>|$)/g, "")
}

function fixNull(txt) {
	return txt || ""
}

function getRandomRange(min, max) {
	return Math.floor(Math.random() * (max - min + 1)) + min
}

function checkPermission(slv) {
	var isPass = !1;
	if ("" != (slv = $.trim(slv || ""))) {
		var plv = appconfig.permitkycLevel || "",
			a = slv.split(",");
		$.each(a, (function(k, v) {
			if (plv.split(",").indexOf(a[k]) >= 0) return isPass = !0, !1
		}))
	}
	return isPass
}

function getObjectSize(obj) {
	var size = 0,
		key;
	for (key in obj) obj.hasOwnProperty(key) && size++;
	return size
}

function getObjectKey(o) {
	return Object.keys(o)
}

function getObject(k, v) {
	var a = {};
	if ("string" == typeof k && k.indexOf("{") < 0 && void 0 === v) try {
		eval("a={" + k + "};")
	} catch (e) {
		logme(e.message)
	} else if ("string" == typeof k && 0 == k.indexOf("{") && void 0 === v) try {
		eval("a=" + k + ";")
	} catch (e) {
		logme(e.message)
	} else "string" == typeof k && void 0 !== v ? a[k] = v : "object" == typeof k && "string" == typeof v && 0 == v.indexOf(
			"{") ? (eval("var b=" + v + ";"), $.extend(a, k, b)) : "object" == typeof k && "string" == typeof v ? (eval(
			"var b={" + v + "};"), $.extend(a, k, b)) : "object" == typeof k && "object" != typeof v ? $.extend(a, k, v) : a =
		k;
	return a
}

function sortObjectByKey(obj) {
	var keys = [],
		sorted_obj = {};
	for (var key in obj) obj.hasOwnProperty(key) && keys.push(key);
	return keys.sort(), jQuery.each(keys, (function(i, key) {
		var val = obj[key];
		if (val instanceof Array) {
			var arr = [];
			jQuery.each(val, (function() {
				arr.push(sortObjectByKey(this))
			})), val = arr
		} else val instanceof Object && (val = sortObjectByKey(val));
		sorted_obj[key] = val
	})), sorted_obj
}

function getPercentage(portion, total) {
	return (parseFloat(portion) / parseFloat(total) * 100).toFixed(2) + "%"
}

function getIconPath() {
	return appconfig.iconpath
}

function getWindowInfo() {
	return {
		width: windowWidth,
		height: windowHeight
	}
}

function getWindowHeight() {
	return window.innerHeight || document.documentElement.clientHeight
}

function getWindowWidth() {
	return window.innerWidth || document.documentElement.clientWidth
}

function getAppTemplate() {
	return appconfig.tpl ? appconfig.tpl : appconfig.control.tpl
}

function getZindex(elm) {
	if (elm) return parseInt(elm.css("z-index")) || 0
}

function csvJSON(csv) {
	for (var lines = csv.split("\n"), result = [], headers = lines[0].split(","), i = 1; i < lines.length; i++) {
		for (var obj = {}, currentline = lines[i].split(","), j = 0; j < headers.length; j++) obj[headers[j]] = currentline[j];
		result.push(obj)
	}
	return result
}

function getFileExt(f) {
	return f.split(".").pop()
}

function getFileName(f) {
	return f.split("\\").pop().split("/").pop().split("?")[0]
}

function goLang(elm, mylang, success) {
	appconfig.lang = mylang
}

function setLang(lang) {
	lang = $trim(lang || ""), appconfig.lang = "ch,pt,en".indeOf(lang) >= 0 ? lang : "ch"
}

function getLang() {
	return appconfig.lang ? appconfig.lang : "ch"
}

function getLangPrefix() {
	var lpfix;
	return appconfig.lang.substring(0, appconfig.lang.length - 1)
}

function getElementZIndex(elm, presetZindex) {
	presetZindex = presetZindex || 0;
	try {
		return (parseInt(elm.css("z-index")) || presetZindex) + 1
	} catch (e) {
		return 0
	}
}

function getTranslateByLang(c, p, e, custlang, defaultval) {
	var rt = "";
	defaultval = defaultval || "";
	try {
		if ("pt" == getAppConfig().lang || "pt" == custlang) rt = "" !== defaultval ? defaultval : Cr2HtmlBr("" !== p ? p ||
			"" : c || "");
		else if ("en" == getAppConfig().lang || "en" == custlang) rt = "" !== defaultval ? defaultval : Cr2HtmlBr("" !== e ?
			e || "" : c || "");
		else if ("" !== defaultval) rt = defaultval;
		else if ("chs" == getAppConfig().lang) try {
			rt = htmlDecode($.t2s(Cr2HtmlBr(c || "")))
		} catch (e) {
			rt = htmlDecode(Cr2HtmlBr(c || ""))
		} else rt = htmlDecode(Cr2HtmlBr(c || ""))
	} catch (e) {
		"" !== defaultval && (rt = defaultval)
	}
	return rt
}

function lng(c, p, e, custlang, defaultval) {
	return getTranslateByLang(c, p, e, custlang, defaultval)
}

function getTranslate(key, initval) {
	key = $.trim(key || ""), initval = initval || "";
	try {
		0 != key.indexOf("lang_") && (key = "lang_" + key);
		var tl = appconfig.lang || "";
		return "" === tl && (tl = "ch"), appconfig.translate[key][appconfig.lang]
	} catch (e) {
		return initval
	}
}

function setAppConfig(d) {
	$.extend(appconfig, d)
}

function getAppConfig() {
	return appconfig || {}
}

function setAppPageInfo(d) {
	$.extend(appconfig, {
		pageinfo: d
	})
}

function getAppPageInfo() {
	return appconfig.pageinfo || {}
}

function getAppPageLogo() {
	return appconfig.pageinfo.logo
}
juicer.register("n2nr", n2nr), juicer.register("Cr2HtmlBr", Cr2HtmlBr), juicer.register("HtmlBr2Cr", HtmlBr2Cr), juicer
	.register("RemoveCr", RemoveCr), juicer.register("RemoveHtmlTags", RemoveHtmlTags), juicer.register("fixNull", fixNull),
	juicer.register("getZindex", getZindex), juicer.register("getUUID", getUUID), juicer.register("guid", guid), juicer.register(
		"getUpperCase", getUpperCase), juicer.register("getObjectKey", getObjectKey), juicer.register("escapeHtml",
		escapeHtml), juicer.register("unescapeHtml", unescapeHtml), juicer.register("htmlDecode", htmlDecode), juicer.register(
		"htmlEncode", htmlEncode), juicer.register("stripTags", stripTags), juicer.register("stripslashes", stripslashes),
	juicer.register("isDataRowsEmpty", isDataRowsEmpty), juicer.register("isDataEmpty", isDataEmpty), juicer.register(
		"isPC", isPC), juicer.register("isMobile", isMobile), juicer.register("isParentIframe", isParentIframe), juicer.register(
		"checkPermission", checkPermission), juicer.register("randomString", randomString), juicer.register("calculateAge",
		calculateAge), juicer.register("getDaysInMonth", getDaysInMonth), juicer.register("reverseDateString",
		reverseDateString), juicer.register("addMinutes", addMinutes), juicer.register("toDate", toDate), juicer.register(
		"convertDate", convertDate), juicer.register("compareDate", compareDate), juicer.register("betweenDate", betweenDate),
	juicer.register("eqDate", eqDate), juicer.register("gtDate", gtDate), juicer.register("gtEqDate", gtEqDate), juicer.register(
		"ltDate", ltDate), juicer.register("ltEqDate", ltEqDate), juicer.register("getPercentage", getPercentage), juicer.register(
		"getToday", getToday), juicer.register("getTodayDate", getTodayDate), juicer.register("getDate", getDate), juicer.register(
		"getLastday", getLastday), juicer.register("getCurDate", getCurDate), juicer.register("getCurTime", getCurTime),
	juicer.register("getSSDate", getSSDate), juicer.register("getSSD2ND", getSSD2ND), juicer.register("getND2SSD",
		getND2SSD), juicer.register("parseJsonDate", parseJsonDate), juicer.register("getJsonDateTimeString",
		getJsonDateTimeString), juicer.register("getJsonDateString", getJsonDateString), juicer.register("getJsonTimeString",
		getJsonTimeString), juicer.register("getDateString", getDateString), juicer.register("getTimeString", getTimeString),
	juicer.register("getRandomRange", getRandomRange), juicer.register("getObject", getObject), juicer.register(
		"getBrowserInfo", getBrowserInfo), juicer.register("getWindowInfo", getWindowInfo), juicer.register("getWindowWidth",
		getWindowWidth), juicer.register("getWindowHeight", getWindowHeight), juicer.register("getAppTemplate",
		getAppTemplate), juicer.register("getAppConfig", getAppConfig), juicer.register("getAppPageInfo", getAppPageInfo),
	juicer.register("getAppPageLogo", getAppPageLogo), juicer.register("getTranslate", getTranslate), juicer.register(
		"getLang", getLang), juicer.register("getLangPrefix", getLangPrefix), juicer.register("getTranslateByLang",
		getTranslateByLang), juicer.register("lng", getTranslateByLang), juicer.register("getIconPath", getIconPath), juicer.register(
		"getLinkIcon", getLinkIcon), juicer.register("getFileExt", getFileExt), juicer.register("getFileName", getFileName),
	juicer.register("getArrayToRows", getArrayToRows), juicer.register("getLocationUrl", getLocationUrl), juicer.register(
		"getCurPage", getCurPage), juicer.register("getCurPageIndex", getCurPageIndex), juicer.register("getCurPageData",
		getCurPageData), juicer.register("extendCurPageData", extendCurPageData), juicer.register("getAttachImage",
		getAttachImage), juicer.register("getCurRowAttachImage", getCurRowAttachImage), juicer.register("storeCurRow",
		storeCurRow), juicer.register("getCurRow", getCurRow), juicer.register("setCurRow", setCurRow), juicer.register(
		"setObject", setObject), juicer.register("getActualHeight", getActualHeight), juicer.register("getScrollHeight",
		getScrollHeight), juicer.register("getScrollWidth", getScrollWidth), juicer.register("getViewport", getViewport),
	Object.keys || (Object.keys = function() {
		"use strict";
		var hasOwnProperty = Object.prototype.hasOwnProperty,
			hasDontEnumBug = !{
				toString: null
			}.propertyIsEnumerable("toString"),
			dontEnums = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable",
				"constructor"
			],
			dontEnumsLength = dontEnums.length;
		return function(obj) {
			if ("function" != typeof obj && ("object" != typeof obj || null === obj)) throw new TypeError(
				"Object.keys called on non-object");
			var result = [],
				prop, i;
			for (prop in obj) hasOwnProperty.call(obj, prop) && result.push(prop);
			if (hasDontEnumBug)
				for (i = 0; i < dontEnumsLength; i++) hasOwnProperty.call(obj, dontEnums[i]) && result.push(dontEnums[i]);
			return result
		}
	}()), Object.size || (Object.size = function(obj) {
		var size = 0,
			key;
		for (key in obj) obj.hasOwnProperty(key) && size++;
		return size
	}());
var _curPageData = {},
	_curPage;

function getCurPage() {
	return _curPage || (_curPage = $(".vpage:visible:last")), _curPage = 0 == (_curPage = 0 == _curPage.length ? $(
		"#pagewrapper") : _curPage).length ? $("body") : _curPage
}

function setCurPage(p) {
	_curPage = p
}

function getCurPageIndex() {
	return getElementZIndex(getCurPage(), 100)
}

function getCurPageId() {
	return getCurPage().attr("id")
}

function setCurPageData(d) {
	_curPageData = d
}

function extendCurPageData(d, objkey, arridx) {
	var d1 = {};
	if (logme(typeof d), "string" == typeof d) {
		logme(d.lastIndexOf("}")), logme(d.indexOf("}"));
		try {
			0 == d.indexOf("{") && 0 == d.lastIndexOf("}") ? $.parseJSON(d) : eval("d1={" + d + "};")
		} catch (e) {
			d1 = {}
		}
	} else d1 = d;
	try {
		logme(objkey), "" !== (objkey || "") ? (logme(parseInt(arridx)), logme(_curPageData[objkey][arridx]), parseInt(arridx) ?
			(logme(_curPageData[objkey][arridx]), $.extend(_curPageData[objkey][arridx], d1)) : (logme(_curPageData[objkey]), $
				.extend(_curPageData[objkey], d1))) : $.extend(_curPageData, d1)
	} catch (e) {}
	logme(_curPageData)
}

function getCurPageData() {
	return _curPageData
}

function getArrayToRows(arr) {
	return {
		rows: arr
	}
}
var _curRow, _curRowIndex = 0;

function storeCurRow(d, idx, extendata) {
	if (_curRowIndex = idx, _curRow = d || {}, _curRow.rowindex = idx || 0, "object" == typeof extendata) try {
		$.extend(_curRow, extendata)
	} catch (e) {
		logme("storeCurRow error:" + e.message)
	} else if ("string" == typeof extendata) {
		extendata = (extendata || "").replace(/'/g, '"');
		try {
			var d;
			0 == extendata.indexOf("{") ? eval("d=" + extendata + ";") : eval("d={" + extendata + "};"), logme(d), $.extend(
				_curRow, d)
		} catch (e) {
			logme("storeCurRow error:" + e.message)
		}
	} return _curRow
}

function getCurRow() {
	return _curRow
}

function setCurRow(d, extendata) {
	if (_curRow = d, "object" == typeof extendata) try {
		$.extend(_curRow, extendata)
	} catch (e) {
		logme("storeCurRow error:" + e.message)
	} else if ("string" == typeof extendata) try {
		var d;
		0 == extendata.indexOf("{") ? eval("d=" + extendata + ";") : eval("d={" + extendata + "};"), logme(d), $.extend(
			_curRow, d)
	} catch (e) {
		logme("storeCurRow error:" + e.message)
	}
	return _curRow
}

function setObject(k, v) {
	var d = {};
	return d[k] = v, d
}
var _aCurAttachImg = [],
	_sCurAttachImg;

function getAttachImage(data, idx) {
	return _aCurAttachImg = [], _sCurAttachImg = "", data && $(data).each((function(k, v) {
		".jpg,.png,.gif,.jpeg,.bmp".indexOf(getFileExt(this.SAVEFILE || "")) >= 0 && _aCurAttachImg.push(this.SAVEFILE)
	})), _aCurAttachImg.length > idx && (_sCurAttachImg = _aCurAttachImg[idx]), _sCurAttachImg
}

function getCurRowAttachImage() {
	return _sCurAttachImg
}

function arraysEqual(a, b) {
	if (a === b) return !0;
	if (null == a || null == b) return !1;
	if (a.length != b.length) return !1;
	for (var i = 0; i < a.length; i++)
		if (a[i] !== b[i]) return !1;
	return !0
}

function isDataEmpty(d) {
	return $.isEmptyObject(d)
}

function isDataRowsEmpty(d) {
	return !!$.isEmptyObject(d) || 0 == d.length
}

function htmlSpecialCharsEncode(str) {
	return str.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g,
		"&apos;")
}

function htmlSpecialCharsDecode(str) {
	return str.replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(
		/&apos;/g, "'")
}

function escapeHtml(text) {
	var map = {
		"&": "&amp;",
		"<": "&lt;",
		">": "&gt;",
		'"': "&quot;",
		"'": "&#039;"
	};
	return text.replace(/[&<>"']/g, (function(m) {
		return map[m]
	}))
}

function unescapeHtml(text) {
	return text.replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(
		/&#039;/g, "'").replace(/&apos;/g, "'")
}

function htmlDecode(value) {
	return $("<textarea/>").html(value).text()
}

function htmlEncode(value) {
	return $("<textarea/>").text(value).html()
}

function _isOnlyLogForSam() {
	return !1
}

function warnme(args, isshow) {}

function logme(args, isshow) {}

function debugme(args, isshow) {}

function infome(args, isshow) {}

function randomString(length) {
	var chars = "023456789ABCDEFGHIJKLMNOPQRSTUVWXTZ$abcdefghkmnopqrstuvwxyz",
		pass = "";
	length = length || 12;
	for (var x = 0; x < length; x++) {
		var i = Math.floor(Math.random() * chars.length);
		pass += chars.charAt(i)
	}
	return pass
}

function guid() {
	function _p8(s) {
		var p = (Math.random().toString(16) + "000000000").substr(2, 8);
		return s ? "-" + p.substr(0, 4) + "-" + p.substr(4, 4) : p
	}
	return _p8() + _p8(!0) + _p8(!0) + _p8()
}

function getUUID() {
	for (var s = [], hexDigits = "0123456789abcdef", i = 0; i < 36; i++) s[i] = hexDigits.substr(Math.floor(16 * Math.random()),
		1);
	var uuid;
	return s[14] = "4", s[19] = hexDigits.substr(3 & s[19] | 8, 1), s[8] = s[13] = s[18] = s[23] = "-", s.join("")
}

function onlyNumber(event) {
	var key = window.event ? event.keyCode : event.which;
	return 8 === event.keyCode || 46 === event.keyCode || 37 === event.keyCode || 39 === event.keyCode || !(key < 48 ||
		key > 57)
}

function onKeyEnter(event, success) {
	if (13 == event.which || 13 == event.keyCode) return runScript(success, event), !1
}

function retrieveFormData(myform) {
	var data = {};
	return myform && (myform.find(":input:not(:checkbox),input[type=hidden],textarea").each((function(k, v) {
		var n = $.trim($(this).attr("name") || "");
		"" !== n && (data[n] = $.trim($(this).val() || ""))
	})), myform.find(":checkbox:checked").each((function(k, v) {
		var n = $.trim($(this).attr("name") || "");
		if ("" !== n) {
			var nv = $.trim($(this).val() || "");
			if (data[n]) {
				var ov = (data[n] || "").split(",");
				ov.push(nv), data[n] = ov.join(",")
			} else data[n] = nv
		}
	})), myform.find(":radio:checked").each((function(k, v) {
		var n = $.trim($(this).attr("name") || "");
		"" !== n && (data[n] = $.trim($(this).val() || ""))
	}))), data
}

function subString(str, len, hasDot) {
	for (var newLength = 0, newStr = "", chineseRegex = /[^\x00-\xff]/g, singleChar = "", strLength = str.replace(
			chineseRegex, "**").length, i = 0; i < strLength && (null != (singleChar = str.charAt(i).toString()).match(
			chineseRegex) ? newLength += 2 : newLength++, !(newLength > len)); i++) newStr += singleChar;
	return hasDot && strLength > len && (newStr += "..."), newStr
}

function updateRequest(uri, key, value) {
	options || (options = {});
	var url = options.url || location.href,
		re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
		hash;
	if (hash = url.split("#"), url = hash[0], re.test(url)) url = null != value ? url.replace(re, "$1" + key + "=" + value +
		"$2$3") : url.replace(re, "$1$3").replace(/(&|\?)$/, "");
	else if (null != value) {
		var separator = -1 !== url.indexOf("?") ? "&" : "?";
		url = url + separator + key + "=" + value
	}
	return void 0 !== options.hash && !options.hash || void 0 === hash[1] || null === hash[1] || (url += "#" + hash[1]),
		url
}

function parseURL(url) {
	var parser = document.createElement("a"),
		searchObject = {},
		queries, split, i;
	for (url = url || "", parser.href = unescape(decodeURIComponent(url.replace("&amp;", "&"))), queries = parser.search.replace(
			/^\?/, "").split("&"), i = 0; i < queries.length; i++)(split = queries[i].split("=")).length > 0 && "" !== $.trim(
		split[0] || "") && (searchObject[split[0]] = split[1]);
	return {
		protocol: parser.protocol,
		host: parser.host,
		hostname: parser.hostname,
		port: parser.port,
		pathname: parser.pathname,
		search: parser.search,
		searchObject: searchObject,
		params: searchObject,
		hash: parser.hash
	}
}

function getRequest(name) {
	var match = RegExp("[?&]" + name + "=([^&]*)").exec(window.location.search);
	return match && decodeURIComponent(match[1].replace(/\+/g, " "))
}

function parseURLHash(hash) {
	var hashParams = {},
		e, a = /\+/g,
		r = /([^&;=]+)=?([^&;]*)/g,
		d = function(s) {
			return decodeURIComponent(s.replace(a, " "))
		},
		q = hash || "";
	for (q = "" !== q ? q.substring(1) : window.location.hash.substring(1); e = r.exec(q);) hashParams[d(e[1])] = d(e[2]);
	return hashParams
}

function stripTags(str, allow) {
	allow = (((allow || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
	var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
		commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
	return str.replace(commentsAndPhpTags, "").replace(tags, (function($0, $1) {
		return allow.indexOf("<" + $1.toLowerCase() + ">") > -1 ? $0 : ""
	}))
}

function getUpperCase(d) {
	return $.trim(d || "").toUpperCase()
}

function getSubString(d, start, len) {
	return $.trim(d || "").substring(start || 0, len || d.length)
}

function stripslashes(str) {
	return str.replace(/\\'/g, "'").replace(/\"/g, '"').replace(/\\\\/g, "\\").replace(/\\0/g, "\0")
}

function getScrollHeight(scrollable) {
	return $(document)[0] == document ? document.body.scrollHeight : $(scrollable)[0].scrollHeight
}

function getScrollWidth(scrollable) {
	return $(document)[0] == document ? document.body.scrollWidth : $(scrollable)[0].scrollWidth
}

function getActualHeight() {
	var actualHeight;
	return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight || document.body.offsetHeight
}

function getViewport() {
	var e = window,
		a = "inner";
	return "innerWidth" in window || (a = "client", e = document.documentElement || document.body), {
		width: e[a + "Width"],
		height: e[a + "Height"]
	}
}

function getEllipsis(txt, len, isStripTags) {
	return txt = Cr2HtmlBr($.trim(txt || "")), isStripTags && (txt = stripTags(txt)), len = len || 8, txt.length > len &&
		(txt = subString(txt, len, !0)), txt
}

function openWin(url, target, title) {
	if ("" != (url = url || "")) {
		target || (target = "_blank");
		var w = window.open(url, target);
		return w.document.title = title || "", w
	}
	return null
}

function readImage(inputElement) {
	var deferred = $.Deferred(),
		files = inputElement.get(0).files;
	if (files && files[0]) {
		var fr = new FileReader;
		fr.onload = function(e) {
			deferred.resolve(e.target.result)
		}, fr.readAsDataURL(files[0])
	} else deferred.resolve(void 0);
	return deferred.promise()
}

function toogleFullscreen() {
	document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement ?
		document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() :
		document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen() :
		document.documentElement.requestFullscreen ? document.documentElement.requestFullscreen() : document.documentElement.mozRequestFullScreen ?
		document.documentElement.mozRequestFullScreen() : document.documentElement.webkitRequestFullscreen ? document.documentElement
		.webkitRequestFullscreen() : document.documentElement.msRequestFullscreen && document.documentElement.msRequestFullscreen()
}

function launchFullscreen(element) {
	element || (element = document.documentElement), element.requestFullscreen ? element.requestFullscreen() : element.mozRequestFullScreen ?
		element.mozRequestFullScreen() : element.webkitRequestFullscreen ? element.webkitRequestFullscreen() : element.msRequestFullscreen &&
		element.msRequestFullscreen()
}

function exitFullscreen() {
	document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() :
		document.webkitExitFullscreen && document.webkitExitFullscreen()
}

function deferredCall(fn, success, fail, delay) {
	"integer" == typeof success && (delay = success);
	var deferred = $.Deferred();
	return deferred.done(fn), setTimeout((function() {
		deferred.resolve()
	}), delay || 300), deferred.always((function() {
		var state = deferred.state();
		"resolved" === state ? runScript(success) : "rejected" === state && runScript(fail)
	})), deferred.promise()
}

function runScript(f, data) {
	if (f) switch (typeof f) {
		case "function":
			f.apply(this, Array.prototype.slice.call(arguments, 1));
			break;
		case "string":
			eval(f)
	}
}

function copyToClipboard(element) {
	var $temp = $("<input>");
	$("body").append($temp), $temp.val($(element).text()).select(), document.execCommand("copy"), $temp.remove()
}

function appendJsScript(v) {
	$("head").append("<script type='text/javascript'>" + v + "<\/script>")
}

function appendCssScript(v) {
	$("head").append("<style type='text/css'>" + v + "</style>")
}

function appendTemplateToHtmlBody(tplname, tplhtml) {
	tplhtml.indexOf("text/template") < 0 ? $("body").append('<script id="tpl_' + tplname + '" type="text/template">' +
		tplhtml + "<\/script>") : $("body").append(tplhtml)
}

function addPrerenderLink(href) {
	var myHead = document.getElementsByTagName("head")[0],
		myLink = document.createElement("link");
	myLink.setAttribute("rel", "prefetch prerender"), myLink.setAttribute("href", href), myHead.appendChild(myLink)
}

function dateAdd(date, interval, units) {
	var ret = new Date(date);
	switch (interval.toLowerCase()) {
		case "year":
			ret.setFullYear(ret.getFullYear() + units);
			break;
		case "quarter":
			ret.setMonth(ret.getMonth() + 3 * units);
			break;
		case "month":
			ret.setMonth(ret.getMonth() + units);
			break;
		case "week":
			ret.setDate(ret.getDate() + 7 * units);
			break;
		case "day":
			ret.setDate(ret.getDate() + units);
			break;
		case "hour":
			ret.setTime(ret.getTime() + 36e5 * units);
			break;
		case "minute":
			ret.setTime(ret.getTime() + 6e4 * units);
			break;
		case "second":
			ret.setTime(ret.getTime() + 1e3 * units);
			break;
		default:
			ret = void 0
	}
	return ret
}

function addMinutes(time, minsToAdd) {
	function z(n) {
		return (n < 10 ? "0" : "") + n
	}
	var bits = time.split(":"),
		mins = 60 * bits[0] + +bits[1] + +minsToAdd;
	return z(mins % 1440 / 60 | 0) + ":" + z(mins % 60 | 0)
}

function dateDiff(date1, date2) {
	var datediff;
	return (date1.getTime() - date2.getTime()) / 864e5
}

function dateDiffSpan(start, end) {
	var s = new Date(start.getTime()),
		years = end.getFullYear() - start.getFullYear();
	s.setFullYear(s.getFullYear() + years), s > end && (years--, s.setFullYear(s.getFullYear() - 1));
	var months = 12 - s.getMonth() + end.getMonth(),
		days;
	return s.setMonth(s.getMonth() + months), s > end && (months--, s.setMonth(s.getMonth() - 1)), [years, months, Math.floor(
		(end - s) / 1e3 / 60 / 60 / 24)]
}

function toDate(y, m, d) {
	var year, month, day, datestring = "",
		dateformat = "";
	try {
		if ("string" == typeof y && void 0 === m && (datestring = y || "", dateformat = "DD/MM/YYYY"), "string" == typeof y &&
			"string" == typeof m && void 0 === d && (datestring = y || "", dateformat = m || ""), "" !== dateformat) {
			dateformat = dateformat.toUpperCase(), datestring.length >= 10 && (datestring = datestring.substring(0, 10));
			var arrDate = [];
			"DD/MM/YYYY" == dateformat.toString().toUpperCase() ? (arrDate = datestring.split("/"), year = parseInt(arrDate[2]) ||
					0, month = (parseInt(arrDate[1]) || 0) - 1, day = parseInt(arrDate[0]) || 0) : "MM/DD/YYYY" == dateformat.toString()
				.toUpperCase() ? (arrDate = datestring.split("/"), year = parseInt(arrDate[2]) || 0, month = (parseInt(arrDate[0]) ||
					0) - 1, day = parseInt(arrDate[1]) || 0) : "YYYY-MM-DD" == dateformat.toString().toUpperCase() ? (arrDate =
					datestring.split("-"), year = parseInt(arrDate[0]) || 0, month = (parseInt(arrDate[1]) || 0) - 1, day = parseInt(
						arrDate[2]) || 0) : "YYYYMMDD" == dateformat.toString().toUpperCase() && (arrDate = [], year = parseInt(
					datestring.substring(0, 4)) || 0, month = (parseInt(datestring.substring(4, 6)) || 0) - 1, day = parseInt(
					datestring.substring(6, 8)) || 0)
		} else year = y, month = m, day = d
	} catch (e) {
		logme(e.message), year = y, month = m, day = d
	}
	return new Date(year, month, day)
}

function getBetweenMonths(dt2, dt1) {
	var diff = (dt2.getTime() - dt1.getTime()) / 1e3;
	return diff /= 2419200, Math.abs(Math.round(diff))
}

function getAgeInMonth(dt2, dt1) {
	return getBetweenMonths(dt2, dt1)
}

function getAgeInDays(dt2, dt1) {
	return getBetweenMonths(dt2, dt1)
}

function getDaysInMonth(month, year) {
	return new Date(year, month, 0).getDate()
}

function convertDate(d) {
	return d.constructor === Date ? d : d.constructor === Array ? new Date(d[0], d[1], d[2]) : d.constructor === Number ?
		new Date(d) : d.constructor === String ? new Date(d) : "object" == typeof d ? new Date(d.year, d.month, d.date) : NaN
}

function compareDate(a, b) {
	return isFinite(a = convertDate(a).valueOf()) && isFinite(b = convertDate(b).valueOf()) ? (a > b) - (a < b) : NaN
}

function betweenDate(d, start, end) {
	return isFinite(d = convertDate(d).valueOf()) && isFinite(start = convertDate(start).valueOf()) && isFinite(end =
		convertDate(end).valueOf()) ? start <= d && d <= end : NaN
}

function eqDate(d1, d2) {
	return d1.getTime() === d2.getTime()
}

function gtDate(d1, d2) {
	return d1.getTime() > d2.getTime()
}

function gtEqDate(d1, d2) {
	return d1.getTime() >= d2.getTime()
}

function ltDate(d1, d2) {
	return d1.getTime() < d2.getTime()
}

function ltEqDate(d1, d2) {
	return d1.getTime() < d2.getTime()
}

function reverseDateString(d, spliter) {
	return spliter || (spliter = "/"), d.split(spliter).reverse().join(spliter)
}

function getSSDate(d, isreverse) {
	return (d = d || "").length < 8 ? d : (dd = {
			year: "",
			month: "",
			day: "",
			dateString: "",
			date: ""
		}, d.length >= 8 && (dd = isreverse ? {
			year: d.substring(4, 8),
			month: d.substring(2, 4),
			day: d.substring(0, 2)
		} : {
			year: d.substring(0, 4),
			month: d.substring(4, 6),
			day: d.substring(6, 8)
		}, dd.dateString = dd.year + "/" + dd.month + "/" + dd.day, dd.date = new Date(dd.year, parseInt(dd.month) - 1, dd.day)),
		dd)
}

function getSSD2ND(d, isreverse, fmt) {
	if ("" !== (d || "")) {
		d.length > 8 && (d = d.substring(0, 8));
		var dd = getSSDate(d, isreverse);
		return "" != dd.year ? "" !== (fmt = fmt || "") ? new Date(dd.year, parseInt(dd.month) - 1, dd.day).Format(fmt) : new Date(
			dd.year, parseInt(dd.month) - 1, dd.day) : d
	}
	return d
}

function getND2SSD(d, fmt) {
	if ("" !== (d || "")) {
		var dd = getCurDate(d);
		return "" != dd.year ? dd.year + dd.month + dd.day : d
	}
	return d
}

function getJsonDateTimeString(d) {
	return getJsonDateString(d) + " " + getJsonTimeString(d)
}

function getJsonDateString(d) {
	return getDateString(parseJsonDate(d)) || d
}

function getJsonTimeString(d) {
	return getTimeString(parseJsonDate(d)) || d
}

function parseJsonDate(d) {
	return new Date(parseInt(d.substr(6))) || {}
}

function getDateString(date) {
	var year = date.getFullYear(),
		month = (1 + date.getMonth()).toString();
	month = month.length > 1 ? month : "0" + month;
	var day = date.getDate().toString();
	return (day = day.length > 1 ? day : "0" + day) + "/" + month + "/" + year
}

function getTimeString(date) {
	var h, m, s;
	return "string" == typeof date ? (h = (date = (date || "").replace(/:/g, "").padLeft("0", 6)).substring(0, 2), m =
		date.substring(2, 4), s = date.substring(4, 6)) : "date" == typeof date && (h = date.getHours(), m = date.getMinutes(),
		s = date.getSeconds()), h.toString().padLeft("0", 2) + ":" + m.toString().padLeft("0", 2) + ":" + s.toString().padLeft(
		"0", 2)
}

function getToday(fmt) {
	return fmt || (fmt = "dd/MM/yyyy"), (new Date).Format(fmt)
}

function getTodayDate() {
	return new Date
}

function getDate(y, m, d) {
	return new Date(y, (parseInt(m) || 1) - 1, d)
}

function getLastday(y, m) {
	return new Date(y, m + 1, 0).getDate()
}

function getCurDate() {
	var d = new Date,
		rt = {
			year: d.getFullYear(),
			month: d.getMonth() + 1,
			day: d.getDate()
		};
	return rt.dateString = rt.year + "/" + rt.month.toString().padLeft("0", 2) + "/" + rt.day.toString().padLeft("0", 2),
		rt.date = d, rt
}

function getCurTime() {
	var t = new Date,
		rt = {
			hours: t.getHours(),
			minutes: t.getMinutes(),
			seconds: t.getSeconds()
		};
	return rt.timeString = rt.hours.toString().padLeft("0", 2) + ":" + rt.minutes.toString().padLeft("0", 2) + ":" + rt.seconds
		.toString().padLeft("0", 2), rt.date = t, rt
}

function formatDate(date) {
	var year = date.getFullYear(),
		month = date.getMonth() + 1,
		day = date.getDate(),
		hour = date.getHours(),
		minute = date.getMinutes(),
		second = date.getSeconds(),
		hourFormatted, minuteFormatted, morning;
	return month + "/" + day + "/" + year + " " + (hour % 12 || 12) + ":" + (minute < 10 ? "0" + minute : minute) + (hour <
		12 ? "am" : "pm")
}

function parseISO8601(dateStringInRange) {
	var isoExp = /^\s*(\d{4})-(\d\d)-(\d\d)\s*$/,
		date = new Date(NaN),
		month, parts = isoExp.exec(dateStringInRange);
	return parts && (month = +parts[2], date.setFullYear(parts[1], month - 1, parts[3]), month != date.getMonth() + 1 &&
		date.setTime(NaN)), date
}

function calculateAge(dateString) {
	var today = new Date,
		birthDate = new Date(dateString);
	isNaN(birthDate) && (birthDate = parseISO8601(dateString));
	var age = today.getFullYear() - birthDate.getFullYear(),
		m = today.getMonth() - birthDate.getMonth();
	return (m < 0 || 0 === m && today.getDate() < birthDate.getDate()) && age--, age
}

function convertSpecialChar(s) {
	return s = s.replace(/\[icon\:home\]/g, "<i class='fa fa-home'></i>").replace(/\[icon\:pdf\]/g,
		"<i class='fa fa-file-pdf-o text-danger'></i>").replace(/\[icon\:xls\]/g,
		"<i class='fa fa-file-xls-o text-success'></i>").replace(/\[icon\:doc\]/g,
		"<i class='fa fa-file-doc-o text-primary'></i>").replace(/\[icon\:ppt\]/g,
		"<i class='fa fa-file-ppt-o text-danger'></i>").replace(/\[icon\:photo\]/g, "<i class='fa fa-file-photo-o '></i>")
}

function getLinkIcon(url) {
	return url = (url || "").toLowerCase(), rt = "", url.indexOf(".flv") >= 0 || url.indexOf(".wmv") >= 0 || url.indexOf(
			".mp4") >= 0 ? rt = "<i class='fa fa-file-video-o'></i>" : url.indexOf(".mp3") >= 0 || url.indexOf(".aud") >= 0 ||
		url.indexOf(".wav") >= 0 ? rt = "<i class='fa fa-file-audio-o'></i>" : url.indexOf(".pdf") >= 0 ? rt =
		"<i class='fa fa-file-pdf-o text-danger'></i>" : url.indexOf(".xls") >= 0 ? rt =
		"<i class='fa fa-file-excel-o text-success'></i>" : url.indexOf(".doc") >= 0 ? rt =
		"<i class='fa fa-file-word-o text-primary'></i>" : url.indexOf(".ppt") >= 0 ? rt =
		"<i class='fa fa-file-powerpoint-o text-danger'></i>" : url.indexOf(".jpg") >= 0 || url.indexOf(".gif") >= 0 || url.indexOf(
			".jpeg") >= 0 || url.indexOf(".png") >= 0 ? rt = "<i class='fa fa-file-photo-o text-warning'></i>" : rt =
		"<i class='fa fa-file-o'></i>", rt
}
/*!
loadCSS: load a CSS file asynchronously.
[c]2014 @scottjehl, Filament Group, Inc.
Licensed MIT
*/
function loadCSS(href, before, media, callback) {
	"use strict";
	var ss = window.document.createElement("link"),
		ref = before || window.document.getElementsByTagName("script")[0],
		sheets = window.document.styleSheets;
	return ss.rel = "stylesheet", ss.href = href, ss.media = "only x", callback && (ss.onload = callback), ref.parentNode.insertBefore(
		ss, ref), ss.onloadcssdefined = function(cb) {
		for (var defined, i = 0; i < sheets.length; i++) sheets[i].href && sheets[i].href === ss.href && (defined = !0);
		defined ? cb() : setTimeout((function() {
			ss.onloadcssdefined(cb)
		}))
	}, ss.onloadcssdefined((function() {
		ss.media = media || "all"
	})), ss
}

function showBlockui(options) {
	var config = {
			id: "__blockui",
			scrolltop: $(window).scrollTop(),
			top: 0,
			width: $(window).width(),
			height: getScrollHeight(),
			zindex: 9e3,
			bgcolor: "#222",
			opacity: .15,
			msgzindex: 9001,
			msgtop: 0,
			msgleft: 0,
			msg: ""
		},
		config;
	"" != (config = $.extend(config, options)).msg && (config.msgtop = config.scrolltop + (config.height - config.scrolltop) /
		2, config.msgzindex = config.zindex + 1);
	var tpl =
		"<div id='${id}'><div class='blockui pos-all' style='z-index:${zindex};top:0px;left:0;right:0;bottom:0;background:${bgcolor};display:block;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=${opacity1})\";filter: alpha(opacity=${opacity1});opacity:${opacity};'></div>{@if msg!=''}<p class='pos-center-middle txt-center' style='z-index:${msgzindex};top:${msgtop}px;margin-left:-40%;width:80%;color:#fff;'>$${msg}</p>{@/if}</div>",
		data = $.extend({}, config, {
			width: $(window).width(),
			opacity1: 100 * config.opacity
		});
	$("body").append(juicer(tpl, data))
}

function hideBlockui(options) {
	var config = {
		id: "__blockui",
		animate: ""
	};
	$.extend(config, options), $.isEmptyObject(config.id) ? "fadeOut" !== config.animate ? $(".blockui").fadeOut((function() {
		$(this).remove()
	})) : $(".blockui").remove() : "fadeOut" !== config.animate ? $("#" + config.id).fadeOut((function() {
		$(this).remove()
	})) : $("#" + config.id).remove()
}

function getLoadPosInfo(cw, ch) {
	return {
		left: "50%",
		top: "50%",
		width: cw,
		height: ch,
		"margin-left": -cw / 2,
		"margin-top": -ch / 2
	}
}
$.wait = function(time) {
	return $.Deferred((function(dfd) {
		setTimeout(dfd.resolve, time)
	}))
}, $.fn.RetrieveFormData = function(success) {
	return this.each((function() {
		runScript(success, retrieveFormData($(this)))
	}))
}, $.fn.serializeObject = function() {
	var o = {},
		a = this.serializeArray();
	return $.each(a, (function() {
		void 0 !== o[this.name] ? (o[this.name].push || (o[this.name] = [o[this.name]]), o[this.name].push(this.value ||
			"")) : o[this.name] = this.value || ""
	})), o
}, $.fn.justifyMaxHeight = function() {
	var maxh = 0;
	$.each($(this), (function(k) {
		var h = $(this).outerHeight() || 0;
		h > maxh && (maxh = h)
	})), $(this).css({
		"max-height": maxh
	})
}, $.fn.justifyMinHeight = function() {
	var minh = 0;
	$.each($(this), (function(k) {
		var h = $(this).outerHeight() || 0;
		h > minh && (minh = h)
	})), $(this).css({
		"min-height": minh
	})
}, $.fn.pageSwipeTouch = function(options) {
	var config = {
		threshold: 200,
		swipeLeft: function() {},
		swipeRight: function() {},
		swipeUp: function() {},
		swipeDown: function() {},
		swipeMoveLeft: function() {},
		swipeMoveRight: function() {},
		swipeMoveUp: function() {},
		swipeMoveDown: function() {}
	};
	$.extend(config, options);
	var touch, toucnMoveX = 0,
		touchStartX = 0,
		touchMoveXLength = 0,
		toucnMoveY = 0,
		touchStartY = 0,
		touchMoveYLength = 0;
	return this.each((function() {
		$(this).on("touchmove", (function(e) {
			touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0], toucnMoveX = touch.pageX, toucnMoveY =
				touch.pageY, touchMoveYLength = toucnMoveY - touchStartY, (touchMoveXLength = toucnMoveX - touchStartX) > 0 &&
				runScript(config.swipeMoveRight, e), touchMoveXLength < 0 && runScript(config.swipeMoveLeft, e),
				touchMoveYLength > 0 && runScript(config.swipeMoveDown, e), touchMoveYLength < 0 && runScript(config.swipeMoveUp,
					e)
		})).on("touchstart", (function(e) {
			touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0], touchStartX = touch.pageX,
				touchStartY = touch.pageY
		})).on("touchend", (function(e) {
			touchMoveYLength = toucnMoveY - touchStartY, (touchMoveXLength = toucnMoveX - touchStartX) > 0 && Math.abs(
					touchMoveXLength) > config.threshold && runScript(config.swipeRight, e), touchMoveXLength < 0 && Math.abs(
					touchMoveXLength) > config.threshold && runScript(config.swipeLeft, e), touchMoveYLength > 0 && Math.abs(
					touchMoveYLength) > config.threshold && runScript(config.swipeDown, e), touchMoveYLength < 0 && Math.abs(
					touchMoveYLength) > config.threshold && runScript(config.swipeUp, e), toucnMoveX = 0, touchStartX = 0,
				touchMoveXLength = 0, toucnMoveY = 0, touchStartY = 0, touchMoveYLength = 0
		}))
	}))
}, $.fn.hasAttr = function(attrname) {
	return $(this).is("[" + attrname + "]")
}, $.fn.BlockUi = function(options) {
	var config = {
		zindex: "10"
	};
	return $.extend(config, options), this.each((function() {
		"remove" == options ? $(this).find(".blockui").remove() : $(this).append(juicer(
			"<div class='blockui' style='z-index:${zindex}'></div>", config))
	}))
};
var isShowLoad = !1,
	showloadtimer, oldSpinnerIcon, curDialog;

function showLoad(options) {
	var msg = lng("載入中...", "Carregando...", "Loading...");
	"string" == typeof options && (msg = options, options = {});
	var config = {
		zindex: 1e3,
		msg: msg,
		size: "small",
		height: 16,
		theme: "",
		autohide: !1,
		autohidedelay: 2e3,
		autoscrolltop: !0,
		delayshow: !1,
		delay: 0
	};
	$.extend(config, options);
	var _create = function() {
		var lc = $("#pageloading");
		if (0 === lc.length) {
			showBlockui({
				bgcolor: "#222",
				zindex: config.zindex - 1
			}), $("body").append(juicer(getAppTemplate().uc_loading, config));
			var theCont = $("#pageloading .content"),
				cw = theCont.outerWidth() + 30,
				ch = theCont.outerHeight() + 2;
			$("#loading_wrapper").css(getLoadPosInfo(cw, ch)), isShowLoad = !0
		} else lc.find(">div").css({
			bottom: config.bottom
		}), lc.find(".msg").html(config.msg)
	};
	config.autohide && setTimeout((function() {
			hideload()
		}), config.autohidedelay), config.autoscrolltop && window.scrollTo(0, 0), config.delayshow ? showloadtimer =
		setTimeout((function() {
			_create()
		}), config.delay) : _create()
}

function hideLoad(delay, callback) {
	$("#pageloading").length > 0 && (delay = delay || 0, setTimeout((function() {
		isShowLoad = !1, hideBlockui(), $("#pageloading").remove(), clearTimeout(showloadtimer), runScript(callback)
	}), delay))
}

function chgLoadMsg(msg) {
	var pageloading = $("#pageloading");
	$("body").append("<span id='_newloadingmsg'></span>");
	var newloadmsg = $("#_newloadingmsg");
	newloadmsg.html(pageloading.find(".content").html()), newloadmsg.find(".msg").html(msg);
	var cw = newloadmsg.find("b").outerWidth() + 40;
	newloadmsg.remove(), pageloading.find(".msg").html(msg);
	var ch = pageloading.find(".msg").height();
	pageloading.css(getLoadPosInfo(cw, ch))
}

function removeAllSpinner() {
	$(".loading-spinner").remove()
}

function getAppFontSize() {
	return localStorage.getItem("appfontsize")
}

function setAppFontSize(size, elm) {
	size = size || 16, $("html,body").css({
		"font-size": size + "px"
	}), localStorage.setItem("appfontsize", size), appconfig.appfontsize = size, elm && ($("#setAppFontSize .btn").removeClass(
		"btn-default btn-info").addClass("btn-default"), elm.removeClass("btn-default").addClass("btn-info"))
}

function changePageFontsize(size) {
	"" == (size = $.trim((size || "").toLowerCase())) && (size = "s"), $("body").removeClass(
		"fontsize-lg fontsize-sm-2x lineheight-sm lineheight-lg"), "s" == size ? $("body").addClass(
		"fontsize-sm-2x lineheight-lg") : "l" == size && $("body").addClass("fontsize-lg lineheight-lg")
}

function isParentIframe() {
	return window.self !== window.top
}

function setParentIframeHeightBak(thePage) {
	try {
		isParentIframe() && (container = $("body,html", window.parent.document), container.find(
			"#cont_detail iframe:not('.noresize')").height(thePage.outerHeight() + 10))
	} catch (e) {}
}

function setParentIframeHeight(thePage) {
	try {
		if (isParentIframe()) {
			container = $("body,html", window.parent.document);
			var contDetail = container.find("#cont_detail");
			contDetail.length > 0 && (parentIframe = contDetail.find("iframe:not('.noresize'):visible")), 0 == parentIframe.length &&
				(parentIframe = container.find("iframe:not('.noresize'):visible")), parentIframe.length > 0 && (thePage ?
					parentIframe.height(thePage.outerHeight() + 10) : parentIframe.height(getScrollHeight() + 10))
		}
	} catch (e) {
		logme(e.message)
	}
}

function setWaitReadyToPrint(delay) {
	delay || (delay = 500), $("img").length > 0 ? $("img").load((function() {
		setTimeout((function() {
			window.status = "ready_to_print"
		}), delay)
	})) : window.status = "ready_to_print"
}

function getHtmlBody() {
	var container = $("body,html");
	try {
		isParentIframe() && (container = $("body,html", window.parent.document))
	} catch (e) {
		container = $("body,html")
	}
	return container
}

function goPageTop(top, speed) {
	setTimeout((function() {
		var c = getHtmlBody();
		0 == speed ? c.scrollTop(0) : c.animate({
			scrollTop: top || 0
		}, speed || 300)
	}), 0)
}

function goTop(speed, success) {
	goPageTo(0, speed || 300), setTimeout((function() {
		runScript(success)
	}), 350)
}

function goParentScrollTop(top) {
	try {
		if (isParentIframe()) {
			container = $("body,html", window.parent.document);
			var contDetail = container.find("#cont_detail");
			logme(contDetail.length), contDetail.length > 0 ? contDetail.parents(".scroller").scrollTop(top || 0) : container.scrollTop(
				top || 0)
		}
	} catch (e) {
		$("body,html").scrollTop(top || 0)
	}
}

function scrollToElement(scrollTo, container, speed, delta, success) {
	try {
		delta = delta || 0, 0 == (speed = speed || 300) ? setTimeout((function() {
			container.scrollTop(scrollTo.offset().top - container.offset().top + container.scrollTop() - delta)
		}), 0) : setTimeout((function() {
			container.animate({
				scrollTop: scrollTo.offset().top - container.offset().top + container.scrollTop() - delta
			}, speed, success)
		}), 0)
	} catch (e) {
		logme(e.message)
	}
}

function scrollToPageElement(scrollTo, speed) {

	speed = speed || 300;
	var container = getHtmlBody();
	container.find(".webpage-body>.scroller").length > 0 ? (container = container.find(".webpage-body>.scroller")).animate({
		scrollTop: scrollTo.offset().top - container.offset().top
	}, speed) : container.animate({
		scrollTop: scrollTo.offset().top - container.offset().top + container.scrollTop()
	}, speed)
}

function scrollToRequiredElm() {
	var container = $("body,html");
	try {
		window.self !== window.top && (container = $("body,html", window.parent.document))
	} catch (e) {
		container = $("body,html")
	}
	scrollToElement($(".required-field:first"), container, 0)
}

function dialog(options, success) {
	var self = this,
		ui;
	if ("close" == options) return $(".uc-dialog:last").trigger("hidden.bs.modal"), setTimeout((function() {
		runScript(success)
	}), 500), !1;
	if ("allclose" == options) return $(".uc-dialog").trigger("hidden.bs.modal"), setTimeout((function() {
		runScript(success)
	}), 500), !1;
	var config = {
			id: "_myDialog" + +new Date,
			title: "Dialog1",
			content: "",
			backdrop: "static",
			closebutton: !0,
			buttontype: "center",
			loading: !1,
			loadingmsg: lng("載入中....", "Loading....", "Loading...."),
			hasfooter: !0,
			hasheader: !0,
			keyboard: !1,
			scroller: !1,
			autoCenter: !1,
			autoMiddle: !1,
			autoCenterMiddle: !1,
			autoResize: !1,
			autoReiszeHeight: !1,
			autoResizeWidth: !1,
			external: !1,
			url: "",
			modalStyleCss: "",
			headerStyleCss: "",
			footerStyleCss: "",
			bodyStyleCss: "",
			backgroundClass: "",
			headerClass: "",
			footerClass: "",
			bodyClass: "",
			top: "10px",
			right: "auto",
			left: "auto",
			bottom: "auto",
			width: $(window).width() - 20,
			height: $(window).height() - 20,
			onShow: function() {},
			onHide: function() {},
			onClose: function() {}
		},
		defaultHeaderHeight = 56,
		defaultFooterHeight = 65;
	config = $.extend(config, getAppConfig()), "function" == typeof options ? success = options : config = $.extend(config,
		options);
	var ww = getWindowWidth(),
		wh = getWindowHeight();
	config.height > wh && (config.height = wh), config.hasheader && (config.height = config.height - 56), config.hasfooter &&
		(config.height = config.height - 65);
	var delta = 100;
	config.autoCenterMiddle ? (config.height = (config.hasheader ? 56 : 0) + (config.hasfooter ? 65 : 0), config.left = .5 *
		(ww - config.width), config.top = .5 * (wh - config.height - 100)) : config.autoCenter ? config.left = .5 * (ww -
		config.width) : config.autoMiddle && (config.height = (config.hasheader ? 56 : 0) + (config.hasfooter ? 65 : 0),
		config.top = .5 * (wh - config.height - 100)), config.height -= 5;
	var lastZindex = 1040;
	return this.create = function() {
		lastZindex = parseInt($(".uc-dialog:last").css("z-index")) || 2040, $("#" + config.id).remove(), $("body").append(
			juicer(getAppTemplate().uc_dialog, config)), (ui = $("#" + config.id)).css({
			"z-index": lastZindex + 2
		});
		var setDialogTop = function() {
			if (ui) {
				var dialog_top = $(window).scrollTop();
				ui.css({
					top: dialog_top
				})
			}
		};
		setDialogTop(), $(window).on("resize", (function(e) {
			setDialogTop()
		})), (config.autoResize || config.autoResizeHeight || config.autoResizeWidth) && (ui.addClass("auto-resize"), $(
			window).on("resize", (function(e) {
			if ($(".uc-dialog.auto-resize").length > 0) {
				var dialog = $(".uc-dialog"),
					ww = $(window).width() - 50,
					wh = $(window).height() - 200;
				ww > config.width && (config.autoResizeWidth || config.autoResize) && (ww = config.width), wh > config.height &&
					(config.autoResizeHeight || config.autoResize) && (wh = config.height), ww < 800 && (ww = 800), wh < 640 && (
						wh = 580), dialog.find(".modal-dialog").width(ww).height(wh), dialog.find(".modal-body").width(ww).css({
						"min-height": wh
					})
			}
		})));
		var thebody = ui.find(".modal-body");
		return 1 == config.external && (isIE8 ? thebody.find("iframe").ready((function() {
			removeAllSpinner();
			try {
				thebody.find(".iframe-loading").remove(), ui.trigger("external.load")
			} catch (e) {}
		})) : thebody.find("iframe").on("load", (function() {
			removeAllSpinner();
			try {
				thebody.find(".iframe-loading").remove(), ui.trigger("external.load")
			} catch (e) {}
		}))), curDialog = ui, config.buttons && $(config.buttons).each((function(k) {
			var action = config.buttons[k].action;
			action && ui.find("#" + config.buttons[k].id).on("click", (function(e) {
				return e.preventDefault(), self.destory(), setTimeout((function() {
					runScript(action, ui, self)
				}), 0), !1
			}))
		})), ui.on("shown.bs.modal", (function(e) {
			var hheight = ui.find(".modal-header").outerHeight() || 56;
			hheight > 56 && (config.height -= hheight - 56, ui.find(".modal-body").css({
				"min-height": config.height
			}));
			var fheight = ui.find(".modal-footer").outerHeight() || 65;
			fheight > 65 && (config.height -= fheight - 65, ui.find(".modal-body").css({
				"min-height": config.height
			})), $(".modal-backdrop:last").css({
				"z-index": lastZindex + 1
			}), "function" == typeof config.onShow && runScript(config.onShow, $(this), ui), setTimeout((function() {
				"function" == typeof success && runScript(success, $(this), ui)
			}), 300)
		})).on("hidden.bs.modal", (function(e) {
			runScript(config.onHide, $(this)), ui.fadeOut((function() {
				setTimeout((function() {
					self.destory(), runScript(config.onClose, $(this))
				}), 350)
			}))
		})), ui.modal({
			keyboard: config.keyboard,
			backdrop: config.backdrop
		}), ui
	}, this.destory = function() {
		ui.remove(), $(".modal-backdrop:last").remove(), 0 == $(".modal-backdrop:last").length && $(".modal-open:last").removeClass(
			"modal-open"), $("#InsertLink,#InsertTable").remove()
	}, this.hide = function() {
		ui.modal("hide")
	}, this.show = function() {
		ui.modal("show")
	}, this.update = function() {
		ui.modal("handleUpdate")
	}, this.toggle = function() {
		ui.modal("toggle")
	}, this.create()
}

function getCurDialog() {
	return $(".uc-dialog:visible:last")
}

function alertDialog(options, success) {
	try {
		document.activeElement.blur()
	} catch (e) {}
	var ww = $(window).width();
	ww = ww > 400 ? 400 : ww - 20;
	var config = {
		title: "<i class='fa fa-quote-left'></i> " + lng("提示", "Notificar", "Notice"),
		width: ww,
		height: 150,
		buttons: [{
			id: "btnOk",
			text: " &nbsp; <i class='fa fa-check'></i> OK &nbsp; ",
			theme: "",
			action: function() {
				runScript(success)
			}
		}],
		onShow: function(my, ui) {}
	};
	return "string" == typeof options ? config.content = options : $.extend(config, options), new dialog(config)
}

function confirmDialog(options, success) {
	document.activeElement.blur();
	var actionYes = function() {
			runScript(success, "yes")
		},
		actionNo = function() {
			runScript(success, "no")
		};
	return new dialog(options = $.extend({
		title: "<i class='glyphicon glyphicon-question-sign'></i> " + lng("確認", "Confirmação", "Confirm"),
		content: lng("是否確認?", "Tens a certeza?", "Are you sure?"),
		width: 400,
		height: 150,
		onHide: function() {
			runScript(success, "no")
		},
		buttons: [{
			id: "btnYes",
			text: " &nbsp; <i class='fa fa-check'></i> " + lng("是", "Sim", "Yes") + " &nbsp; ",
			theme: "",
			action: actionYes
		}, {
			id: "btnNo",
			text: " &nbsp; <i class='fa fa-remove'></i> " + lng("否", "Não", "No") + " &nbsp; ",
			theme: "",
			action: actionNo
		}]
	}, options))
}

function errorDialog(options, success) {
	var config = {
		content: "",
		backgroundClass: "bg-lightred"
	};
	"string" == typeof options ? config.content = options : $.extend(config, options), alertDialog(config, success)
}

function printReportDialog(data, options, success, onClose) {
	var config = {
		title: "",
		scroller: !0,
		loading: !1,
		keyboard: !0,
		title: "",
		width: $(window).width() - 50,
		height: $(window).height() - 10,
		buttons: [],
		reportname: "rpt" + +new Date,
		reporturl: "print.aspx?f=genPdf"
	};
	"object" == typeof options && $.extend(config, options);
	var sp = config.reporturl.indexOf("?") < 0 ? "?" : "&",
		p = [];
	$.each(data, (function(k, v) {
			p.push(k + "=" + v)
		})), p.push("cache=false"), p.push("time=" + +new Date), config.reporturl = config.reporturl + sp + p.join("&"),
		config.reporturl.indexOf("#view=FitH") < 0 && (config.reporturl = config.reporturl + "#view=FitH");
	var opt1 = {
		onShow: function(my, ui) {
			var theScroller = ui.find(".modal-body .scroller");
			setCurPageData(data), theScroller.renderPage("uc_report_main", config), setModalControlButtons(ui), runScript(
				success, data, ui), setIframeReady(ui, theScroller, (function() {
				ui.find(".loading-spinner").remove()
			}))
		},
		onClose: function() {
			runScript(onClose, data)
		}
	};
	new dialog($.extend(config, opt1))
}

function getModalScroller(ui) {
	return 0 == ui.find(".modal-body .scroller").length && ui.find(".modal-body").append("<div class='scroller'></div>"),
		ui.find(".modal-body .scroller")
}

function printIframe(elm) {
	setTimeout((function() {
		try {
			document.getElementById(elm).focus(), document.getElementById(elm).contentWindow.print()
		} catch (e) {
			logme(e.message)
		}
	}), 300)
}

function setIframeReady(ui, theScroller, onload) {
	var myIframe = theScroller.find("iframe");
	myIframe.height(theScroller.height() - 4), isIE8 ? myIframe.ready((function() {
		removeAllSpinner(), myIframe.removeClass("hide"), $("#btnPrint").removeClass("hide").show(), runScript(onload)
	})) : myIframe.on("load", (function() {
		removeAllSpinner(), myIframe.removeClass("hide"), $("#btnPrint").removeClass("hide").show(), runScript(onload)
	}))
}

function printScreen(block, cssurl) {
	var value = block.innerHTML,
		printPage = window.open("", "printPage", "");
	for (printPage.document.open(), printPage.document.write("<HTML><head></head>"), aCssUrl = (cssurl || "").split(","),
		k = 0; k < aCssUrl.length; k++) printPage.document.write("<link rel='stylesheet' href='" + getAppConfig().baseurl +
		"/" + aCssUrl[k] + "' type='text/css'  media='print'/>");
	printPage.document.write("<BODY onload='window.print();window.close()'>"), printPage.document.write("<PRE>"),
		printPage.document.write(value), printPage.document.write("</PRE>"), printPage.document.close("</BODY></HTML>")
}
$.fn.loadingSpinner = function(msg) {
	return this.each((function() {
		var sl = 14 * (msg = (msg || "").trim()).length * .5;
		"" === msg && (msg = lng("努力載入中....", "Loading....", "Loading....")), $(this).find(".loading-spinner").remove(),
			oldSpinnerIcon = $(this).find("i"), $(this).find(".fa-spin").remove(), $(this).append(juicer(
				"<span class='loading-spinner pos-center-middle' style='margin-left:-${shiftleft}px'><i class='fa fa-spinner fa-spin'></i> $${msg}</span>", {
					shiftleft: sl,
					msg: msg
				}))
	}))
}, $.fn.removeSpinner = function(newIcon) {
	return this.each((function() {
		$(this).find(".loading-spinner").remove(), newIcon ? $(this).append(newIcon) : $(this).append(oldSpinnerIcon)
	}))
}, $.fn.appendSpinner = function(custClass, spinSize) {
	return this.each((function() {
		"" == (spinSize = spinSize || "") && (spinSize = "fa-lg"), "" == (custClass = custClass || "") && (custClass =
			"fa fa-spinner fa-spin fa-fw " + spinSize), $(this).append("<i class='" + custClass + "'></i>")
	}))
}, $.fn.prependSpinner = function(custClass, spinSize) {
	return this.each((function() {
		"" == (spinSize = spinSize || "") && (spinSize = "fa-lg"), "" == (custClass = custClass || "") && (custClass =
			"fa fa-spinner fa-spin fa-fw " + spinSize), $(this).prepend("<i class='" + custClass + "'></i>")
	}))
}, $.fn.setSpinner = function(custClass, spinSize) {
	return this.each((function() {
		$(this).prependSpinner(custClass, spinSize)
	}))
}, $.fn.unSpinner = function() {
	return this.each((function() {
		$(this).find(".fa-spinner").remove()
	}))
}, $.fn.scrollTo = function(elm, speed) {
	return $(this).animate({
		scrollTop: $(this).scrollTop() - $(this).offset().top + $(elm).offset().top
	}, null == speed ? 1e3 : speed), this
}, $.fn.setHoverEvent = function() {
	isPC ? $(this).on("mouseenter", (function() {
		$(this).addClass("over")
	})).on("mouseleave", (function() {
		$(this).removeClass("over")
	})) : $(this).on("touchstart", (function() {
		$(this).addClass("over")
	})).on("touchend", (function() {
		$(this).removeClass("over")
	}))
}, $.fn.DataGrid = function(options) {
	var config = {
		height: "auto",
		width: "auto"
	};
	$.extend(config, options);
	var dg = $(this);
	return this.each((function() {
		var fhid, fcolid, cid, c, fcolfixcount, setTheadWidth = function() {
				dg.find("thead th:lt(" + fcolfixcount + ")").each((function(k) {
					$(this).width($(this).width())
				}))
			},
			setFloatTheadWidth = function() {
				var fh = $("#" + fhid);
				if (fh.length > 0) {
					fh.width(dg.width());
					var ths = fh.find("th");
					dg.find("thead th").each((function(k) {
						ths.eq(k).width($(this).width())
					}))
				}
			},
			setFloatColHeight = function() {
				var fcol = $("#" + fcolid);
				fcol.length > 0 && dg.find("tr").each((function(k) {
					fcol.find("tr").eq(k).height($(this).height())
				}))
			},
			setFloatColWidth = function() {
				var fcolh = $("#" + fcolid + "header"),
					fcol = $("#" + fcolid),
					fh = $("#" + fhid);
				dg.find(".col-fix").each((function(k) {
					fcol.find(".col-fix").eq(k).width($(this).width()), fcolh.find(".col-fix").eq(k).width($(this).width())
				})), fcol.css({
					width: "auto"
				}), fcolh.css({
					width: "auto"
				})
			};
		cid = "dgcontainer" + +new Date, dg.wrap("<div id='" + cid +
				"' class='datagrid-container pos-all' style='overflow:hidden;' ><div class='scroller'></div></div>"), c = $("#" +
				cid), "auto" != config.width && c.width(config.width), "auto" != config.height && c.height(config.height),
			"auto" == config.height && "auto" == config.width || c.css({
				overflow: "auto"
			});
		var fcoldg, fcol, fcolh, hzidx = 100;
		setTheadWidth();
		var fhid = "_fheader" + +new Date,
			fh = dg.clone(!0).addClass("pos-top bg-white").css({
				"z-index": 100
			}).attr("id", fhid).attr("srcdgid", dg.attr("id")),
			theScroller;
		if (fh.addClass("datagrid-float-header"), fh.find(".col-fix").removeClass("col-fix"), fh.find("tbody,tfoot").remove(),
			fh.removeClass("datagrid"), c.append(fh), setFloatTheadWidth(), (fcolfixcount = dg.find(".col-fix").length - 1) >=
			0) {
			var fcolzidx = 99;
			fcolid = "_fcol" + fcolfixcount + +new Date, fcol = dg.clone(!0).addClass("").css({
					"z-index": 99,
					"background-color": "#f2fbfc"
				}).attr("id", fcolid), (fcolh = fh.clone(!0).addClass("pos-top-left bg-white").css({
					"z-index": 101
				}).attr("id", fcolid + "header")).find("th:gt(" + fcolfixcount + ")").remove(), fcol.find("thead tr:gt(0)").remove(),
				fcol.css({
					width: "auto"
				}).removeClass("datagrid"), fcol.find("tr").each((function() {
					$(this).find("td").length > 0 ? $(this).find("td:gt(" + fcolfixcount + ")").remove() : $(this).find("th").length >
						0 && $(this).find("th:gt(" + fcolfixcount + ")").remove()
				})), fcolh.width(fcol.width()).find("th").height(fh.height()), fcolh.addClass("datagrid-float-col-header").removeClass(
					"datagrid datagrid-float-header"), fcol.find("thead th").height(fh.height());
			var theScroller = c.find(">.scroller");
			fcoldg = "<div class='pos-left datagrid-float-colfix' style='z-index:99;background-color:#f2fbfc'></div>",
				theScroller.length > 0 ? (theScroller.append(fcoldg), theScroller.find(".datagrid-float-colfix").append(fcol),
					c.append($("#" + fhid).css({
						"z-index": 98
					})), c.append(fcolh)) : (c.append(fcoldg), c.find(".datagrid-float-colfix").append(fcol), c.append(fcolh)),
				fcoldg = fcol.parents(".datagrid-float-colfix"), setTimeout((function() {
					fcoldg.height(fcol.outerHeight())
				}), 100), setFloatColHeight(), setFloatColWidth()
		}($(window).on("resize", (function() {
			fh && setTimeout((function() {
				setFloatTheadWidth(), setFloatColHeight(), setFloatColWidth()
			}), 0)
		})).resize(), "auto" == config.height) ? -1 == (theScroller = c.find(">.scroller")).length ? (theScroller = c.parents(
			".scroller")).on("scroll", (function() {
			fh.css({
				top: $(this).scrollTop() - 1
			}), fcoldg && (fcolh.css({
				left: $(this).scrollLeft(),
				top: $(this).scrollTop() - 1
			}), fcoldg.css({
				left: $(this).scrollLeft() - 1
			}))
		})) : theScroller.length > 0 ? theScroller.on("scroll", (function() {
			$(".datagrid-float-header:last").length > 0 && $(".datagrid-float-header:last").css({
				left: -$(this).scrollLeft()
			}), fcoldg && (fh.css({
				left: -$(this).scrollLeft()
			}), fcoldg.css({
				left: $(this).scrollLeft() - 1
			}), $(this).scrollLeft() > 0 ? fcoldg.addClass("filter-shadow-sm") : fcoldg.removeClass("filter-shadow-sm"))
		})) : $(window).on("scroll", (function() {
			fh && (fh.css({
				top: $(this).scrollTop() + c.offset().top
			}), fcol && (fcolh.css({
				left: $(this).scrollLeft(),
				top: $(this).scrollTop() + c.offset().top
			}), fcoldg.css({
				left: $(this).scrollLeft() + c.offset().left
			})))
		})): c.on("scroll", (function() {
			var p_top = $(this).scrollTop();
			fh.css({
				top: $(this).scrollTop()
			}), fcolh.css({
				left: $(this).scrollLeft(),
				top: $(this).scrollTop()
			}), fcoldg.css({
				left: $(this).scrollLeft()
			})
		}));
		c.off("refresh").on("refresh", (function() {
			logme("datagrid-refresh"), setFloatTheadWidth(), setFloatColHeight(), setFloatColWidth()
		})).off("destroy").on("destroy", (function() {
			$(this).parents("[id^='dgcontainer']").remove()
		}))
	}))
}, $.fn.DataGridPager = function(options) {
	var pager = $(this),
		config = {
			onfirst: function() {},
			onlast: function() {},
			onprev: function() {},
			onnext: function() {}
		};
	if ($.isFunction(options)) {
		var f = options;
		config = {
			onFirst: options,
			onLast: options,
			onPrev: options,
			onNext: options
		}
	} else $.extend(config, options);
	return this.each((function() {
		pager.length > 0 && (pager.find("[aria-label='first']").on("click", (function(e) {
			e.preventDefault();
			var curpg = $(this).data("pg");
			return runScript(config.onFirst, {
				pg: curpg
			}), pager.trigger("pager-first", [curpg]), !1
		})), pager.find("[aria-label='prev']").on("click", (function(e) {
			e.preventDefault();
			var curpg = $(this).data("pg");
			return runScript(config.onPrev, {
				pg: curpg
			}), pager.trigger("pager-prev", [curpg]), !1
		})), pager.find("[aria-label='next']").on("click", (function(e) {
			e.preventDefault();
			var curpg = $(this).data("pg");
			return runScript(config.onNext, {
				pg: curpg
			}), pager.trigger("pager-next", [curpg]), !1
		})), pager.find("[aria-label='last']").on("click", (function(e) {
			e.preventDefault();
			var curpg = $(this).data("pg");
			return runScript(config.onLast, {
				pg: curpg
			}), pager.trigger("pager-last", [curpg]), !1
		})), pager.find("[aria-label='npg']").on("click", (function(e) {
			e.preventDefault();
			var curpg = $(this).data("pg");
			return runScript(config.onPrev, {
				pg: curpg
			}), pager.trigger("pager-npg", [curpg]), !1
		})))
	}))
};
var appendCSS = function(href) {
		var cssLink = $("<link rel='stylesheet' type='text/css' href='" + href + "'>");
		$("head").append(cssLink)
	},
	appendJS = function(src) {
		var jsLink = $("<script type='text/javascript' src='" + src + "'>");
		$("head").append(jsLink)
	},
	myVidPlayer;
/*! loadJS: load a JS file asynchronously. [c]2014 @scottjehl, Filament Group, Inc. (Based on http://goo.gl/REQGQ by Paul Irish). Licensed MIT */
function loadJS(src, cb) {
	"use strict";
	var ref = window.document.getElementsByTagName("script")[0],
		script = window.document.createElement("script");
	return script.src = src, script.async = !0, ref.parentNode.insertBefore(script, ref), cb && "function" == typeof cb &&
		(script.onload = cb), script
}

function Vpage(options) {
	var thePage, config = {
		scroller: !1
	};
	$.extend(config, options), this.create = function(options) {
		$.extend(config, options), $("body").append(juicer(getAppTemplate().uc_vpage, config)), thePage = $(".vpage:last"),
			config.scroller && thePage.html(".vpage-body").addClass("scroller");
		var ww = $(window).width(),
			hh = $(window).height();
		return thePage.width(ww), $(window).on("resize orientationchange", (function(e) {
			if (thePage) {
				var ww = $(window).width(),
					hh = $(window).height();
				thePage.width(ww)
			}
		})), thePage
	}, this.show = function(options, success) {
		$.isFunction(options) ? success = options : $.extend(config, options), this.create(), thePage.animate({
			left: 0
		}, (function() {
			setTimeout((function() {
				runScript(success, thePage)
			}), 100)
		}))
	}, this.setTitle = function(title) {
		this.getLastPage().find(".vpage-title").html(title)
	}, this.getLastPage = function() {
		return $(".vpage:last")
	}, this.backPage = function(callback) {
		var theLastPage = this.getLastPage();
		theLastPage.animate({
			left: theLastPage.width()
		}, (function() {
			theLastPage.remove(), runScript(callback)
		}))
	}
}

function Slpage(options) {
	var self = this,
		_curPageIndex = 0,
		thePage, theBody, theWrapper, config = {
			showheader: !0,
			showfooter: !0
		};
	$.extend(config, options), this.create = function(options) {
		var config_scroller = !1;
		return $("body").append(juicer(getAppTemplate().uc_slpage_main, getAppConfig())), thePage = $(".slpage-main"),
			theBody = thePage.find(".slpage-main-body"), (theWrapper = theBody.find(">div")).width(thePage.width() * self.getPageCount())
			.height(thePage.height()), $(window).on("resize", (function(e) {
				if (thePage) {
					var ww = thePage.width(),
						hh = thePage.height();
					self.getPages().width(ww).height(hh);
					var lw = thePage.width() * self.getPageCount();
					theWrapper.width(lw), theBody.scrollLeft(lw)
				}
			})), thePage
	}, this.add = function(options) {
		$.extend(config, options);
		var w = thePage.width(),
			h = thePage.height();
		theWrapper.append(juicer(getAppTemplate().uc_slpage, $.extend({}, config, {
			width: w,
			height: h
		}))), theWrapper.width(thePage.width() * self.getPageCount());
		var newPage = self.getLastPage();
		return _curPageIndex = self.getPageIndex(newPage), self.getPages().removeClass("active"), newPage.addClass("active"),
			newPage
	}, this.show = function(idx, success) {
		$.isFunction(options) && (idx = 0), "object" == typeof idx && (idx = self.getPageIndex(idx)), _curPageIndex = idx ||
			0, theBody.animate({
				scrollLeft: idx * thePage.width()
			}, (function() {
				setTimeout((function() {
					runScript(success, thePage)
				}), 100)
			}))
	}, this.setTitle = function(title) {
		this.getActivePage(_curPageIndex || 0).find(".slpage-title").html(title)
	}, this.backPage = function(callback) {
		theBody.animate({
			scrollLeft: "-=" + thePage.width() + "px"
		}, (function() {
			self.getPageCount() > 1 && self.getLastPage().remove(), self.getPages().removeClass("active"), self.getLastPage()
				.addClass("active"), theWrapper.width(thePage.width() * self.getPageCount()), runScript(callback)
		}))
	}, this.removePage = function(idx) {
		idx && (this.getActivePage(idx).remove(), -1 == idx && self.getPageCount(), idx == _curPageIndex && (_curPageIndex =
			(self.getPageCount() || 0) - 1))
	}, this.getPageCount = function() {
		return self.getPages().length
	}, this.getPageIndex = function(item) {
		return self.getPages().index(item)
	}, this.getActivePage = function(idx) {
		return thePage.find(".slpage.active")
	}, this.getPages = function() {
		return thePage.find(".slpage")
	}, this.getLastPage = function() {
		return thePage.find(".slpage:last")
	}, this.appendContentTo = function(idx, s) {
		"object" == typeof idx && (idx = thePage.find(".slpage").index(idx)), "last" == idx && (idx = -1), this.getActivePage(
			idx).find(".slpage-body").append(s)
	}
}

function smalltips(msg, options, success) {
	var config = {
		zIndex: 9990,
		shiftpos: 60,
		bg: "bg-black",
		styleClass: "",
		styleCss: "",
		delay: 2500
	};
	$.isFunction(options) ? success = options : $.extend(config, options);
	var uiid = "_smalltips",
		pos = "pos-bottom",
		shiftpos = "bottom:" + (config.shiftpos || 0) + "px",
		showeffect = "fadeIn",
		hideeffect = "fadeOut";
	pos = "pos-top", shiftpos = "top:" + (config.shiftpos || 0) + "px", showeffect = "bounceInDown", hideeffect =
		"bounceOutUp";
	var c = $("#" + uiid);
	c.remove();
	var tpl =
		"<div id='${uiid}' class='${pos} ' style='z-index:${zIndex};display:none;margin:3px;${shiftpos}'><center><span class='opacity90 text-white fontsize-sm-2x corner-xxx ${styleClass} ${bg}' style='font-size: 150%;display: block;padding:8px;line-height:150%;${styleCss}'>$${msg}</span></center></div>";
	$("body").append(juicer(tpl, {
			uiid: uiid,
			pos: pos,
			shiftpos: shiftpos,
			showeffect: showeffect,
			msg: msg,
			bg: config.bg,
			zIndex: config.zIndex
		})), (c = $("#" + uiid)).show().addClass("animated " + showeffect),
		setTimeout((function() {
			c.removeClass(showeffect).addClass(hideeffect),
				setTimeout((function() {
					c.remove()
				}), 1600)
		}), config.delay),
		setTimeout((function() {
			runScript(success)
		}), 300)
}

function SlideBox(options, success) {
	var thePage = getCurPage(),
		config = {
			zindex: 5e3,
			content: "",
			title: "",
			width: 0,
			height: 0,
			left: 0,
			top: 0,
			external: !1,
			url: "",
			position: "center",
			size: "full"
		},
		thebox, calsize = function(options) {
			var p, left = thePage.offset().left + config.left,
				top = $(window).scrollTop() + config.top,
				ml = "0px",
				mt = "0px",
				ww = options.width || 0,
				wh = options.height || 0,
				rt;
			return 0 == ww && 0 == wh ? options.size : options.size = "", "full" == options.size && (ww = thePage.width(), wh =
				window.innerHeight), "center" == options.position ? (left = "50%", top += "px", ml = "-" + (ml = .5 * ww) + "px",
				mt = "-" + (mt = 0) + "px") : (left += "px", top += "px"), {
				width: ww,
				height: wh,
				left: left,
				top: top,
				marginleft: ml,
				margintop: mt
			}
		};
	$("body,html").addClass("noscrollbar");
	var create = function() {
		0 == (thebox = $("#_slide_box")).length && ($("body").append(juicer(getAppTemplate().uc_slidebox, config)), thebox =
				$("#_slide_box")), thebox.data("o-width", config.width).data("o-height", config.height).fadeIn(), theboxcontent =
			thebox.find(".slide-box-content"), $(window).resize((function() {
				var thebox = $("#_slide_box");
				if (thebox.length > 0) {
					var setWidth = function(w) {
							thebox.width(w - parseInt(thebox.css("left").replace("px", ""))), thebox.width(w), thebox.find("iframe").length >
								0 && thebox.find("iframe").width(thebox.find(".slide-box-content").width())
						},
						setHeight = function(h) {
							thebox.height(h), thebox.find("iframe").length > 0 && thebox.find("iframe").height(thebox.find(
								".slide-box-content").height())
						},
						ww = window.innerWidth,
						wh = window.innerHeight,
						ow = thebox.data("o-width"),
						oh = thebox.data("o-height");
					thebox.width() > ww ? setWidth(ww) : ow < ww && setWidth(ow), thebox.height() > wh ? setHeight(wh) : oh < wh &&
						setHeight(oh)
				}
			})), config.external ? (theboxcontent.html(juicer(getAppTemplate().uc_iframe, {
				url: config.url
			})), theboxcontent.css({
				overflow: "hidden"
			}).find("iframe").height(thebox.height() - thebox.find(".slide-box-header").height()).width(thebox.width() - 2).css({
				"border-top": "1px solid #aaa"
			}).on("load", (function() {
				var theIframe = $(this);
				$(this).height(theboxcontent.height()), setTimeout((function() {
					runScript(success, theboxcontent, thebox)
				}), 1e3)
			}))) : (theboxcontent.scroll((function() {
				$(this).scrollTop() > thebox.find(".slide-box-header").height() ? thebox.find(".slide-box-header").addClass(
					"filter-shadow-sm") : thebox.find(".slide-box-header").removeClass("filter-shadow-sm")
			})), setTimeout((function() {
				runScript(success, theboxcontent, thebox)
			}), 100))
	};
	setTimeout((function() {
		$.isFunction(options) ? (success = options, options = {}) : $.extend(config, options, calsize($.extend({}, config,
			options))), create()
	}), 300)
}

function closeSlideBox() {
	thebox = $("#_slide_box"), thebox.fadeOut(300, (function() {
		$(this).remove()
	})), $("#_slide_box_blockui").remove(), $("body,html").removeClass("noscrollbar")
}

function VideoPlayer(videodata, title) {
	var vplayer = $("#_video_player");
	if (0 == vplayer.length) {
		videodata.width >= 600 && (videodata.width = isMobile ? .9 * $(window).width() : 600), videodata.height = .67 *
			videodata.width;
		var html = juicer(getAppTemplate().uc_vidplayer, {
			videodata: videodata
		});
		$("body").append(html), setVideoPlayerEvents(vplayer = $("#_video_player"))
	}
	$("body,html").addClass("noscrollbar"), showBlockui({
		zindex: 1900
	});
	try {
		vplayer.show()
	} catch (e) {
		logme(e.message)
	}
	$(".video-player-title").html(title || "")
}

function closeVideoPlayer() {
	myVidPlayer && myVidPlayer.dispose(), $("#_video_player").remove(), hideBlockui(), $("body,html").removeClass(
		"noscrollbar")
}

function setVideoPlayerEvents(thePage, options) {
	var config = {
		autoplay: !1,
		loop: !1
	};
	$.extend(config, options);
	try {
		if (thePage && thePage.find(".video-js").length > 0) {
			var vidplayid = thePage.find(".video-js").attr("id");
			myVidPlayer = videojs(vidplayid, {
				techOrder: ["flash", "html5"]
			}, (function() {
				this.on("ended", (function() {
					config.loop && this.play()
				}))
			}))
		}
	} catch (e) {
		logme(e.message)
	}
}

function setSwiperSlider(thePage) {
	if (thePage.find(".swiper-container").length > 0) var swiper = new Swiper(".swiper-container", {
		pagination: ".swiper-pagination",
		nextButton: ".swiper-button-next",
		prevButton: ".swiper-button-prev",
		paginationClickable: !0,
		spaceBetween: 30,
		centeredSlides: !0,
		autoplay: 5e3,
		autoplayDisableOnInteraction: !1,
		loop: !0
	})
}

function getGeoLcationDistance(lat1, lat2, lon1, lon2) {
	var R = 6371,
		dLat = (lat2 - lat1).toRad(),
		dLon = (lon2 - lon1).toRad();
	lat1 = parseFloat(lat1).toRad(), lat2 = parseFloat(lat2).toRad();
	var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(
			lat2),
		c, d;
	return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))
}

function getDistanceDsp(d) {
	var km, mi;
	return Math.floor(100 * d) / 100 + "Km - " + Math.floor(.621371 * d * 100) / 100 + "Miles"
}

function setGoogleMap(lat, lng, content) {
	var init_map;
	(function() {
		var myOptions = {
			zoom: 15,
			center: new google.maps.LatLng(lat, lng),
			mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		map = new google.maps.Map(document.getElementById("gmap_canvas"), myOptions), marker = new google.maps.Marker({
			map: map,
			position: new google.maps.LatLng(lat, lng)
		}), infowindow = new google.maps.InfoWindow({
			content: content
		}), google.maps.event.addListener(marker, "click", (function() {
			infowindow.open(map, marker)
		})), infowindow.open(map, marker)
	})()
}

function getMap(options) {
	var config = {
		width: 500,
		height: 500,
		title: "",
		desc: "",
		maptype: "roadmap",
		zoom: "17",
		lon: "22.1944243",
		lat: "113.54637279999997",
		q: "Macau"
	};
	$.extend(config, options), "full" == (config.size || "") && (config.width = 0, config.height = 0), SlideBox(config, (
		function(container, ui) {
			config.width = container.width(), config.height = container.height(), container.html(juicer(getAppTemplate().uc_maps,
				config))
		}))
}

function showGoogleMap(options, success) {
	var config = {
		width: 600,
		height: 500,
		address: "",
		lat: "",
		lon: "",
		mapz: 16,
		zoom: 15,
		title: lng("地理位置圖", "Mapa de localização", "Location map"),
		onShow: function() {},
		onClose: function() {},
		onHide: function() {}
	};
	isMobile && (config.width = .95 * $(window).width(), config.height = .79 * $(window).height()), $.extend(config,
			options), config.height > getWindowHeight() && (config.height = getWindowHeight()), config.width > getWindowWidth() &&
		(config.width = getWindowWidth()), logme(config);
	var q = config.address;
	"" == config.address && (config.lat = "113.5351332", config.lon = "22.1619078", q = config.lat + "," + config.lon,
		config.mapz = 13, q = "macau"), "" == config.title && (config.title = lng("地理位置圖", "Mapa de localização",
		"Location map"));
	var ifheight = config.height - 120,
		url = window.location.protocol + "//maps.google.com/maps?f=q&hl=zh-TW&geocode=&q=" + q + "&z=" + config.mapz +
		"&output=embed&t=";
	logme(url), new dialog({
		title: config.title || "",
		width: config.width,
		height: config.height,
		content: juicer(
			"<iframe style='width:${width}px;height:${height}px'  frameborder=0 scrolling='no' marginheight='0' marginwidth='0' src='${url}'></iframe>", {
				width: config.width,
				height: ifheight,
				url: url
			}),
		scroller: !1,
		loading: !1,
		keyboard: !0,
		onShow: function(my, ui) {
			runScript(config.onShow, ui)
		},
		onClose: function(my, ui) {
			runScript(config.onClose, ui)
		},
		onHide: function(my, ui) {
			runScript(config.onHide, ui)
		}
	})
}

function getGeoLocation(success, fail) {
	try {
		var geolocation;
		if (null == window.navigator.geolocation) alert("此瀏覽器不支援地理定位功能!"), runScript(fail);
		else window.navigator.geolocation.getCurrentPosition((function(position) {
			runScript(success, position)
		}))
	} catch (e) {
		alert(e.message)
	}
}
$.fn.GoogleMapClick = function(options, success, fail) {
	return this.each((function() {
		$(this).find("[target='map']").on("click", (function(e) {
			e.preventDefault(), e.stopPropagation();
			try {
				var title = $.trim($(this).attr("title") || ""),
					address = $.trim($(this).attr("address") || ""),
					officehour = $.trim($(this).attr("officehour") || ""),
					contact = $.trim($(this).attr("contact") || ""),
					icon = $.trim($(this).attr("icon") || ""),
					location = $.trim($(this).attr("location") || ""),
					description = $.trim($(this).attr("description") || "");
				if ("" == title && (title = $(this).text() || ""), isParentIframe()) {
					var url = "?f=getMapInfo&lang=" + getAppConfig().lang + "&rowid=" + $.trim($(this).attr("rowid") || "") +
						"&loc=" + encodeURIComponent(location || "") + "&title=" + encodeURIComponent(title || "") + "&addr=" +
						encodeURIComponent(address || "");
					return window.open(url, "IWebPageConnector"), !1
				}
				var onShow = function(ui) {
					var info = {};
					info.address = address.replace(/\\n/g, "<br>"), info.officehour = officehour.replace(/\\n/g, "<br>"), info
						.contact = contact.replace(/\\n/g, "<br>"), info.icon = icon, $(description) ? info.description = $(
							description).html() || "" : info.description = description;
					var s =
						"<div class='map-description bg-white bordered-top pos-bottom padding-lg lineheight-lg filter-shadow' style='z-index:1000'>{@if description!==''}<div class='padding-default'>$${description}</div>{@else}{@if icon!==''}<div class='pull-left padding-lg'><img src='${icon}' style='width:60px;height:60px;'></div>{@/if}{@if address!==''}${lng('地址:','Endereço:','Address:')}$${address}<br>{@/if}{@if officehour!==''}${lng('辦公時間:','Expediente:','Office Hour:')}$${officehour}<br>{@/if}{@if contact!==''}${lng('聯絡:','Contato:','Contact:')}$${contact}{@/if}{@/if}";
					ui.find(".modal-body").append(juicer(s, info));
					var ifheight = parseInt((ui.find(".modal-body").css("min-height") || "").replace(/px/g, "")) || 0;
					ui.find("iframe").height(ifheight - ui.find(".map-description").outerHeight()), runScript(success, info)
				};
				showGoogleMap($.extend({}, options, {
					address: location,
					title: title,
					onShow: onShow
				}))
			} catch (e) {
				runScript(fail, e)
			}
			return !1
		}))
	}))
};
var appStartTime = new Date,
	checkAlive = function() {
		var appCurTime = new Date,
			curMins, isShowSaver;
		if (new Date(appCurTime.getTime() - appStartTime.getTime()).getMinutes() >= (appconfig.appsaverdelay || 15) && 0 == $(
				".app-screen-saver").length) {
			var tpl =
				"<div class='app-screen-saver blockui bg-black' style='z-index:9999'></div><div class='app-screen-saver-msg pos-center-middle fontsize-2x'>Screen Saver</div>";
			$("body").append()
		}
	},
	getScreenSaverInit = function() {
		setInterval(checkAlive, 1e3), $(document).on("click", (function(e) {
			$(".app-screen-saver,.app-screen-saver-msg").remove(), appStartTime = new Date
		}))
	};

function exportHtmlTable2Excel(dgWrapper, xlsfname, options) {
	var config = {
		headercolor: "#000"
	};
	if (dgWrapper.length > 0) {
		$.extend(config, options), xlsfname = "" !== (xlsfname = $.trim(xlsfname || "")) ? xlsfname : "export_table_" + Math.floor(
			9999999 * Math.random() + 1e6);
		var export_data = "";
		if (export_data += "<table border='2px' bgcolor='" + config.headercolor + "'>", export_data += 0 == dgWrapper.find(
				"table").length ? dgWrapper.html() : dgWrapper.find("table").html(), export_data += "</table>", $("body").append(
				"<iframe id='IxlsExport' name='IxlsExport' style='display:none'></iframe>"), isIE) {
			var IExport = document.getElementById("IxlsExport");
			myIframe = IExport.contentWindow || IExport.contentDocument.document || IExport.contentDocument, myIframe.document.open(
					"txt/html", "replace"), myIframe.document.write(export_data), myIframe.document.close(), myIframe.focus(), sa =
				myIframe.document.execCommand("SaveAs", !0, xlsfname + ".xls")
		} else {
			var data_type = "data:application/vnd.ms-excel",
				a = document.createElement("a");
			a.href = data_type + ", " + encodeURIComponent(export_data), a.download = xlsfname + ".xls", a.click()
		}
		setTimeout((function() {
			$("#IxlsExport").remove()
		}), 0)
	}
}

function ssbox(options, success) {
	var ssbox, isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent),
		setMobileSize = function() {
			if (isMobile && (config.width = getViewport().width, config.height = getViewport().height, ssbox)) {
				var mw = config.width / 2,
					mh = config.height / 2,
					top = $(window).scrollTop(),
					left = $(window).scrollLeft() - 1;
				$(".ssbox-shadow").width(config.width).height(config.height).css({
					left: left,
					top: top,
					margin: 0
				}), ssbox.width(config.width).height(config.height).css({
					left: left,
					top: top,
					margin: 0
				}), $(".ssbox-blockui").height(getScrollHeight())
			}
		},
		config = {
			footer: !1,
			scrolly: !1,
			scrollx: !1,
			showmap: !1,
			map: {
				lon: "",
				lat: "",
				content: "",
				width: 440,
				height: 700
			},
			content: "",
			url: "",
			title: "",
			width: 700,
			height: 640,
			isMobile: isMobile,
			onLoad: function() {},
			onBeforeClose: function() {},
			onClose: function() {}
		};
	$.extend(config, options);
	var ww = $(window).width(),
		wh = $(window).height(),
		scrolltop = $(window).scrollTop(),
		id = "_ssbox";
	$("#_ssbox").remove(), $("body").append(juicer(getAppTemplate().uc_ssbox, $.extend(config, {
		id: id
	}))), ssbox = $("#_ssbox"), $("body").addClass("noscrollbar"), isMobile && ssbox.find(".ssbox-header").on(
		"touchmove touchstart", (function(e) {
			e.stopPropagation()
		})).on("touchmove", (function(e) {
		e.stopPropagation(), e.preventDefault()
	})), ssbox.on("close", (function(e) {
		var theBox = $(this);
		runScript(config.onBeforeClose, ssbox), setTimeout((function() {
			theBox.remove(), $(".ssbox-blockui,.ssbox-shadow").remove(), $("body").removeClass("noscrollbar"), setTimeout(
				(function() {
					runScript(config.onClose)
				}), 300)
		}), 300)
	})), ssbox.attr("orgwidth", config.width).attr("orgheight", config.height);
	var updatePos = function() {
			if (!$("body").hasClass("noscrollbar"))
				if (isMobile) setMobileSize();
				else if (scrolltop > 0) {
				var mw = config.width / 2,
					mh = config.height / 2,
					top = scrolltop + (wh - scrolltop) / 2;
				ssbox.css({
					top: ssbox.offset().top + $(window).scrollTop() + mh
				}), $(".ssbox-shadow").css({
					top: $(".ssbox-shadow").offset().top + $(window).scrollTop() + mh - 10
				})
			}
		},
		updateSize = function() {
			if (isMobile) setMobileSize();
			else {
				var bheight = getScrollHeight(),
					bwidth = $("body").width();
				config.width > ww ? config.width = ww - 20 : config.width = ssbox.attr("orgwidth"), config.height > wh ? config.height =
					wh : config.height = ssbox.attr("orgheight");
				var mw = config.width / 2,
					mh = config.height / 2,
					left = "50%",
					top = "50%";
				top = scrolltop + (wh - scrolltop) / 2, $(".ssbox-shadow").width(config.width).height(config.height).css({
					"margin-left": -(mw - 10),
					"margin-top": -(mh - 10),
					top: top,
					left: left
				}), ssbox.width(config.width).height(config.height).css({
					"margin-left": -mw,
					"margin-top": -mh,
					top: top,
					left: left
				}), $(".ssbox-blockui").height(bheight)
			}
			updatePos()
		};
	updateSize(), isMobile ? $(window).resize((function() {
		$(".ssbox-blockui").length > 0 && updateSize()
	})) : $(window).resize((function() {
		$(".ssbox-blockui").length > 0 && updateSize()
	})).scroll((function() {
		$(".ssbox-blockui").length > 0 && updatePos()
	})), 1 == config.footer && ssbox.find(".ssbox-content").css({
		bottom: 30
	}), 1 == config.scrolly && ssbox.find(".ssbox-content").css({
		"overflow-y": "auto"
	}), 1 == config.scrollx && ssbox.find(".ssbox-content").css({
		"overflow-x": "auto"
	}), config.showmap && setTimeout((function() {
		setGoogleMap(config.map.lat, config.map.lon, config.map.content)
	}), 300), setTimeout((function() {
		runScript(success, ssbox)
	}), 300)
}

var hideAddress = true;
